<?xml version="1.0" encoding="UTF-8"?>
  <testsuites tests="427" disabled="6" errors="0" failures="0" time="2584.0220522">
      <testsuite name="nginx-ingress-controller e2e suite" package="/" tests="427" disabled="0" skipped="6" errors="0" failures="0" time="2584.0220522" timestamp="2023-07-16T23:07:34">
          <properties>
              <property name="SuiteSucceeded" value="true"></property>
              <property name="SuiteHasProgrammaticFocus" value="false"></property>
              <property name="SpecialSuiteFailureReason" value=""></property>
              <property name="SuiteLabels" value="[]"></property>
              <property name="RandomSeed" value="1689548853"></property>
              <property name="RandomizeAllSpecs" value="true"></property>
              <property name="LabelFilter" value=""></property>
              <property name="FocusStrings" value=""></property>
              <property name="SkipStrings" value="\[Memory Leak\]"></property>
              <property name="FocusFiles" value=""></property>
              <property name="SkipFiles" value=""></property>
              <property name="FailOnPending" value="false"></property>
              <property name="FailFast" value="true"></property>
              <property name="FlakeAttempts" value="2"></property>
              <property name="DryRun" value="false"></property>
              <property name="ParallelTotal" value="7"></property>
              <property name="OutputInterceptorMode" value=""></property>
          </properties>
          <testcase name="[It] [Annotations] backend-protocol - GRPC should use grpc_pass in the configuration file" classname="nginx-ingress-controller e2e suite" status="passed" time="38.5399424">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:07:34.215&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:07:47.677 (13.462s)&#xA;&gt; Enter [It] should use grpc_pass in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:43 @ 07/16/23 23:07:47.677&#xA;&lt; Exit [It] should use grpc_pass in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:43 @ 07/16/23 23:08:11.636 (23.993s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:11.636&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:12.72 (1.084s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] reuse-port reuse port should be disabled" classname="nginx-ingress-controller e2e suite" status="passed" time="38.2217212">
              <system-err>&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:12.728&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:26.952 (14.224s)&#xA;&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 07/16/23 23:08:26.952&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 07/16/23 23:08:40.053 (13.136s)&#xA;&gt; Enter [It] reuse port should be disabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:44 @ 07/16/23 23:08:40.053&#xA;&lt; Exit [It] reuse port should be disabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:44 @ 07/16/23 23:08:50.288 (10.235s)&#xA;&gt; Enter [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:50.289&#xA;&lt; Exit [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:50.915 (626ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] reuse-port reuse port should be enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="31.712009899999998">
              <system-err>&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:50.916&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:00.386 (9.47s)&#xA;&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 07/16/23 23:09:00.386&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 07/16/23 23:09:11.506 (11.154s)&#xA;&gt; Enter [It] reuse port should be enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:52 @ 07/16/23 23:09:11.506&#xA;&lt; Exit [It] reuse port should be enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:52 @ 07/16/23 23:09:21.824 (10.319s)&#xA;&gt; Enter [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:21.824&#xA;&lt; Exit [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:22.594 (769ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] reuse-port reuse port should be enabled by default" classname="nginx-ingress-controller e2e suite" status="passed" time="23.5019204">
              <system-err>&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:22.602&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:31.342 (8.739s)&#xA;&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 07/16/23 23:09:31.342&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 07/16/23 23:09:42.441 (11.134s)&#xA;&gt; Enter [It] reuse port should be enabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:38 @ 07/16/23 23:09:42.441&#xA;&lt; Exit [It] reuse port should be enabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:38 @ 07/16/23 23:09:45.658 (3.217s)&#xA;&gt; Enter [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:45.658&#xA;&lt; Exit [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:46.07 (411ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should pass URL-encoded certificate to upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="27.9608455">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:46.071&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:55.04 (8.969s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 07/16/23 23:09:55.04&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 07/16/23 23:09:59.124 (4.084s)&#xA;&gt; Enter [It] should pass URL-encoded certificate to upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:161 @ 07/16/23 23:09:59.124&#xA;&lt; Exit [It] should pass URL-encoded certificate to upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:161 @ 07/16/23 23:10:13.448 (14.358s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:13.448&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:13.998 (550ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should return 200 for service type=ExternalName with a port defined" classname="nginx-ingress-controller e2e suite" status="passed" time="19.7114344">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:13.999&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:22.738 (8.738s)&#xA;&gt; Enter [It] should return 200 for service type=ExternalName with a port defined - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:129 @ 07/16/23 23:10:22.738&#xA;&lt; Exit [It] should return 200 for service type=ExternalName with a port defined - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:129 @ 07/16/23 23:10:33.094 (10.391s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:33.094&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:33.676 (582ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-proxy-protocol should enable PROXY Protocol for HTTPS" classname="nginx-ingress-controller e2e suite" status="passed" time="113.2879812">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:33.688&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:42.391 (8.703s)&#xA;&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 07/16/23 23:10:42.391&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 07/16/23 23:10:53.541 (11.15s)&#xA;&gt; Enter [It] should enable PROXY Protocol for HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:112 @ 07/16/23 23:10:53.541&#xA;&lt; Exit [It] should enable PROXY Protocol for HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:112 @ 07/16/23 23:12:26.01 (1m32.617s)&#xA;&gt; Enter [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:26.01&#xA;&lt; Exit [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:26.827 (817ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity through the config map but ignore snippet as disabled by admin" classname="nginx-ingress-controller e2e suite" status="passed" time="42.5280758">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:26.829&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:35.094 (8.299s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:12:35.094&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:12:39.241 (4.147s)&#xA;&gt; Enter [It] should enable modsecurity through the config map but ignore snippet as disabled by admin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:305 @ 07/16/23 23:12:39.241&#xA;&lt; Exit [It] should enable modsecurity through the config map but ignore snippet as disabled by admin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:305 @ 07/16/23 23:13:08.762 (29.555s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:08.762&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:09.288 (526ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should not set cookie without domain annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="22.8642912">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:09.289&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:17.226 (7.936s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:13:17.226&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:13:21.294 (4.068s)&#xA;&gt; Enter [It] should not set cookie without domain annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:248 @ 07/16/23 23:13:21.294&#xA;&lt; Exit [It] should not set cookie without domain annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:248 @ 07/16/23 23:13:31.492 (10.198s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:31.492&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:32.119 (661ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] enables access logging for default backend" classname="nginx-ingress-controller e2e suite" status="skipped" time="9.1708479">
              <skipped message="skipped - enable-access-log-for-default-backend"></skipped>
              <system-err>&gt; Enter [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:32.123&#xA;&lt; Exit [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:40.759 (8.636s)&#xA;&gt; Enter [It] enables access logging for default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:88 @ 07/16/23 23:13:40.759&#xA;[SKIPPED] enable-access-log-for-default-backend&#xA;In [It] at: /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:90 @ 07/16/23 23:13:40.759&#xA;&lt; Exit [It] enables access logging for default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:88 @ 07/16/23 23:13:40.759 (0s)&#xA;&gt; Enter [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:40.76&#xA;&lt; Exit [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:41.293 (534ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should return status 502 for service type=ExternalName with an invalid host" classname="nginx-ingress-controller e2e suite" status="passed" time="19.9088799">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:41.296&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:50.342 (9.046s)&#xA;&gt; Enter [It] should return status 502 for service type=ExternalName with an invalid host - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:153 @ 07/16/23 23:13:50.342&#xA;&lt; Exit [It] should return status 502 for service type=ExternalName with an invalid host - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:153 @ 07/16/23 23:14:00.578 (10.237s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:00.578&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:01.204 (626ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set secure in cookie with provided false annotation on https" classname="nginx-ingress-controller e2e suite" status="passed" time="23.5486766">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:01.205&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:09.622 (8.451s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:14:09.622&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:14:13.746 (4.123s)&#xA;&gt; Enter [It] should set secure in cookie with provided false annotation on https - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:458 @ 07/16/23 23:14:13.746&#xA;&lt; Exit [It] should set secure in cookie with provided false annotation on https - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:458 @ 07/16/23 23:14:24.227 (10.481s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:24.227&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:24.72 (493ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* cookie set by external authentication server user retains cookie by default" classname="nginx-ingress-controller e2e suite" status="passed" time="41.6234434">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:24.722&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:35.239 (10.552s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:14:35.239&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:14:43.596 (8.357s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 07/16/23 23:14:43.596&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 07/16/23 23:15:05.851 (22.289s)&#xA;&gt; Enter [It] user retains cookie by default - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:411 @ 07/16/23 23:15:05.851&#xA;&lt; Exit [It] user retains cookie by default - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:411 @ 07/16/23 23:15:05.862 (11ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:05.862&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:06.276 (414ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check proxy header hash size should set proxy-headers-hash-bucket-size" classname="nginx-ingress-controller e2e suite" status="passed" time="30.4083453">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:06.278&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:14.855 (8.577s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 07/16/23 23:15:14.855&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 07/16/23 23:15:25.98 (11.125s)&#xA;&gt; Enter [It] should set proxy-headers-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:60 @ 07/16/23 23:15:25.98&#xA;&lt; Exit [It] should set proxy-headers-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:60 @ 07/16/23 23:15:36.182 (10.236s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:36.182&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:36.652 (469ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should disable cors allow credentials" classname="nginx-ingress-controller e2e suite" status="passed" time="25.3990948">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:36.653&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:45.163 (8.51s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:15:45.163&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:15:51.277 (6.114s)&#xA;&gt; Enter [It] should disable cors allow credentials - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:94 @ 07/16/23 23:15:51.277&#xA;&lt; Exit [It] should disable cors allow credentials - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:94 @ 07/16/23 23:16:01.482 (10.205s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:01.482&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:02.018 (570ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should serve Ingress when class is added" classname="nginx-ingress-controller e2e suite" status="passed" time="37.7124334">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:02.019&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:09.556 (7.537s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:16:09.556&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:16:13.642 (4.085s)&#xA;&gt; Enter [It] should serve Ingress when class is added - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:257 @ 07/16/23 23:16:13.642&#xA;&lt; Exit [It] should serve Ingress when class is added - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:257 @ 07/16/23 23:16:39.138 (25.531s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:39.138&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:39.697 (559ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should delete Ingress when class is removed" classname="nginx-ingress-controller e2e suite" status="passed" time="37.9933959">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:39.736&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:47.471 (7.735s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:16:47.471&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:16:51.578 (4.107s)&#xA;&gt; Enter [It] should delete Ingress when class is removed - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:192 @ 07/16/23 23:16:51.578&#xA;&lt; Exit [It] should delete Ingress when class is removed - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:192 @ 07/16/23 23:17:17.178 (25.634s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:17.178&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:17.695 (517ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] Geoip2 should include geoip2 line in config when enabled and db file exists" classname="nginx-ingress-controller e2e suite" status="passed" time="32.7838107">
              <system-err>&gt; Enter [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:17.697&#xA;&lt; Exit [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:26.222 (8.525s)&#xA;&gt; Enter [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:42 @ 07/16/23 23:17:26.222&#xA;&lt; Exit [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:42 @ 07/16/23 23:17:30.293 (4.071s)&#xA;&gt; Enter [It] should include geoip2 line in config when enabled and db file exists - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:46 @ 07/16/23 23:17:30.293&#xA;Jul 16 23:17:39.506: INFO: Connecting to github.com (140.82.113.3:443)&#xA;Connecting to github.com (140.82.113.3:443)&#xA;Connecting to raw.githubusercontent.com (185.199.111.133:443)&#xA;saving to &#39;/etc/nginx/geoip/GeoLite2-Country.mmdb&#39;&#xA;GeoLite2-Country.mmd 100%!|(MISSING)********************************| 17952  0:00:00 ETA&#xA;&#39;/etc/nginx/geoip/GeoLite2-Country.mmdb&#39; saved&#xA;&#xA;&lt; Exit [It] should include geoip2 line in config when enabled and db file exists - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:46 @ 07/16/23 23:17:49.758 (19.499s)&#xA;&gt; Enter [AfterEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:49.758&#xA;&lt; Exit [AfterEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:50.446 (688ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Status] status update should update status field after client-go reconnection" classname="nginx-ingress-controller e2e suite" status="passed" time="79.7267018">
              <system-err>&gt; Enter [BeforeEach] [Status] status update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:50.448&#xA;&lt; Exit [BeforeEach] [Status] status update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:59.09 (8.642s)&#xA;&gt; Enter [It] should update status field after client-go reconnection - /go/src/k8s.io/ingress-nginx/test/e2e/status/update.go:43 @ 07/16/23 23:17:59.09&#xA;Jul 16 23:17:59.090: INFO: Asynchronously running &#39;/bin/bash -c /usr/local/bin/kubectl proxy --accept-hosts=.* --address=0.0.0.0 --port=0&#39;&#xA;Jul 16 23:18:19.484: INFO: waiting for leader election and initial status update&#xA;Jul 16 23:18:59.486: INFO: Asynchronously running &#39;/bin/bash -c /usr/local/bin/kubectl proxy --accept-hosts=.* --address=0.0.0.0 --port=36979&#39;&#xA;&lt; Exit [It] should update status field after client-go reconnection - /go/src/k8s.io/ingress-nginx/test/e2e/status/update.go:43 @ 07/16/23 23:19:09.559 (1m10.572s)&#xA;&gt; Enter [AfterEach] [Status] status update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:09.559&#xA;&lt; Exit [AfterEach] [Status] status update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:10.072 (512ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should overwrite Foo header with auth response" classname="nginx-ingress-controller e2e suite" status="passed" time="32.0107057">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:10.074&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:18.758 (8.683s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:19:18.758&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:19:22.852 (4.094s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:19:22.852&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:19:37.243 (14.425s)&#xA;&gt; Enter [It] should overwrite Foo header with auth response - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:529 @ 07/16/23 23:19:37.243&#xA;&lt; Exit [It] should overwrite Foo header with auth response - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:529 @ 07/16/23 23:19:41.445 (4.202s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:41.446&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:42.051 (605ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 200 when authentication is configured with a map and Authorization header is sent" classname="nginx-ingress-controller e2e suite" status="passed" time="25.6516828">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:42.053&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:50.431 (8.379s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:19:50.432&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:19:54.495 (4.064s)&#xA;&gt; Enter [It] should return status code 200 when authentication is configured with a map and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:199 @ 07/16/23 23:19:54.495&#xA;&lt; Exit [It] should return status code 200 when authentication is configured with a map and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:199 @ 07/16/23 23:20:06.914 (12.453s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:06.914&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:07.67 (756ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to https:// and use proxy_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="24.0065656">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:07.684&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:16.699 (9.015s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 07/16/23 23:20:16.699&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 07/16/23 23:20:20.747 (4.048s)&#xA;&gt; Enter [It] should set backend protocol to https:// and use proxy_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:34 @ 07/16/23 23:20:20.747&#xA;&lt; Exit [It] should set backend protocol to https:// and use proxy_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:34 @ 07/16/23 23:20:31.134 (10.387s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:31.134&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:31.656 (556ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity globally and with modsecurity-snippet block requests" classname="nginx-ingress-controller e2e suite" status="passed" time="42.7722447">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:31.657&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:40.453 (8.796s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:20:40.453&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:20:44.53 (4.077s)&#xA;&gt; Enter [It] should enable modsecurity globally and with modsecurity-snippet block requests - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:189 @ 07/16/23 23:20:44.53&#xA;&lt; Exit [It] should enable modsecurity globally and with modsecurity-snippet block requests - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:189 @ 07/16/23 23:21:13.79 (29.294s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:13.79&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:14.395 (605ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] change default settings should apply the annotation to the default backend" classname="nginx-ingress-controller e2e suite" status="passed" time="23.7016096">
              <system-err>&gt; Enter [BeforeEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:14.4&#xA;&lt; Exit [BeforeEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:23.168 (8.768s)&#xA;&gt; Enter [BeforeEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/with_hosts.go:34 @ 07/16/23 23:21:23.168&#xA;&lt; Exit [BeforeEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/with_hosts.go:34 @ 07/16/23 23:21:27.261 (4.093s)&#xA;&gt; Enter [It] should apply the annotation to the default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/with_hosts.go:38 @ 07/16/23 23:21:27.261&#xA;&lt; Exit [It] should apply the annotation to the default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/with_hosts.go:38 @ 07/16/23 23:21:37.483 (10.256s)&#xA;&gt; Enter [AfterEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:37.483&#xA;&lt; Exit [AfterEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:38.068 (585ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured with a custom redirect param should return status code 200 when signed in" classname="nginx-ingress-controller e2e suite" status="passed" time="26.2898035">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:38.069&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:45.534 (7.465s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:21:45.534&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:21:49.607 (4.073s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 07/16/23 23:21:49.607&#xA;&lt; Exit [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 07/16/23 23:22:03.839 (14.266s)&#xA;&gt; Enter [It] should return status code 200 when signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:678 @ 07/16/23 23:22:03.84&#xA;&lt; Exit [It] should return status code 200 when signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:678 @ 07/16/23 23:22:03.852 (12ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:03.852&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:04.325 (473ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 401 when authentication is configured with invalid content and Authorization header is sent" classname="nginx-ingress-controller e2e suite" status="passed" time="23.2268136">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:04.328&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:12.822 (8.494s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:22:12.822&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:22:16.892 (4.07s)&#xA;&gt; Enter [It] should return status code 401 when authentication is configured with invalid content and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:227 @ 07/16/23 23:22:16.892&#xA;&lt; Exit [It] should return status code 401 when authentication is configured with invalid content and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:227 @ 07/16/23 23:22:27.117 (10.225s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:27.117&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:27.555 (438ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 200 when authentication is configured and Authorization header is sent" classname="nginx-ingress-controller e2e suite" status="passed" time="25.3392845">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:27.556&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:36.204 (8.682s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:22:36.204&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:22:40.282 (4.078s)&#xA;&gt; Enter [It] should return status code 200 when authentication is configured and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:172 @ 07/16/23 23:22:40.283&#xA;&lt; Exit [It] should return status code 200 when authentication is configured and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:172 @ 07/16/23 23:22:52.486 (12.203s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:52.486&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:52.861 (375ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] settings-global-rate-limit generates correct NGINX configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="32.8949623">
              <system-err>&gt; Enter [BeforeEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:52.864&#xA;&lt; Exit [BeforeEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:00.437 (7.573s)&#xA;&gt; Enter [BeforeEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:34 @ 07/16/23 23:23:00.437&#xA;&lt; Exit [BeforeEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:34 @ 07/16/23 23:23:04.507 (4.105s)&#xA;&gt; Enter [It] generates correct NGINX configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:38 @ 07/16/23 23:23:04.507&#xA;STEP: generating correct defaults - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:43 @ 07/16/23 23:23:11.537&#xA;STEP: applying customizations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:61 @ 07/16/23 23:23:14.706&#xA;&lt; Exit [It] generates correct NGINX configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:38 @ 07/16/23 23:23:25.01 (20.503s)&#xA;&gt; Enter [AfterEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:25.01&#xA;&lt; Exit [AfterEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:25.724 (714ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] limit-rate Check limit-rate annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="27.5008123">
              <system-err>&gt; Enter [BeforeEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:25.726&#xA;&lt; Exit [BeforeEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:34.135 (8.443s)&#xA;&gt; Enter [BeforeEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitrate.go:33 @ 07/16/23 23:23:34.135&#xA;&lt; Exit [BeforeEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitrate.go:33 @ 07/16/23 23:23:38.193 (4.058s)&#xA;&gt; Enter [It] Check limit-rate annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitrate.go:37 @ 07/16/23 23:23:38.193&#xA;&lt; Exit [It] Check limit-rate annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitrate.go:37 @ 07/16/23 23:23:52.705 (14.512s)&#xA;&gt; Enter [AfterEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:52.707&#xA;&lt; Exit [AfterEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:53.193 (486ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] add-headers Add a custom header" classname="nginx-ingress-controller e2e suite" status="passed" time="31.4122919">
              <system-err>&gt; Enter [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:53.194&#xA;&lt; Exit [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:02.76 (9.601s)&#xA;&gt; Enter [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:34 @ 07/16/23 23:24:02.76&#xA;&lt; Exit [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:34 @ 07/16/23 23:24:13.875 (11.115s)&#xA;&gt; Enter [It] Add a custom header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:40 @ 07/16/23 23:24:13.875&#xA;&lt; Exit [It] Add a custom header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:40 @ 07/16/23 23:24:24.131 (10.255s)&#xA;&gt; Enter [AfterEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:24.131&#xA;&lt; Exit [AfterEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:24.572 (441ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity with transaction ID and OWASP rules" classname="nginx-ingress-controller e2e suite" status="passed" time="23.3040838">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:24.573&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:33.002 (8.463s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:24:33.003&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:24:37.063 (4.061s)&#xA;&gt; Enter [It] should enable modsecurity with transaction ID and OWASP rules - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:53 @ 07/16/23 23:24:37.063&#xA;&lt; Exit [It] should enable modsecurity with transaction ID and OWASP rules - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:53 @ 07/16/23 23:24:47.308 (10.245s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:47.308&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:47.843 (535ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should return status code 200 when request whitelisted (via no-auth-locations) service and 401 when request protected service" classname="nginx-ingress-controller e2e suite" status="passed" time="58.015758">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:47.845&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:56.211 (8.367s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:24:56.212&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:25:04.311 (8.134s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:25:04.312&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 07/16/23 23:25:04.312&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 07/16/23 23:25:14.551&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 07/16/23 23:25:24.781&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:25:34.923 (30.646s)&#xA;&gt; Enter [It] should return status code 200 when request whitelisted (via no-auth-locations) service and 401 when request protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:102 @ 07/16/23 23:25:34.923&#xA;STEP: Adding a no-auth-locations for /bar to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:104 @ 07/16/23 23:25:34.924&#xA;STEP: Sending a request to protected service /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:111 @ 07/16/23 23:25:45.117&#xA;STEP: Sending a request to whitelisted service /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:118 @ 07/16/23 23:25:45.136&#xA;&lt; Exit [It] should return status code 200 when request whitelisted (via no-auth-locations) service and 401 when request protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:102 @ 07/16/23 23:25:45.155 (10.231s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:45.155&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:45.792 (637ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] rewrite-target use-regex enable-rewrite-log should write rewrite logs" classname="nginx-ingress-controller e2e suite" status="passed" time="25.6974811">
              <system-err>&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:45.799&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:53.394 (7.595s)&#xA;&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 07/16/23 23:25:53.394&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 07/16/23 23:25:57.447 (4.052s)&#xA;&gt; Enter [It] should write rewrite logs - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:37 @ 07/16/23 23:25:57.447&#xA;STEP: setting enable-rewrite-log annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:38 @ 07/16/23 23:25:57.447&#xA;&lt; Exit [It] should write rewrite logs - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:37 @ 07/16/23 23:26:10.67 (13.258s)&#xA;&gt; Enter [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:10.67&#xA;&lt; Exit [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:11.462 (792ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] service-upstream when using the default value (false) and enabling in the annotations should use the Service Cluster IP and Port" classname="nginx-ingress-controller e2e suite" status="passed" time="23.5120901">
              <system-err>&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:11.466&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:19.994 (8.529s)&#xA;&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 07/16/23 23:26:19.994&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 07/16/23 23:26:24.057 (4.063s)&#xA;&gt; Enter [It] should use the Service Cluster IP and Port  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:41 @ 07/16/23 23:26:24.057&#xA;STEP: checking if the service is reached - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:53 @ 07/16/23 23:26:34.26&#xA;STEP: checking if the Service Cluster IP and Port are used - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:60 @ 07/16/23 23:26:34.268&#xA;&lt; Exit [It] should use the Service Cluster IP and Port  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:41 @ 07/16/23 23:26:34.424 (10.402s)&#xA;&gt; Enter [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:34.424&#xA;&lt; Exit [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:34.943 (519ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow - single origin with required port" classname="nginx-ingress-controller e2e suite" status="passed" time="20.2488205">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:34.948&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:43.595 (8.647s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:26:43.595&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:26:47.667 (4.072s)&#xA;&gt; Enter [It] should allow - single origin with required port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:358 @ 07/16/23 23:26:47.667&#xA;&lt; Exit [It] should allow - single origin with required port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:358 @ 07/16/23 23:26:54.707 (7.04s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:54.707&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:55.197 (490ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should not set client_body_buffer_size to invalid 1b" classname="nginx-ingress-controller e2e suite" status="passed" time="22.4355794">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:55.199&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:02.431 (7.267s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 07/16/23 23:27:02.431&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 07/16/23 23:27:06.577 (4.146s)&#xA;&gt; Enter [It] should not set client_body_buffer_size to invalid 1b - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:145 @ 07/16/23 23:27:06.577&#xA;&lt; Exit [It] should not set client_body_buffer_size to invalid 1b - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:145 @ 07/16/23 23:27:16.86 (10.283s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:16.86&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:17.6 (740ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should accept both Ingresses with default IngressClassName and IngressClass annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="33.8281043">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:17.603&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:29.242 (11.639s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:27:29.242&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:27:33.297 (4.089s)&#xA;&gt; Enter [It] should accept both Ingresses with default IngressClassName and IngressClass annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:132 @ 07/16/23 23:27:33.297&#xA;&lt; Exit [It] should accept both Ingresses with default IngressClassName and IngressClass annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:132 @ 07/16/23 23:27:50.62 (17.323s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:50.62&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:51.396 (777ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should proxy_method method when global-auth-method is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="58.1665338">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:51.398&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:59.848 (8.45s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:27:59.848&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:28:07.927 (8.114s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:28:07.927&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 07/16/23 23:28:07.927&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 07/16/23 23:28:18.108&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 07/16/23 23:28:28.311&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:28:38.594 (30.701s)&#xA;&gt; Enter [It] should proxy_method method when global-auth-method is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:197 @ 07/16/23 23:28:38.594&#xA;STEP: Adding a global-auth-method to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:202 @ 07/16/23 23:28:38.594&#xA;&lt; Exit [It] should proxy_method method when global-auth-method is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:197 @ 07/16/23 23:28:48.849 (10.255s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:48.849&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:49.496 (647ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) ports or X-Forwarded-Host check during HTTP tp HTTPS redirection should not use ports during the HTTP to HTTPS redirection" classname="nginx-ingress-controller e2e suite" status="passed" time="20.2293445">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:49.498&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:58.133 (8.635s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 07/16/23 23:28:58.133&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 07/16/23 23:29:00.195 (2.062s)&#xA;&gt; Enter [It] should not use ports during the HTTP to HTTPS redirection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:187 @ 07/16/23 23:29:00.195&#xA;&lt; Exit [It] should not use ports during the HTTP to HTTPS redirection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:187 @ 07/16/23 23:29:09.273 (9.111s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:09.273&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:09.693 (420ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should warn user when use-regex is true and session-cookie-path is not set" classname="nginx-ingress-controller e2e suite" status="passed" time="27.2522022">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:09.696&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:18.525 (8.83s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:29:18.525&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:29:22.595 (4.069s)&#xA;&gt; Enter [It] should warn user when use-regex is true and session-cookie-path is not set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:294 @ 07/16/23 23:29:22.595&#xA;&lt; Exit [It] should warn user when use-regex is true and session-cookie-path is not set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:294 @ 07/16/23 23:29:35.79 (13.229s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:35.79&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:36.912 (1.123s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should update the external name after a service update" classname="nginx-ingress-controller e2e suite" status="passed" time="24.8001117">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:36.914&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:45.266 (8.352s)&#xA;&gt; Enter [It] should update the external name after a service update - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:248 @ 07/16/23 23:29:45.266&#xA;STEP: checking the service is updated to use eu.httpbin.org - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:304 @ 07/16/23 23:30:01.037&#xA;&lt; Exit [It] should update the external name after a service update - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:248 @ 07/16/23 23:30:01.219 (15.992s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:30:01.219&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:30:01.675 (455ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canary is created should route requests to the correct upstream if the canary ingress is modified" classname="nginx-ingress-controller e2e suite" status="passed" time="49.4495519">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:30:01.676&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:30:09.223 (7.547s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:30:09.223&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:30:17.344 (8.121s)&#xA;&gt; Enter [It] should route requests to the correct upstream if the canary ingress is modified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:307 @ 07/16/23 23:30:17.344&#xA;STEP: routing requests destined for the mainline ingress to the mainline upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:351 @ 07/16/23 23:30:44.8&#xA;STEP: routing requests destined for the canary ingress to the canary upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:360 @ 07/16/23 23:30:44.834&#xA;&lt; Exit [It] should route requests to the correct upstream if the canary ingress is modified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:307 @ 07/16/23 23:30:44.863 (27.584s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:30:44.863&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:30:51.061 (6.197s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [SSL] [Flag] default-ssl-certificate uses default ssl certificate for host based ingress when configured certificate does not match host" classname="nginx-ingress-controller e2e suite" status="passed" time="48.0783854">
              <system-err>&gt; Enter [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:30:51.215&#xA;&lt; Exit [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:08.914 (17.737s)&#xA;&gt; Enter [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:40 @ 07/16/23 23:31:08.914&#xA;&lt; Exit [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:40 @ 07/16/23 23:31:24.729 (15.815s)&#xA;&gt; Enter [It] uses default ssl certificate for host based ingress when configured certificate does not match host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:80 @ 07/16/23 23:31:24.729&#xA;STEP: making sure new ingress is deployed - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:90 @ 07/16/23 23:31:33.588&#xA;STEP: making sure the configured default ssl certificate is being used - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:96 @ 07/16/23 23:31:36.75&#xA;&lt; Exit [It] uses default ssl certificate for host based ingress when configured certificate does not match host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:80 @ 07/16/23 23:31:38.764 (14.071s)&#xA;&gt; Enter [AfterEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:38.764&#xA;&lt; Exit [AfterEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:39.22 (456ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] Configmap - limit-rate Check limit-rate config" classname="nginx-ingress-controller e2e suite" status="passed" time="43.382621">
              <system-err>&gt; Enter [BeforeEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:39.221&#xA;&lt; Exit [BeforeEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:47.492 (8.271s)&#xA;&gt; Enter [BeforeEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/limit_rate.go:32 @ 07/16/23 23:31:47.492&#xA;&lt; Exit [BeforeEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/limit_rate.go:32 @ 07/16/23 23:31:51.545 (4.053s)&#xA;&gt; Enter [It] Check limit-rate config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/limit_rate.go:36 @ 07/16/23 23:31:51.545&#xA;&lt; Exit [It] Check limit-rate config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/limit_rate.go:36 @ 07/16/23 23:32:22.076 (30.566s)&#xA;&gt; Enter [AfterEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:22.076&#xA;&lt; Exit [AfterEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:22.569 (493ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow - missing origins (should allow all origins)" classname="nginx-ingress-controller e2e suite" status="passed" time="19.9840928">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:22.57&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:30.865 (8.329s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:32:30.865&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:32:34.935 (4.071s)&#xA;&gt; Enter [It] should allow - missing origins (should allow all origins) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:571 @ 07/16/23 23:32:34.936&#xA;&lt; Exit [It] should allow - missing origins (should allow all origins) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:571 @ 07/16/23 23:32:42.001 (7.066s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:42.001&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:42.52 (519ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check server names hash size should set server_names_hash_max_size" classname="nginx-ingress-controller e2e suite" status="passed" time="29.0115263">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:42.522&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:49.858 (7.336s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 07/16/23 23:32:49.859&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 07/16/23 23:33:00.922 (11.098s)&#xA;&gt; Enter [It] should set server_names_hash_max_size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:48 @ 07/16/23 23:33:00.922&#xA;&lt; Exit [It] should set server_names_hash_max_size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:48 @ 07/16/23 23:33:11.133 (10.211s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:11.133&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:11.499 (366ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should return 200 using auth-tls-match-cn where atleast one of the regex options matches CN from client" classname="nginx-ingress-controller e2e suite" status="passed" time="23.8795169">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:11.501&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:19.977 (8.476s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 07/16/23 23:33:19.977&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 07/16/23 23:33:24.088 (4.111s)&#xA;&gt; Enter [It] should return 200 using auth-tls-match-cn where atleast one of the regex options matches CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:324 @ 07/16/23 23:33:24.088&#xA;&lt; Exit [It] should return 200 using auth-tls-match-cn where atleast one of the regex options matches CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:324 @ 07/16/23 23:33:34.766 (10.712s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:34.766&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:35.346 (580ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check the variable hash size should set variables-hash-bucket-size" classname="nginx-ingress-controller e2e suite" status="passed" time="30.2371193">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:35.349&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:43.804 (8.455s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 07/16/23 23:33:43.804&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 07/16/23 23:33:54.894 (11.09s)&#xA;&gt; Enter [It] should set variables-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:80 @ 07/16/23 23:33:54.894&#xA;&lt; Exit [It] should set variables-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:80 @ 07/16/23 23:34:05.028 (10.168s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:05.028&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:05.552 (523ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] enable-multi-accept should be disabled when set to false" classname="nginx-ingress-controller e2e suite" status="passed" time="19.2860324">
              <system-err>&gt; Enter [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:05.554&#xA;&lt; Exit [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:14.153 (8.6s)&#xA;&gt; Enter [It] should be disabled when set to false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:49 @ 07/16/23 23:34:14.153&#xA;&lt; Exit [It] should be disabled when set to false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:49 @ 07/16/23 23:34:24.357 (10.204s)&#xA;&gt; Enter [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:24.358&#xA;&lt; Exit [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:24.84 (482ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] single ingress - multiple hosts should set the correct $service_name NGINX variable" classname="nginx-ingress-controller e2e suite" status="passed" time="36.3159109">
              <system-err>&gt; Enter [BeforeEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:24.841&#xA;&lt; Exit [BeforeEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:33.146 (8.339s)&#xA;&gt; Enter [BeforeEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/multiple_rules.go:33 @ 07/16/23 23:34:33.146&#xA;&lt; Exit [BeforeEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/multiple_rules.go:33 @ 07/16/23 23:34:47.325 (14.18s)&#xA;&gt; Enter [It] should set the correct $service_name NGINX variable - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/multiple_rules.go:38 @ 07/16/23 23:34:47.325&#xA;&lt; Exit [It] should set the correct $service_name NGINX variable - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/multiple_rules.go:38 @ 07/16/23 23:35:00.678 (13.387s)&#xA;&gt; Enter [AfterEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:00.678&#xA;&lt; Exit [AfterEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:01.088 (411ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] app-root should redirect to /foo" classname="nginx-ingress-controller e2e suite" status="passed" time="23.4522216">
              <system-err>&gt; Enter [BeforeEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:01.09&#xA;&lt; Exit [BeforeEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:09.717 (8.628s)&#xA;&gt; Enter [BeforeEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/approot.go:31 @ 07/16/23 23:35:09.717&#xA;&lt; Exit [BeforeEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/approot.go:31 @ 07/16/23 23:35:13.774 (4.056s)&#xA;&gt; Enter [It] should redirect to /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/approot.go:35 @ 07/16/23 23:35:13.774&#xA;&lt; Exit [It] should redirect to /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/approot.go:35 @ 07/16/23 23:35:24.001 (10.227s)&#xA;&gt; Enter [AfterEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:24.001&#xA;&lt; Exit [AfterEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:24.542 (541ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] enable-ssl-passthrough With enable-ssl-passthrough enabled should enable ssl-passthrough-proxy-port on a different port" classname="nginx-ingress-controller e2e suite" status="passed" time="32.6082511">
              <system-err>&gt; Enter [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:24.545&#xA;&lt; Exit [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:32.804 (8.293s)&#xA;&gt; Enter [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:39 @ 07/16/23 23:35:32.804&#xA;&lt; Exit [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:39 @ 07/16/23 23:35:45.013 (12.209s)&#xA;&gt; Enter [It] should enable ssl-passthrough-proxy-port on a different port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:56 @ 07/16/23 23:35:45.013&#xA;&lt; Exit [It] should enable ssl-passthrough-proxy-port on a different port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:56 @ 07/16/23 23:35:56.305 (11.292s)&#xA;&gt; Enter [AfterEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:56.305&#xA;&lt; Exit [AfterEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:57.119 (814ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should work with use-regex annotation and session-cookie-path" classname="nginx-ingress-controller e2e suite" status="passed" time="24.3634739">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:57.124&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:06.657 (9.567s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:36:06.657&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:36:10.742 (4.085s)&#xA;&gt; Enter [It] should work with use-regex annotation and session-cookie-path - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:270 @ 07/16/23 23:36:10.742&#xA;&lt; Exit [It] should work with use-regex annotation and session-cookie-path - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:270 @ 07/16/23 23:36:20.937 (10.195s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:20.937&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:21.453 (516ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [SSL] secret update should return the fake SSL certificate if the secret is invalid" classname="nginx-ingress-controller e2e suite" status="passed" time="27.641171">
              <system-err>&gt; Enter [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:21.455&#xA;&lt; Exit [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:31.124 (9.704s)&#xA;&gt; Enter [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:36 @ 07/16/23 23:36:31.124&#xA;&lt; Exit [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:36 @ 07/16/23 23:36:35.265 (4.141s)&#xA;&gt; Enter [It] should return the fake SSL certificate if the secret is invalid - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:82 @ 07/16/23 23:36:35.265&#xA;&lt; Exit [It] should return the fake SSL certificate if the secret is invalid - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:82 @ 07/16/23 23:36:48.617 (13.352s)&#xA;&gt; Enter [AfterEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:48.617&#xA;&lt; Exit [AfterEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:49.062 (444ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] upstream-hash-by-* should connect to the same pod" classname="nginx-ingress-controller e2e suite" status="passed" time="47.4783595">
              <system-err>&gt; Enter [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:49.063&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:57.626 (8.563s)&#xA;&gt; Enter [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:79 @ 07/16/23 23:36:57.626&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:79 @ 07/16/23 23:37:05.661 (8.069s)&#xA;&gt; Enter [It] should connect to the same pod - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:83 @ 07/16/23 23:37:05.661&#xA;&lt; Exit [It] should connect to the same pod - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:83 @ 07/16/23 23:37:36.037 (30.41s)&#xA;&gt; Enter [AfterEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:36.037&#xA;&lt; Exit [AfterEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:36.473 (436ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url cookie set by external authentication server user with global-auth-always-set-cookie key in configmap retains cookie if upstream returns error status code" classname="nginx-ingress-controller e2e suite" status="passed" time="56.9946548">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:36.475&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:45.324 (8.85s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:37:45.324&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:37:57.596 (12.271s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 07/16/23 23:37:57.596&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 07/16/23 23:38:25.91 (28.348s)&#xA;&gt; Enter [It] user with global-auth-always-set-cookie key in configmap retains cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:348 @ 07/16/23 23:38:25.91&#xA;&lt; Exit [It] user with global-auth-always-set-cookie key in configmap retains cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:348 @ 07/16/23 23:38:32.91 (7.035s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:32.91&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:33.401 (490ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-escape-json and log-format-escape-none should not configure log-format escape by default" classname="nginx-ingress-controller e2e suite" status="passed" time="25.3718209">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:33.402&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:42.01 (8.609s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 07/16/23 23:38:42.01&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 07/16/23 23:38:55.207 (13.196s)&#xA;&gt; Enter [It] should not configure log-format escape by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:40 @ 07/16/23 23:38:55.207&#xA;&lt; Exit [It] should not configure log-format escape by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:40 @ 07/16/23 23:38:58.375 (3.169s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:58.375&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:58.773 (398ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured with a custom redirect param keeps processing new ingresses even if one of the existing ingresses is misconfigured" classname="nginx-ingress-controller e2e suite" status="passed" time="38.6435037">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:58.777&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:07.045 (8.302s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:39:07.045&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:39:11.141 (4.096s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 07/16/23 23:39:11.141&#xA;&lt; Exit [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 07/16/23 23:39:25.521 (14.38s)&#xA;&gt; Enter [It] keeps processing new ingresses even if one of the existing ingresses is misconfigured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:698 @ 07/16/23 23:39:25.521&#xA;&lt; Exit [It] keeps processing new ingresses even if one of the existing ingresses is misconfigured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:698 @ 07/16/23 23:39:36.735 (11.248s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:36.735&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:37.352 (617ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canary is created should return 404 status for requests to the canary if no matching ingress is found" classname="nginx-ingress-controller e2e suite" status="passed" time="25.6226958">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:37.354&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:47.228 (9.874s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:39:47.228&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:39:55.38 (8.152s)&#xA;&gt; Enter [It] should return 404 status for requests to the canary if no matching ingress is found - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:80 @ 07/16/23 23:39:55.38&#xA;&lt; Exit [It] should return 404 status for requests to the canary if no matching ingress is found - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:80 @ 07/16/23 23:40:02.395 (7.05s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:02.395&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:02.942 (547ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] global-options should have worker_rlimit_nofile option" classname="nginx-ingress-controller e2e suite" status="passed" time="14.756124400000001">
              <system-err>&gt; Enter [BeforeEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:02.952&#xA;&lt; Exit [BeforeEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:14.181 (11.229s)&#xA;&gt; Enter [It] should have worker_rlimit_nofile option - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_options.go:31 @ 07/16/23 23:40:14.181&#xA;&lt; Exit [It] should have worker_rlimit_nofile option - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_options.go:31 @ 07/16/23 23:40:17.314 (3.133s)&#xA;&gt; Enter [AfterEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:17.314&#xA;&lt; Exit [AfterEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:17.708 (394ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should sync ingress on external name service addition/deletion" classname="nginx-ingress-controller e2e suite" status="passed" time="29.5690489">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:17.709&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:26.08 (8.371s)&#xA;&gt; Enter [It] should sync ingress on external name service addition/deletion - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:311 @ 07/16/23 23:40:26.08&#xA;&lt; Exit [It] should sync ingress on external name service addition/deletion - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:311 @ 07/16/23 23:40:46.867 (20.821s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:46.867&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:47.244 (376ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] Annotation - limit-connections should limit-connections" classname="nginx-ingress-controller e2e suite" status="passed" time="38.1334074">
              <system-out>I0716 23:41:15.732712      21 request.go:690] Waited for 1.1995168s due to client-side throttling, not priority and fairness, request: GET:https://10.96.0.1:443/api/v1/namespaces/e2e-tests-limit-connections-1689550847245898400-wb8ks/services/nginx-ingress-controller&#xA;</system-out>
              <system-err>&gt; Enter [BeforeEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:47.245&#xA;&lt; Exit [BeforeEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:56.079 (8.834s)&#xA;&gt; Enter [BeforeEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitconnections.go:34 @ 07/16/23 23:40:56.079&#xA;&lt; Exit [BeforeEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitconnections.go:34 @ 07/16/23 23:41:00.171 (4.127s)&#xA;&gt; Enter [It] should limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitconnections.go:38 @ 07/16/23 23:41:00.171&#xA;&lt; Exit [It] should limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitconnections.go:38 @ 07/16/23 23:41:24.568 (24.396s)&#xA;&gt; Enter [AfterEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:24.568&#xA;&lt; Exit [AfterEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:25.344 (776ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Shutdown] Grace period shutdown /healthz should return status code 500 during shutdown grace period" classname="nginx-ingress-controller e2e suite" status="passed" time="80.9274995">
              <system-err>&gt; Enter [BeforeEach] [Shutdown] Grace period shutdown - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:41:25.36&#xA;&lt; Exit [BeforeEach] [Shutdown] Grace period shutdown - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:41:32.695 (7.368s)&#xA;&gt; Enter [It] /healthz should return status code 500 during shutdown grace period - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/grace_period.go:35 @ 07/16/23 23:41:32.695&#xA;&lt; Exit [It] /healthz should return status code 500 during shutdown grace period - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/grace_period.go:35 @ 07/16/23 23:42:45.785 (1m13.158s)&#xA;&gt; Enter [AfterEach] [Shutdown] Grace period shutdown - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:42:45.785&#xA;&lt; Exit [AfterEach] [Shutdown] Grace period shutdown - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:42:46.185 (401ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should return an error if there is an invalid value in some annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="41.6303006">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:42:46.188&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:43:12.099 (25.945s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:43:12.099&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:43:20.23 (8.131s)&#xA;&gt; Enter [It] should return an error if there is an invalid value in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:136 @ 07/16/23 23:43:20.23&#xA;&lt; Exit [It] should return an error if there is an invalid value in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:136 @ 07/16/23 23:43:27.268 (7.037s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:43:27.268&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:43:27.784 (516ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller reject ingress with global-rate-limit annotations when memcached is not configured" classname="nginx-ingress-controller e2e suite" status="passed" time="49.3381235">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:43:27.785&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:43:58.24 (30.49s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:43:58.24&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:44:06.339 (8.133s)&#xA;&gt; Enter [It] reject ingress with global-rate-limit annotations when memcached is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:43 @ 07/16/23 23:44:06.339&#xA;STEP: rejects ingress when memcached is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:52 @ 07/16/23 23:44:06.339&#xA;STEP: accepts ingress when memcached is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:57 @ 07/16/23 23:44:06.349&#xA;&lt; Exit [It] reject ingress with global-rate-limit annotations when memcached is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:43 @ 07/16/23 23:44:16.599 (10.26s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:44:16.599&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:44:17.054 (455ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should not return an error for an invalid Ingress when it has unknown class" classname="nginx-ingress-controller e2e suite" status="passed" time="28.0471116">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:44:17.055&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:44:36.36 (19.339s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:44:36.36&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:44:44.488 (8.128s)&#xA;&gt; Enter [It] should not return an error for an invalid Ingress when it has unknown class - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:207 @ 07/16/23 23:44:44.488&#xA;&lt; Exit [It] should not return an error for an invalid Ingress when it has unknown class - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:207 @ 07/16/23 23:44:44.642 (153ms)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:44:44.642&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:44:45.068 (426ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should not allow overlaps of host and paths without canary annotations" classname="nginx-ingress-controller e2e suite" status="passed" time="30.1548957">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:44:45.07&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:45:03.441 (18.405s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:45:03.441&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:45:11.572 (8.131s)&#xA;&gt; Enter [It] should not allow overlaps of host and paths without canary annotations - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:70 @ 07/16/23 23:45:11.572&#xA;&lt; Exit [It] should not allow overlaps of host and paths without canary annotations - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:70 @ 07/16/23 23:45:14.768 (3.197s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:45:14.768&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:45:15.19 (422ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should return an error if the Ingress V1 definition contains invalid annotations" classname="nginx-ingress-controller e2e suite" status="passed" time="27.1581685">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:45:15.191&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:45:33.55 (18.393s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:45:33.55&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:45:41.706 (8.156s)&#xA;&gt; Enter [It] should return an error if the Ingress V1 definition contains invalid annotations - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:196 @ 07/16/23 23:45:41.706&#xA;&lt; Exit [It] should return an error if the Ingress V1 definition contains invalid annotations - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:196 @ 07/16/23 23:45:41.879 (173ms)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:45:41.879&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:45:42.315 (436ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should not return an error if the Ingress V1 definition is valid with IngressClass annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="37.2712832">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:45:42.316&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:46:05.628 (23.347s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:46:05.629&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:46:13.77 (8.142s)&#xA;&gt; Enter [It] should not return an error if the Ingress V1 definition is valid with IngressClass annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:180 @ 07/16/23 23:46:13.77&#xA;&lt; Exit [It] should not return an error if the Ingress V1 definition is valid with IngressClass annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:180 @ 07/16/23 23:46:19.093 (5.323s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:46:19.093&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:46:19.553 (460ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should return an error if there is a forbidden value in some annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="34.8404317">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:46:19.554&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:46:38.748 (19.229s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:46:38.748&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:46:46.903 (8.154s)&#xA;&gt; Enter [It] should return an error if there is a forbidden value in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:150 @ 07/16/23 23:46:46.903&#xA;&lt; Exit [It] should return an error if there is a forbidden value in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:150 @ 07/16/23 23:46:53.94 (7.037s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:46:53.94&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:46:54.36 (420ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should not return an error if the Ingress V1 definition is valid with Ingress Class" classname="nginx-ingress-controller e2e suite" status="passed" time="39.4930985">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:46:54.361&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:47:21.846 (27.52s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:47:21.846&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:47:29.967 (8.139s)&#xA;&gt; Enter [It] should not return an error if the Ingress V1 definition is valid with Ingress Class - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:164 @ 07/16/23 23:47:29.967&#xA;&lt; Exit [It] should not return an error if the Ingress V1 definition is valid with Ingress Class - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:164 @ 07/16/23 23:47:33.332 (3.365s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:47:33.332&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:47:33.801 (469ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should block ingress with invalid path" classname="nginx-ingress-controller e2e suite" status="passed" time="41.2205255">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:47:33.802&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:48:03.021 (29.226s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:48:03.021&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:48:11.191 (8.17s)&#xA;&gt; Enter [It] should block ingress with invalid path - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:108 @ 07/16/23 23:48:11.191&#xA;&lt; Exit [It] should block ingress with invalid path - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:108 @ 07/16/23 23:48:14.438 (3.246s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:48:14.438&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:48:15.015 (577ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [TopologyHints] topology aware routing should return 200 when service has topology hints" classname="nginx-ingress-controller e2e suite" status="passed" time="22.2307844">
              <system-err>&gt; Enter [BeforeEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:48:15.017&#xA;&lt; Exit [BeforeEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:48:22.38 (7.363s)&#xA;&gt; Enter [BeforeEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/topology.go:39 @ 07/16/23 23:48:22.38&#xA;&lt; Exit [BeforeEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/topology.go:39 @ 07/16/23 23:48:26.446 (4.066s)&#xA;&gt; Enter [It] should return 200 when service has topology hints - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/topology.go:43 @ 07/16/23 23:48:26.446&#xA;STEP: checking if the service is reached - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/topology.go:53 @ 07/16/23 23:48:36.588&#xA;&lt; Exit [It] should return 200 when service has topology hints - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/topology.go:43 @ 07/16/23 23:48:36.76 (10.343s)&#xA;&gt; Enter [AfterEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:48:36.76&#xA;&lt; Exit [AfterEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:48:37.218 (459ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] watch namespace selector With specific watch-namespace-selector flags should ingore Ingress of namespace without label foo=bar and accept those of namespace with label foo=bar" classname="nginx-ingress-controller e2e suite" status="passed" time="57.2946911">
              <system-err>&gt; Enter [BeforeEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:48:37.219&#xA;&lt; Exit [BeforeEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:49:01.506 (24.32s)&#xA;&gt; Enter [BeforeEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:51 @ 07/16/23 23:49:01.506&#xA;&lt; Exit [BeforeEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:51 @ 07/16/23 23:49:27.706 (26.2s)&#xA;&gt; Enter [It] should ingore Ingress of namespace without label foo=bar and accept those of namespace with label foo=bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:63 @ 07/16/23 23:49:27.706&#xA;&lt; Exit [It] should ingore Ingress of namespace without label foo=bar and accept those of namespace with label foo=bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:63 @ 07/16/23 23:49:34.037 (6.365s)&#xA;&gt; Enter [AfterEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:49:34.037&#xA;&lt; Exit [AfterEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:49:34.43 (393ms)&#xA;&gt; Enter [AfterEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:56 @ 07/16/23 23:49:34.43&#xA;&lt; Exit [AfterEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:56 @ 07/16/23 23:49:34.447 (17ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should allow overlaps of host and paths with canary annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="32.8319655">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:49:34.449&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:49:53.407 (18.958s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:49:53.407&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:50:01.525 (8.152s)&#xA;&gt; Enter [It] should allow overlaps of host and paths with canary annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:87 @ 07/16/23 23:50:01.525&#xA;&lt; Exit [It] should allow overlaps of host and paths with canary annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:87 @ 07/16/23 23:50:06.787 (5.263s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:50:06.787&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:50:07.247 (459ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should return an error if there is an error validating the ingress definition" classname="nginx-ingress-controller e2e suite" status="passed" time="27.8793348">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:50:07.248&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:50:26.543 (19.295s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:50:26.543&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 07/16/23 23:50:34.647 (8.138s)&#xA;&gt; Enter [It] should return an error if there is an error validating the ingress definition - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:125 @ 07/16/23 23:50:34.647&#xA;&lt; Exit [It] should return an error if there is an error validating the ingress definition - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:125 @ 07/16/23 23:50:34.688 (42ms)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:50:34.688&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:50:35.093 (404ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] rewrite-target use-regex enable-rewrite-log should allow for custom rewrite parameters" classname="nginx-ingress-controller e2e suite" status="passed" time="39.3327111">
              <system-err>&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:07:34.275&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:07:48.02 (13.746s)&#xA;&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 07/16/23 23:07:48.02&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 07/16/23 23:08:02.283 (14.262s)&#xA;&gt; Enter [It] should allow for custom rewrite parameters - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:190 @ 07/16/23 23:08:02.283&#xA;STEP: creating an ingress definition with the use-regex annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:193 @ 07/16/23 23:08:02.283&#xA;STEP: check that &#39;/foo/bar/bar&#39; redirects to custom rewrite - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:206 @ 07/16/23 23:08:12.679&#xA;&lt; Exit [It] should allow for custom rewrite parameters - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:190 @ 07/16/23 23:08:12.703 (10.454s)&#xA;&gt; Enter [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:12.703&#xA;&lt; Exit [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:13.572 (869ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canary is created should route requests to the correct upstream if mainline ingress is created after the canary ingress" classname="nginx-ingress-controller e2e suite" status="passed" time="40.9961349">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:13.576&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:28.615 (15.039s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:08:28.615&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:08:36.764 (8.184s)&#xA;&gt; Enter [It] should route requests to the correct upstream if mainline ingress is created after the canary ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:206 @ 07/16/23 23:08:36.765&#xA;STEP: routing requests destined for the mainline ingress to the mainelin upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:231 @ 07/16/23 23:08:54.047&#xA;STEP: routing requests destined for the canary ingress to the canary upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:240 @ 07/16/23 23:08:54.056&#xA;&lt; Exit [It] should route requests to the correct upstream if mainline ingress is created after the canary ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:206 @ 07/16/23 23:08:54.065 (17.301s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:54.065&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:54.538 (473ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should set sslClientCertificate, sslVerifyClient and sslVerifyDepth with auth-tls-secret" classname="nginx-ingress-controller e2e suite" status="passed" time="31.4066525">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:54.54&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:05.022 (10.516s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 07/16/23 23:09:05.022&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 07/16/23 23:09:09.106 (4.084s)&#xA;&gt; Enter [It] should set sslClientCertificate, sslVerifyClient and sslVerifyDepth with auth-tls-secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:36 @ 07/16/23 23:09:09.106&#xA;&lt; Exit [It] should set sslClientCertificate, sslVerifyClient and sslVerifyDepth with auth-tls-secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:36 @ 07/16/23 23:09:25.238 (16.132s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:25.238&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:25.913 (675ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* canary affinity behavior routes traffic to either mainline or canary backend (legacy behavior)" classname="nginx-ingress-controller e2e suite" status="passed" time="72.7751378">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:25.915&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:34.419 (8.538s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:09:34.419&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:09:42.592 (8.174s)&#xA;&gt; Enter [It] routes traffic to either mainline or canary backend (legacy behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:1058 @ 07/16/23 23:09:42.592&#xA;&lt; Exit [It] routes traffic to either mainline or canary backend (legacy behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:1058 @ 07/16/23 23:10:38.197 (55.673s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:38.197&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:38.587 (391ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not allow - single origin for multiple cors values" classname="nginx-ingress-controller e2e suite" status="passed" time="20.2393701">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:38.589&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:47.213 (8.624s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:10:47.213&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:10:51.275 (4.063s)&#xA;&gt; Enter [It] should not allow - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:196 @ 07/16/23 23:10:51.276&#xA;&lt; Exit [It] should not allow - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:196 @ 07/16/23 23:10:58.316 (7.04s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:58.316&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:58.828 (512ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] influxdb-* when influxdb is enabled should send the request metric to the influxdb server" classname="nginx-ingress-controller e2e suite" status="passed" time="78.7372349">
              <system-err>&gt; Enter [BeforeEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:58.83&#xA;&lt; Exit [BeforeEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:11:06.101 (7.326s)&#xA;&gt; Enter [BeforeEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/influxdb.go:42 @ 07/16/23 23:11:06.101&#xA;&lt; Exit [BeforeEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/influxdb.go:42 @ 07/16/23 23:11:55.28 (49.235s)&#xA;&gt; Enter [It] should send the request metric to the influxdb server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/influxdb.go:48 @ 07/16/23 23:11:55.28&#xA;&lt; Exit [It] should send the request metric to the influxdb server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/influxdb.go:48 @ 07/16/23 23:12:16.87 (21.626s)&#xA;&gt; Enter [AfterEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:16.87&#xA;&lt; Exit [AfterEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:17.419 (549ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should not set invalid proxy timeouts" classname="nginx-ingress-controller e2e suite" status="passed" time="24.1317913">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:17.421&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:26.489 (9.069s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:12:26.49&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:12:30.699 (4.21s)&#xA;&gt; Enter [It] should not set invalid proxy timeouts - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:136 @ 07/16/23 23:12:30.699&#xA;&lt; Exit [It] should not set invalid proxy timeouts - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:136 @ 07/16/23 23:12:41.026 (10.361s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:41.03&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:41.518 (487ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow correct origins - single origin for multiple cors values" classname="nginx-ingress-controller e2e suite" status="passed" time="20.9412207">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:41.519&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:50.636 (9.117s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:12:50.636&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:12:54.712 (4.076s)&#xA;&gt; Enter [It] should allow correct origins - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:216 @ 07/16/23 23:12:54.712&#xA;&lt; Exit [It] should allow correct origins - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:216 @ 07/16/23 23:13:01.787 (7.076s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:01.787&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:02.426 (673ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] [PathType] mix Exact and Prefix paths should choose the correct location" classname="nginx-ingress-controller e2e suite" status="passed" time="48.5153405">
              <system-err>&gt; Enter [BeforeEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:02.429&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:11.216 (8.787s)&#xA;&gt; Enter [BeforeEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:33 @ 07/16/23 23:13:11.217&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:33 @ 07/16/23 23:13:15.424 (4.207s)&#xA;&gt; Enter [It] should choose the correct location - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:39 @ 07/16/23 23:13:15.424&#xA;STEP: Checking exact request to / - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:63 @ 07/16/23 23:13:32.733&#xA;STEP: Checking prefix request to /bar - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:76 @ 07/16/23 23:13:32.756&#xA;STEP: Checking exact request to /foo - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:109 @ 07/16/23 23:13:50.333&#xA;STEP: Checking prefix request to /foo/bar - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:122 @ 07/16/23 23:13:50.341&#xA;STEP: Checking prefix request to /foobar - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:134 @ 07/16/23 23:13:50.351&#xA;&lt; Exit [It] should choose the correct location - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:39 @ 07/16/23 23:13:50.359 (34.97s)&#xA;&gt; Enter [AfterEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:50.36&#xA;&lt; Exit [AfterEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:50.91 (550ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should set gzip_comp_level to 4" classname="nginx-ingress-controller e2e suite" status="passed" time="25.181318">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:50.913&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:58.322 (7.409s)&#xA;&gt; Enter [It] should set gzip_comp_level to 4 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:56 @ 07/16/23 23:13:58.322&#xA;&lt; Exit [It] should set gzip_comp_level to 4 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:56 @ 07/16/23 23:14:15.594 (17.306s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:15.594&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:16.06 (466ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-ssl-* should set valid proxy-ssl-secret" classname="nginx-ingress-controller e2e suite" status="passed" time="37.9162554">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:16.061&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:24.013 (7.951s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 07/16/23 23:14:24.013&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 07/16/23 23:14:28.134 (4.121s)&#xA;&gt; Enter [It] should set valid proxy-ssl-secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:37 @ 07/16/23 23:14:28.134&#xA;&lt; Exit [It] should set valid proxy-ssl-secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:37 @ 07/16/23 23:14:47.036 (18.936s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:47.036&#xA;&lt; Exit [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:53.943 (6.907s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should change the default proxy HTTP version" classname="nginx-ingress-controller e2e suite" status="passed" time="24.9681526">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:53.945&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:04.186 (10.275s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:15:04.186&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:15:08.271 (4.085s)&#xA;&gt; Enter [It] should change the default proxy HTTP version - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:233 @ 07/16/23 23:15:08.271&#xA;&lt; Exit [It] should change the default proxy HTTP version - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:233 @ 07/16/23 23:15:18.477 (10.206s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:18.477&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:18.878 (401ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] permanent-redirect permanent-redirect-code should respond with a custom redirect code" classname="nginx-ingress-controller e2e suite" status="passed" time="19.1586459">
              <system-err>&gt; Enter [BeforeEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:18.88&#xA;&lt; Exit [BeforeEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:27.307 (8.428s)&#xA;&gt; Enter [It] should respond with a custom redirect code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:61 @ 07/16/23 23:15:27.307&#xA;STEP: setting permanent-redirect-code annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:62 @ 07/16/23 23:15:27.307&#xA;STEP: sending request to redirected URL path - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:82 @ 07/16/23 23:15:37.505&#xA;&lt; Exit [It] should respond with a custom redirect code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:61 @ 07/16/23 23:15:37.513 (10.24s)&#xA;&gt; Enter [AfterEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:37.513&#xA;&lt; Exit [AfterEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:38.004 (491ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with value and pattern should routes to mainline upstream when the given Regex causes error" classname="nginx-ingress-controller e2e suite" status="passed" time="37.114839">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:38.014&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:47.066 (9.052s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:15:47.066&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:15:57.188 (10.122s)&#xA;&gt; Enter [It] should routes to mainline upstream when the given Regex causes error - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:566 @ 07/16/23 23:15:57.188&#xA;STEP: routing requests to the mainline upstream when the given Regex causes error - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:591 @ 07/16/23 23:16:14.422&#xA;&lt; Exit [It] should routes to mainline upstream when the given Regex causes error - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:566 @ 07/16/23 23:16:14.445 (17.291s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:14.445&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:15.095 (650ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="23.3675251">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:15.112&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:23.549 (8.437s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:16:23.549&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:16:27.629 (4.08s)&#xA;&gt; Enter [It] should set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:266 @ 07/16/23 23:16:27.629&#xA;&lt; Exit [It] should set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:266 @ 07/16/23 23:16:37.862 (10.268s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:37.862&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:38.445 (583ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] block-* should block User-Agents defined in the ConfigMap" classname="nginx-ingress-controller e2e suite" status="passed" time="32.3222438">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:38.446&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:49.042 (10.596s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 07/16/23 23:16:49.042&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 07/16/23 23:17:00.129 (11.087s)&#xA;&gt; Enter [It] should block User-Agents defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:55 @ 07/16/23 23:17:00.129&#xA;&lt; Exit [It] should block User-Agents defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:55 @ 07/16/23 23:17:10.352 (10.257s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:10.352&#xA;&lt; Exit [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:10.734 (382ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should not set secure in cookie with provided false annotation on http" classname="nginx-ingress-controller e2e suite" status="passed" time="23.3872978">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:10.736&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:19.354 (8.618s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:17:19.354&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:17:23.429 (4.075s)&#xA;&gt; Enter [It] should not set secure in cookie with provided false annotation on http - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:435 @ 07/16/23 23:17:23.429&#xA;&lt; Exit [It] should not set secure in cookie with provided false annotation on http - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:435 @ 07/16/23 23:17:33.591 (10.197s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:33.591&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:34.089 (497ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should add auth headers when global-auth-response-headers is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="58.108191">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:34.09&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:42.368 (8.278s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:17:42.368&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:17:50.549 (8.181s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:17:50.549&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 07/16/23 23:17:50.549&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 07/16/23 23:18:01.043&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 07/16/23 23:18:11.254&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:18:21.423 (30.908s)&#xA;&gt; Enter [It] should add auth headers when global-auth-response-headers is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:223 @ 07/16/23 23:18:21.423&#xA;STEP: Adding a global-auth-response-headers to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:228 @ 07/16/23 23:18:21.423&#xA;&lt; Exit [It] should add auth headers when global-auth-response-headers is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:223 @ 07/16/23 23:18:31.597 (10.208s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:31.597&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:32.129 (532ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should set proxy client-max-body-size to 8m" classname="nginx-ingress-controller e2e suite" status="passed" time="23.0777599">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:32.13&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:40.387 (8.257s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:18:40.387&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:18:44.465 (4.078s)&#xA;&gt; Enter [It] should set proxy client-max-body-size to 8m - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:85 @ 07/16/23 23:18:44.465&#xA;&lt; Exit [It] should set proxy client-max-body-size to 8m - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:85 @ 07/16/23 23:18:54.781 (10.316s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:54.781&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:55.208 (427ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should set proxy_redirect to default" classname="nginx-ingress-controller e2e suite" status="passed" time="23.1290998">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:55.21&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:03.622 (8.446s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:19:03.622&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:19:07.698 (4.076s)&#xA;&gt; Enter [It] should set proxy_redirect to default - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:52 @ 07/16/23 23:19:07.698&#xA;&lt; Exit [It] should set proxy_redirect to default - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:52 @ 07/16/23 23:19:17.914 (10.216s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:17.914&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:18.304 (391ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should create additional upstream block when auth-keepalive is set with HTTP/1.x" classname="nginx-ingress-controller e2e suite" status="passed" time="50.5490694">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:18.307&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:26.675 (8.368s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:19:26.675&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:19:30.739 (4.064s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:19:30.739&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:19:45.008 (14.304s)&#xA;&gt; Enter [It] should create additional upstream block when auth-keepalive is set with HTTP/1.x - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:623 @ 07/16/23 23:19:45.008&#xA;&lt; Exit [It] should create additional upstream block when auth-keepalive is set with HTTP/1.x - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:623 @ 07/16/23 23:20:08.248 (23.274s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:08.248&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:08.787 (539ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] server-alias should return status code 200 for host &#39;foo&#39; and 404 for &#39;bar&#39;" classname="nginx-ingress-controller e2e suite" status="passed" time="23.7681149">
              <system-err>&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:08.788&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:17.73 (8.942s)&#xA;&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 07/16/23 23:20:17.73&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 07/16/23 23:20:21.833 (4.103s)&#xA;&gt; Enter [It] should return status code 200 for host &#39;foo&#39; and 404 for &#39;bar&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:36 @ 07/16/23 23:20:21.833&#xA;&lt; Exit [It] should return status code 200 for host &#39;foo&#39; and 404 for &#39;bar&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:36 @ 07/16/23 23:20:32.024 (10.226s)&#xA;&gt; Enter [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:32.024&#xA;&lt; Exit [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:32.522 (498ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] plugins should exist a x-hello-world header" classname="nginx-ingress-controller e2e suite" status="passed" time="32.3017997">
              <system-err>&gt; Enter [BeforeEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:32.53&#xA;&lt; Exit [BeforeEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:40.871 (8.341s)&#xA;&gt; Enter [BeforeEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/settings/plugins.go:31 @ 07/16/23 23:20:40.871&#xA;&lt; Exit [BeforeEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/settings/plugins.go:31 @ 07/16/23 23:20:46.94 (6.069s)&#xA;&gt; Enter [It] should exist a x-hello-world header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/plugins.go:35 @ 07/16/23 23:20:46.94&#xA;&lt; Exit [It] should exist a x-hello-world header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/plugins.go:35 @ 07/16/23 23:21:04.258 (17.351s)&#xA;&gt; Enter [AfterEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:04.258&#xA;&lt; Exit [AfterEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:04.797 (540ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] upstream-hash-by-* should connect to the same subset of pods" classname="nginx-ingress-controller e2e suite" status="passed" time="45.3711379">
              <system-err>&gt; Enter [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:04.802&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:13.19 (8.387s)&#xA;&gt; Enter [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:79 @ 07/16/23 23:21:13.19&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:79 @ 07/16/23 23:21:19.32 (6.13s)&#xA;&gt; Enter [It] should connect to the same subset of pods - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:92 @ 07/16/23 23:21:19.32&#xA;&lt; Exit [It] should connect to the same subset of pods - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:92 @ 07/16/23 23:21:49.708 (30.422s)&#xA;&gt; Enter [AfterEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:49.708&#xA;&lt; Exit [AfterEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:50.139 (431ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the keep alive should set keepalive_requests" classname="nginx-ingress-controller e2e suite" status="passed" time="30.1447705">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:50.145&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:58.496 (8.351s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 07/16/23 23:21:58.496&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 07/16/23 23:22:09.574 (11.112s)&#xA;&gt; Enter [It] should set keepalive_requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:48 @ 07/16/23 23:22:09.574&#xA;&lt; Exit [It] should set keepalive_requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:48 @ 07/16/23 23:22:19.755 (10.181s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:19.755&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:20.256 (501ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic configuration when only backends change handles endpoints only changes (down scaling of replicas)" classname="nginx-ingress-controller e2e suite" status="passed" time="45.9411528">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:20.257&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:28.894 (8.637s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 07/16/23 23:22:28.894&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 07/16/23 23:22:43.112 (14.252s)&#xA;&gt; Enter [It] handles endpoints only changes (down scaling of replicas) - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:87 @ 07/16/23 23:22:43.112&#xA;&lt; Exit [It] handles endpoints only changes (down scaling of replicas) - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:87 @ 07/16/23 23:23:05.645 (22.568s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:05.645&#xA;&lt; Exit [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:06.129 (484ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] custom HTTP and HTTPS ports with a TLS enabled ingress should set X-Forwarded-Port header to 443" classname="nginx-ingress-controller e2e suite" status="passed" time="34.8905681">
              <system-err>&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:06.131&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:20.599 (14.468s)&#xA;&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 07/16/23 23:23:20.6&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 07/16/23 23:23:27.994 (7.394s)&#xA;&gt; Enter [It] should set X-Forwarded-Port header to 443 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:70 @ 07/16/23 23:23:27.994&#xA;&lt; Exit [It] should set X-Forwarded-Port header to 443 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:70 @ 07/16/23 23:23:40.522 (12.562s)&#xA;&gt; Enter [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:40.522&#xA;&lt; Exit [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:40.988 (466ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] upstream-vhost set host to upstreamvhost.bar.com" classname="nginx-ingress-controller e2e suite" status="passed" time="23.4091998">
              <system-err>&gt; Enter [BeforeEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:40.989&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:49.554 (8.565s)&#xA;&gt; Enter [BeforeEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamvhost.go:30 @ 07/16/23 23:23:49.554&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamvhost.go:30 @ 07/16/23 23:23:53.661 (4.107s)&#xA;&gt; Enter [It] set host to upstreamvhost.bar.com - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamvhost.go:34 @ 07/16/23 23:23:53.661&#xA;&lt; Exit [It] set host to upstreamvhost.bar.com - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamvhost.go:34 @ 07/16/23 23:24:03.928 (10.302s)&#xA;&gt; Enter [AfterEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:03.928&#xA;&lt; Exit [AfterEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:04.364 (435ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] configmap stream-snippet should add value of stream-snippet via config map to nginx config" classname="nginx-ingress-controller e2e suite" status="passed" time="35.0935104">
              <system-err>&gt; Enter [BeforeEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:04.366&#xA;&lt; Exit [BeforeEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:12.746 (8.379s)&#xA;&gt; Enter [BeforeEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/stream_snippet.go:38 @ 07/16/23 23:24:12.746&#xA;&lt; Exit [BeforeEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/stream_snippet.go:38 @ 07/16/23 23:24:16.814 (4.069s)&#xA;&gt; Enter [It] should add value of stream-snippet via config map to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/stream_snippet.go:42 @ 07/16/23 23:24:16.814&#xA;&lt; Exit [It] should add value of stream-snippet via config map to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/stream_snippet.go:42 @ 07/16/23 23:24:39.062 (22.282s)&#xA;&gt; Enter [AfterEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:39.062&#xA;&lt; Exit [AfterEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:39.426 (364ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-sync-events should create sync events (default)" classname="nginx-ingress-controller e2e suite" status="passed" time="23.3765979">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:39.427&#xA;&lt; Exit [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:48.131 (8.704s)&#xA;&gt; Enter [It] should create sync events (default) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:35 @ 07/16/23 23:24:48.132&#xA;&lt; Exit [It] should create sync events (default) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:35 @ 07/16/23 23:25:02.405 (14.308s)&#xA;&gt; Enter [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:02.405&#xA;&lt; Exit [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:02.769 (364ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-service-external-name should ignore services of external-name type" classname="nginx-ingress-controller e2e suite" status="passed" time="42.5381596">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:02.775&#xA;&lt; Exit [BeforeEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:11.181 (8.406s)&#xA;&gt; Enter [BeforeEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_service_external_name.go:38 @ 07/16/23 23:25:11.181&#xA;&lt; Exit [BeforeEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_service_external_name.go:38 @ 07/16/23 23:25:24.327 (13.145s)&#xA;&gt; Enter [It] should ignore services of external-name type - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_service_external_name.go:52 @ 07/16/23 23:25:24.327&#xA;&lt; Exit [It] should ignore services of external-name type - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_service_external_name.go:52 @ 07/16/23 23:25:44.763 (20.471s)&#xA;&gt; Enter [AfterEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:44.763&#xA;&lt; Exit [AfterEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:45.279 (515ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] configuration-snippet drops snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations if disabled by admin&#34;" classname="nginx-ingress-controller e2e suite" status="passed" time="42.3957203">
              <system-err>&gt; Enter [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:45.282&#xA;&lt; Exit [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:53.726 (8.444s)&#xA;&gt; Enter [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:31 @ 07/16/23 23:25:53.726&#xA;&lt; Exit [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:31 @ 07/16/23 23:25:57.802 (4.077s)&#xA;&gt; Enter [It] drops snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations if disabled by admin&#34; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:58 @ 07/16/23 23:25:57.803&#xA;&lt; Exit [It] drops snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations if disabled by admin&#34; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:58 @ 07/16/23 23:26:27.099 (29.331s)&#xA;&gt; Enter [AfterEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:27.099&#xA;&lt; Exit [AfterEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:27.643 (544ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) should configure HSTS policy header setting max-age parameter" classname="nginx-ingress-controller e2e suite" status="passed" time="35.0574883">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:27.646&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:36.154 (8.542s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 07/16/23 23:26:36.154&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 07/16/23 23:26:40.235 (4.081s)&#xA;&gt; Enter [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 07/16/23 23:26:40.235&#xA;Jul 16 23:26:49.946: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not settings-tls&#xA;&lt; Exit [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 07/16/23 23:26:51.943 (11.709s)&#xA;&gt; Enter [It] setting max-age parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:111 @ 07/16/23 23:26:51.944&#xA;&lt; Exit [It] setting max-age parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:111 @ 07/16/23 23:27:02.135 (10.226s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:02.135&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:02.635 (500ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured with a custom redirect param should redirect to signin url when not signed in" classname="nginx-ingress-controller e2e suite" status="passed" time="27.2388441">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:02.637&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:10.976 (8.339s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:27:10.976&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:27:15.04 (4.064s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 07/16/23 23:27:15.04&#xA;&lt; Exit [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 07/16/23 23:27:29.343 (14.303s)&#xA;&gt; Enter [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:687 @ 07/16/23 23:27:29.343&#xA;&lt; Exit [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:687 @ 07/16/23 23:27:29.355 (12ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:29.355&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:29.875 (520ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with value and cookie should route requests to the correct upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="33.7956341">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:29.877&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:37.741 (7.898s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:27:37.741&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:27:45.891 (8.149s)&#xA;&gt; Enter [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:604 @ 07/16/23 23:27:45.891&#xA;STEP: routing requests to the canary upstream when header value does not match and cookie is set to &#39;always&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:630 @ 07/16/23 23:28:03.119&#xA;&lt; Exit [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:604 @ 07/16/23 23:28:03.125 (17.268s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:03.125&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:03.604 (479ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] enable-real-ip should not trust X-Forwarded-For header when setting is false" classname="nginx-ingress-controller e2e suite" status="passed" time="37.1809584">
              <system-err>&gt; Enter [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:03.605&#xA;&lt; Exit [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:11.902 (8.297s)&#xA;&gt; Enter [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:35 @ 07/16/23 23:28:11.902&#xA;&lt; Exit [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:35 @ 07/16/23 23:28:23.063 (11.161s)&#xA;&gt; Enter [It] should not trust X-Forwarded-For header when setting is false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:78 @ 07/16/23 23:28:23.063&#xA;&lt; Exit [It] should not trust X-Forwarded-For header when setting is false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:78 @ 07/16/23 23:28:40.338 (17.309s)&#xA;&gt; Enter [AfterEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:40.338&#xA;&lt; Exit [AfterEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:40.752 (414ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates picks up the previously missing secret for a given ingress without reloading" classname="nginx-ingress-controller e2e suite" status="passed" time="33.2392362">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:40.754&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:49.068 (8.315s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 07/16/23 23:28:49.068&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 07/16/23 23:28:53.189 (4.121s)&#xA;&gt; Enter [It] picks up the previously missing secret for a given ingress without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:70 @ 07/16/23 23:28:53.189&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:94 @ 07/16/23 23:29:10.345&#xA;STEP: skipping Nginx reload - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:101 @ 07/16/23 23:29:13.397&#xA;&lt; Exit [It] picks up the previously missing secret for a given ingress without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:70 @ 07/16/23 23:29:13.425 (20.27s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:13.425&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:13.959 (534ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With watch-ingress-without-class flag should watch Ingress with no class and ignore ingress with a different class" classname="nginx-ingress-controller e2e suite" status="passed" time="38.5230922">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:13.961&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:22.387 (8.427s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:29:22.387&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:29:26.497 (4.11s)&#xA;&gt; Enter [BeforeEach] With watch-ingress-without-class flag - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:462 @ 07/16/23 23:29:26.497&#xA;&lt; Exit [BeforeEach] With watch-ingress-without-class flag - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:462 @ 07/16/23 23:29:34.509 (8.047s)&#xA;&gt; Enter [It] should watch Ingress with no class and ignore ingress with a different class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:482 @ 07/16/23 23:29:34.509&#xA;&lt; Exit [It] should watch Ingress with no class and ignore ingress with a different class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:482 @ 07/16/23 23:29:51.844 (17.335s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:51.844&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:52.449 (605ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow - matching origin+port with wildcard origin" classname="nginx-ingress-controller e2e suite" status="passed" time="24.0234316">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:52.451&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:30:02.775 (10.363s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:30:02.775&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:30:08.866 (6.091s)&#xA;&gt; Enter [It] should allow - matching origin+port with wildcard origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:488 @ 07/16/23 23:30:08.866&#xA;&lt; Exit [It] should allow - matching origin+port with wildcard origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:488 @ 07/16/23 23:30:15.919 (7.053s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:30:15.919&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:30:16.435 (515ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] custom HTTP and HTTPS ports with a TLS enabled ingress when external authentication is configured should set the X-Forwarded-Port header to 443" classname="nginx-ingress-controller e2e suite" status="passed" time="58.3528016">
              <system-err>&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:30:16.437&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:30:40.742 (24.37s)&#xA;&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 07/16/23 23:30:40.742&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 07/16/23 23:30:57.46 (16.718s)&#xA;&gt; Enter [It] should set the X-Forwarded-Port header to 443 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:100 @ 07/16/23 23:30:57.46&#xA;&lt; Exit [It] should set the X-Forwarded-Port header to 443 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:100 @ 07/16/23 23:31:14.185 (16.763s)&#xA;&gt; Enter [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:14.185&#xA;&lt; Exit [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:14.687 (502ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] disables access logging for default backend" classname="nginx-ingress-controller e2e suite" status="skipped" time="8.8057568">
              <skipped message="skipped - enable-access-log-for-default-backend"></skipped>
              <system-err>&gt; Enter [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:14.689&#xA;&lt; Exit [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:23.074 (8.386s)&#xA;&gt; Enter [It] disables access logging for default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:105 @ 07/16/23 23:31:23.074&#xA;[SKIPPED] enable-access-log-for-default-backend&#xA;In [It] at: /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:107 @ 07/16/23 23:31:23.075&#xA;&lt; Exit [It] disables access logging for default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:105 @ 07/16/23 23:31:23.075 (0s)&#xA;&gt; Enter [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:23.075&#xA;&lt; Exit [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:23.495 (420ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic configuration when only backends change handles endpoints only changes consistently (down scaling of replicas vs. empty service)" classname="nginx-ingress-controller e2e suite" status="passed" time="50.1147385">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:23.497&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:32.125 (8.663s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 07/16/23 23:31:32.125&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 07/16/23 23:31:46.863 (14.738s)&#xA;&gt; Enter [It] handles endpoints only changes consistently (down scaling of replicas vs. empty service) - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:125 @ 07/16/23 23:31:46.863&#xA;&lt; Exit [It] handles endpoints only changes consistently (down scaling of replicas vs. empty service) - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:125 @ 07/16/23 23:32:13.132 (26.303s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:13.132&#xA;&lt; Exit [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:13.542 (410ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-catch-all should allow Ingress with rules" classname="nginx-ingress-controller e2e suite" status="passed" time="30.1741837">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:13.543&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:21.845 (8.301s)&#xA;&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 07/16/23 23:32:21.845&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 07/16/23 23:32:32.94 (11.13s)&#xA;&gt; Enter [It] should allow Ingress with rules - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:123 @ 07/16/23 23:32:32.94&#xA;&lt; Exit [It] should allow Ingress with rules - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:123 @ 07/16/23 23:32:43.229 (10.289s)&#xA;&gt; Enter [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:43.229&#xA;&lt; Exit [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:43.683 (454ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should validate auth-tls-verify-client" classname="nginx-ingress-controller e2e suite" status="passed" time="28.3321117">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:43.686&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:52.383 (8.697s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 07/16/23 23:32:52.383&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 07/16/23 23:32:56.466 (4.083s)&#xA;&gt; Enter [It] should validate auth-tls-verify-client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:206 @ 07/16/23 23:32:56.466&#xA;&lt; Exit [It] should validate auth-tls-verify-client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:206 @ 07/16/23 23:33:11.547 (15.115s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:11.547&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:11.984 (436ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] enable-ssl-passthrough With enable-ssl-passthrough enabled should pass unknown traffic to default backend and handle known traffic" classname="nginx-ingress-controller e2e suite" status="passed" time="56.8061528">
              <system-err>&gt; Enter [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:11.986&#xA;&lt; Exit [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:20.45 (8.464s)&#xA;&gt; Enter [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:39 @ 07/16/23 23:33:20.45&#xA;&lt; Exit [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:39 @ 07/16/23 23:33:32.659 (12.244s)&#xA;&gt; Enter [It] should pass unknown traffic to default backend and handle known traffic - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:79 @ 07/16/23 23:33:32.659&#xA;Jul 16 23:34:02.788: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not noannotationnopassthrough.com&#xA;&lt; Exit [It] should pass unknown traffic to default backend and handle known traffic - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:79 @ 07/16/23 23:34:08.035 (35.41s)&#xA;&gt; Enter [AfterEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:08.036&#xA;&lt; Exit [AfterEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:08.724 (688ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity" classname="nginx-ingress-controller e2e suite" status="passed" time="22.996031">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:08.73&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:16.88 (8.151s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:34:16.881&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:34:20.959 (4.078s)&#xA;&gt; Enter [It] should enable modsecurity - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:35 @ 07/16/23 23:34:20.959&#xA;&lt; Exit [It] should enable modsecurity - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:35 @ 07/16/23 23:34:31.272 (10.348s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:31.272&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:31.691 (419ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] no-auth-locations should return status code 401 when accessing &#39;/&#39; unauthentication" classname="nginx-ingress-controller e2e suite" status="passed" time="32.2377172">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:31.694&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:41.1 (9.407s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 07/16/23 23:34:41.1&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 07/16/23 23:35:00.246 (19.146s)&#xA;&gt; Enter [It] should return status code 401 when accessing &#39;/&#39; unauthentication - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:54 @ 07/16/23 23:35:00.246&#xA;&lt; Exit [It] should return status code 401 when accessing &#39;/&#39; unauthentication - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:54 @ 07/16/23 23:35:03.378 (3.166s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:03.378&#xA;&lt; Exit [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:03.897 (519ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-ssl-* proxy-ssl-location-only flag should change the nginx config server part" classname="nginx-ingress-controller e2e suite" status="passed" time="46.2279664">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:03.899&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:12.446 (8.548s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 07/16/23 23:35:12.446&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 07/16/23 23:35:16.511 (4.065s)&#xA;&gt; Enter [It] proxy-ssl-location-only flag should change the nginx config server part - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:150 @ 07/16/23 23:35:16.511&#xA;&lt; Exit [It] proxy-ssl-location-only flag should change the nginx config server part - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:150 @ 07/16/23 23:35:49.692 (33.215s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:49.692&#xA;&lt; Exit [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:50.092 (400ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] nginx-configuration fails when using alias directive" classname="nginx-ingress-controller e2e suite" status="passed" time="62.1597099">
              <system-err>&gt; Enter [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 07/16/23 23:35:50.093&#xA;&lt; Exit [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 07/16/23 23:35:52.103 (2.01s)&#xA;&gt; Enter [It] fails when using alias directive - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:115 @ 07/16/23 23:35:52.103&#xA;&lt; Exit [It] fails when using alias directive - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:115 @ 07/16/23 23:36:52.175 (1m0.14s)&#xA;&gt; Enter [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 07/16/23 23:36:52.175&#xA;&lt; Exit [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 07/16/23 23:36:52.185 (10ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should ignore Ingress with different controller class" classname="nginx-ingress-controller e2e suite" status="passed" time="32.5241451">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:52.186&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:02.922 (10.77s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:37:02.922&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:37:07.012 (4.09s)&#xA;&gt; Enter [It] should ignore Ingress with different controller class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:104 @ 07/16/23 23:37:07.012&#xA;&lt; Exit [It] should ignore Ingress with different controller class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:104 @ 07/16/23 23:37:24.253 (17.242s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:24.253&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:24.676 (423ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] enable-access-log enable-rewrite-log set access_log off" classname="nginx-ingress-controller e2e suite" status="passed" time="23.6910715">
              <system-err>&gt; Enter [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:24.678&#xA;&lt; Exit [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:32.973 (8.329s)&#xA;&gt; Enter [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:30 @ 07/16/23 23:37:32.973&#xA;&lt; Exit [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:30 @ 07/16/23 23:37:37.052 (4.079s)&#xA;&gt; Enter [It] set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:34 @ 07/16/23 23:37:37.052&#xA;&lt; Exit [It] set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:34 @ 07/16/23 23:37:47.815 (10.762s)&#xA;&gt; Enter [AfterEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:47.815&#xA;&lt; Exit [AfterEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:48.335 (520ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] backend status code 503 should return 503 when all backend service endpoints are unavailable" classname="nginx-ingress-controller e2e suite" status="passed" time="20.6114182">
              <system-err>&gt; Enter [BeforeEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:48.336&#xA;&lt; Exit [BeforeEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:58.16 (9.824s)&#xA;&gt; Enter [It] should return 503 when all backend service endpoints are unavailable - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_backend.go:54 @ 07/16/23 23:37:58.16&#xA;&lt; Exit [It] should return 503 when all backend service endpoints are unavailable - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_backend.go:54 @ 07/16/23 23:38:08.445 (10.319s)&#xA;&gt; Enter [AfterEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:08.445&#xA;&lt; Exit [AfterEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:08.913 (468ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] block-* should block CIDRs defined in the ConfigMap" classname="nginx-ingress-controller e2e suite" status="passed" time="29.486236">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:08.914&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:16.27 (7.355s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 07/16/23 23:38:16.27&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 07/16/23 23:38:27.37 (11.1s)&#xA;&gt; Enter [It] should block CIDRs defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:38 @ 07/16/23 23:38:27.37&#xA;&lt; Exit [It] should block CIDRs defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:38 @ 07/16/23 23:38:37.659 (10.323s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:37.659&#xA;&lt; Exit [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:38.366 (708ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - GRPC authorization metadata should be overwritten by external auth response headers" classname="nginx-ingress-controller e2e suite" status="passed" time="31.3305949">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:38.369&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:50.759 (12.39s)&#xA;&gt; Enter [It] authorization metadata should be overwritten by external auth response headers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:126 @ 07/16/23 23:38:50.759&#xA;&lt; Exit [It] authorization metadata should be overwritten by external auth response headers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:126 @ 07/16/23 23:39:09.202 (18.477s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:09.202&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:09.666 (464ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] server-alias should return status code 200 for host &#39;foo&#39; and &#39;bar&#39;" classname="nginx-ingress-controller e2e suite" status="passed" time="27.6115644">
              <system-err>&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:09.667&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:20.364 (10.697s)&#xA;&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 07/16/23 23:39:20.364&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 07/16/23 23:39:26.451 (6.087s)&#xA;&gt; Enter [It] should return status code 200 for host &#39;foo&#39; and &#39;bar&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:62 @ 07/16/23 23:39:26.451&#xA;&lt; Exit [It] should return status code 200 for host &#39;foo&#39; and &#39;bar&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:62 @ 07/16/23 23:39:36.677 (10.26s)&#xA;&gt; Enter [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:36.677&#xA;&lt; Exit [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:37.244 (568ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - FastCGI should add fastcgi_param in the configuration file" classname="nginx-ingress-controller e2e suite" status="passed" time="22.0350729">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:37.246&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:46.548 (9.301s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 07/16/23 23:39:46.548&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 07/16/23 23:39:48.593 (2.045s)&#xA;&gt; Enter [It] should add fastcgi_param in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:71 @ 07/16/23 23:39:48.593&#xA;&lt; Exit [It] should add fastcgi_param in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:71 @ 07/16/23 23:39:58.782 (10.188s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:58.782&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:59.281 (499ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should disable default modsecurity conf setting when modsecurity-snippet is specified" classname="nginx-ingress-controller e2e suite" status="passed" time="37.9327472">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:59.283&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:09.944 (10.696s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:40:09.944&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:40:14.019 (4.074s)&#xA;&gt; Enter [It] should disable default modsecurity conf setting when modsecurity-snippet is specified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:347 @ 07/16/23 23:40:14.019&#xA;&lt; Exit [It] should disable default modsecurity conf setting when modsecurity-snippet is specified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:347 @ 07/16/23 23:40:36.276 (22.292s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:36.276&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:37.147 (871ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] access-log http-access-log-path &amp; stream-access-log-path use the specified configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="18.9275426">
              <system-err>&gt; Enter [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:37.158&#xA;&lt; Exit [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:45.052 (7.894s)&#xA;&gt; Enter [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:80 @ 07/16/23 23:40:45.052&#xA;&lt; Exit [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:80 @ 07/16/23 23:40:55.399 (10.347s)&#xA;&gt; Enter [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:55.399&#xA;&lt; Exit [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:56.086 (686ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] whitelist-source-range should set valid ip whitelist range" classname="nginx-ingress-controller e2e suite" status="passed" time="23.1984008">
              <system-err>&gt; Enter [BeforeEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:56.088&#xA;&lt; Exit [BeforeEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:41:04.49 (8.436s)&#xA;&gt; Enter [BeforeEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipwhitelist.go:30 @ 07/16/23 23:41:04.49&#xA;&lt; Exit [BeforeEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipwhitelist.go:30 @ 07/16/23 23:41:08.564 (4.074s)&#xA;&gt; Enter [It] should set valid ip whitelist range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipwhitelist.go:34 @ 07/16/23 23:41:08.564&#xA;&lt; Exit [It] should set valid ip whitelist range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipwhitelist.go:34 @ 07/16/23 23:41:18.798 (10.233s)&#xA;&gt; Enter [AfterEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:18.798&#xA;&lt; Exit [AfterEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:19.252 (455ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] access-log stream-access-log-path use the specified configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="19.3127083">
              <system-err>&gt; Enter [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:41:19.254&#xA;&lt; Exit [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:41:27.682 (8.428s)&#xA;&gt; Enter [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:67 @ 07/16/23 23:41:27.682&#xA;&lt; Exit [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:67 @ 07/16/23 23:41:37.904 (10.256s)&#xA;&gt; Enter [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:37.904&#xA;&lt; Exit [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:38.533 (629ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Debug CLI should list the backend servers" classname="nginx-ingress-controller e2e suite" status="passed" time="48.4766431">
              <system-err>&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:07:34.181&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:07:48.294 (14.113s)&#xA;&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 07/16/23 23:07:48.294&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 07/16/23 23:08:06.535 (18.275s)&#xA;&gt; Enter [It] should list the backend servers - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:37 @ 07/16/23 23:08:06.535&#xA;&lt; Exit [It] should list the backend servers - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:37 @ 07/16/23 23:08:19.035 (12.5s)&#xA;&gt; Enter [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:19.036&#xA;&lt; Exit [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:22.623 (3.587s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* does not crash when canary ingress has multiple paths to the same non-matching backend" classname="nginx-ingress-controller e2e suite" status="passed" time="36.8228593">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:22.634&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:33.298 (10.698s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:08:33.298&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:08:41.456 (8.158s)&#xA;&gt; Enter [It] does not crash when canary ingress has multiple paths to the same non-matching backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:915 @ 07/16/23 23:08:41.456&#xA;&lt; Exit [It] does not crash when canary ingress has multiple paths to the same non-matching backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:915 @ 07/16/23 23:08:58.789 (17.333s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:58.789&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:59.423 (634ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] denylist-source-range only allow explicitly allowed IPs, deny all others" classname="nginx-ingress-controller e2e suite" status="passed" time="36.4573542">
              <system-err>&gt; Enter [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:59.425&#xA;&lt; Exit [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:07.036 (7.646s)&#xA;&gt; Enter [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:31 @ 07/16/23 23:09:07.036&#xA;&lt; Exit [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:31 @ 07/16/23 23:09:11.131 (4.095s)&#xA;&gt; Enter [It] only allow explicitly allowed IPs, deny all others - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:86 @ 07/16/23 23:09:11.131&#xA;STEP: sending request from an explicitly denied IP range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:115 @ 07/16/23 23:09:28.355&#xA;STEP: sending request from an implicitly denied IP - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:123 @ 07/16/23 23:09:28.363&#xA;STEP: sending request from an explicitly allowed IP range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:131 @ 07/16/23 23:09:28.369&#xA;STEP: sending request from an explicitly allowed IP range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:139 @ 07/16/23 23:09:28.381&#xA;&lt; Exit [It] only allow explicitly allowed IPs, deny all others - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:86 @ 07/16/23 23:09:35.394 (24.298s)&#xA;&gt; Enter [AfterEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:35.394&#xA;&lt; Exit [AfterEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:35.813 (419ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* Single canary Ingress should not use canary with domain as a server" classname="nginx-ingress-controller e2e suite" status="passed" time="33.535639">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:35.815&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:43.362 (7.548s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:09:43.362&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:09:51.533 (8.17s)&#xA;&gt; Enter [It] should not use canary with domain as a server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:891 @ 07/16/23 23:09:51.533&#xA;&lt; Exit [It] should not use canary with domain as a server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:891 @ 07/16/23 23:10:08.703 (17.205s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:08.703&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:09.316 (613ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-proxy-protocol should respect port passed by the PROXY Protocol" classname="nginx-ingress-controller e2e suite" status="passed" time="113.0726234">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:09.318&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:18.473 (9.154s)&#xA;&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 07/16/23 23:10:18.473&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 07/16/23 23:10:29.549 (11.076s)&#xA;&gt; Enter [It] should respect port passed by the PROXY Protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:46 @ 07/16/23 23:10:29.549&#xA;&lt; Exit [It] should respect port passed by the PROXY Protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:46 @ 07/16/23 23:12:01.67 (1m32.267s)&#xA;&gt; Enter [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:01.67&#xA;&lt; Exit [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:02.208 (575ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] enable-multi-accept should be enabled by default" classname="nginx-ingress-controller e2e suite" status="passed" time="12.0758019">
              <system-err>&gt; Enter [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:02.214&#xA;&lt; Exit [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:10.539 (8.324s)&#xA;&gt; Enter [It] should be enabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:31 @ 07/16/23 23:12:10.539&#xA;&lt; Exit [It] should be enabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:31 @ 07/16/23 23:12:13.724 (3.185s)&#xA;&gt; Enter [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:13.724&#xA;&lt; Exit [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:14.29 (566ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Debug CLI should produce valid JSON for /dbg general" classname="nginx-ingress-controller e2e suite" status="passed" time="20.7471759">
              <system-err>&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:14.293&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:23.098 (8.805s)&#xA;&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 07/16/23 23:12:23.098&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 07/16/23 23:12:27.239 (4.141s)&#xA;&gt; Enter [It] should produce valid JSON for /dbg general - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:85 @ 07/16/23 23:12:27.239&#xA;&lt; Exit [It] should produce valid JSON for /dbg general - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:85 @ 07/16/23 23:12:34.414 (7.21s)&#xA;&gt; Enter [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:34.414&#xA;&lt; Exit [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:35.005 (591ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) should configure TLS protocol setting cipher suite" classname="nginx-ingress-controller e2e suite" status="passed" time="33.8713166">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:35.039&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:42.388 (7.349s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 07/16/23 23:12:42.388&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 07/16/23 23:12:46.475 (4.088s)&#xA;&gt; Enter [BeforeEach] should configure TLS protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:47 @ 07/16/23 23:12:46.475&#xA;Jul 16 23:12:56.021: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not settings-tls&#xA;&lt; Exit [BeforeEach] should configure TLS protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:47 @ 07/16/23 23:12:58.041 (11.565s)&#xA;&gt; Enter [It] setting cipher suite - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:65 @ 07/16/23 23:12:58.041&#xA;&lt; Exit [It] setting cipher suite - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:65 @ 07/16/23 23:13:08.414 (10.408s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:08.414&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:08.876 (461ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not allow - single origin without port and origin with required port" classname="nginx-ingress-controller e2e suite" status="passed" time="21.0101717">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:08.877&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:18.056 (9.178s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:13:18.056&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:13:22.157 (4.101s)&#xA;&gt; Enter [It] should not allow - single origin without port and origin with required port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:405 @ 07/16/23 23:13:22.157&#xA;&lt; Exit [It] should not allow - single origin without port and origin with required port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:405 @ 07/16/23 23:13:29.225 (7.069s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:29.225&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:29.887 (662ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] Bad annotation values [BAD_ANNOTATIONS] should drop an ingress if there is an invalid character in some annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="41.6951339">
              <system-err>&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:29.89&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:39.107 (9.251s)&#xA;&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 07/16/23 23:13:39.107&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 07/16/23 23:13:43.181 (4.074s)&#xA;&gt; Enter [It] [BAD_ANNOTATIONS] should drop an ingress if there is an invalid character in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:36 @ 07/16/23 23:13:43.181&#xA;&lt; Exit [It] [BAD_ANNOTATIONS] should drop an ingress if there is an invalid character in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:36 @ 07/16/23 23:14:10.942 (27.795s)&#xA;&gt; Enter [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:10.942&#xA;&lt; Exit [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:11.517 (575ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure Opentelemetry should exists opentelemetry directive when is enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="45.6981978">
              <system-err>&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:11.518&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:22.99 (11.472s)&#xA;&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 07/16/23 23:14:22.99&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 07/16/23 23:14:27.23 (4.24s)&#xA;&gt; Enter [It] should exists opentelemetry directive when is enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:60 @ 07/16/23 23:14:27.23&#xA;&lt; Exit [It] should exists opentelemetry directive when is enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:60 @ 07/16/23 23:14:49.899 (22.703s)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:49.899&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:57.182 (7.283s)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 07/16/23 23:14:57.182&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 07/16/23 23:14:57.182 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to grpcs:// and use grpc_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="25.9519775">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:57.184&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:08.252 (11.102s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 07/16/23 23:15:08.252&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 07/16/23 23:15:12.39 (4.138s)&#xA;&gt; Enter [It] should set backend protocol to grpcs:// and use grpc_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:79 @ 07/16/23 23:15:12.39&#xA;&lt; Exit [It] should set backend protocol to grpcs:// and use grpc_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:79 @ 07/16/23 23:15:22.633 (10.243s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:22.633&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:23.102 (469ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not break functionality with extra domain" classname="nginx-ingress-controller e2e suite" status="passed" time="20.4639846">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:23.104&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:31.984 (8.914s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:15:31.984&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:15:36.044 (4.06s)&#xA;&gt; Enter [It] should not break functionality with extra domain - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:314 @ 07/16/23 23:15:36.044&#xA;&lt; Exit [It] should not break functionality with extra domain - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:314 @ 07/16/23 23:15:43.084 (7.04s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:43.084&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:43.533 (449ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by weight should route requests only to canary if canary weight is equal to canary weight total" classname="nginx-ingress-controller e2e suite" status="passed" time="35.5842679">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:43.534&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:53.243 (9.708s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:15:53.243&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:16:01.378 (8.135s)&#xA;&gt; Enter [It] should route requests only to canary if canary weight is equal to canary weight total - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:775 @ 07/16/23 23:16:01.378&#xA;&lt; Exit [It] should route requests only to canary if canary weight is equal to canary weight total - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:775 @ 07/16/23 23:16:18.568 (17.224s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:18.568&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:19.084 (516ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* cookie set by external authentication server user with annotated ingress retains cookie if upstream returns error status code" classname="nginx-ingress-controller e2e suite" status="passed" time="39.746984">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:19.086&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:27.839 (8.752s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:16:27.839&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:16:31.857 (4.053s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 07/16/23 23:16:31.857&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 07/16/23 23:16:53.175 (21.318s)&#xA;&gt; Enter [It] user with annotated ingress retains cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:433 @ 07/16/23 23:16:53.175&#xA;&lt; Exit [It] user with annotated ingress retains cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:433 @ 07/16/23 23:16:58.37 (5.195s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:58.37&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:58.799 (429ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url cookie set by external authentication server user retains cookie by default" classname="nginx-ingress-controller e2e suite" status="passed" time="45.394538">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:58.8&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:07.105 (8.339s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:17:07.105&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:17:15.232 (8.127s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 07/16/23 23:17:15.232&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 07/16/23 23:17:43.549 (28.352s)&#xA;&gt; Enter [It] user retains cookie by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:326 @ 07/16/23 23:17:43.549&#xA;&lt; Exit [It] user retains cookie by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:326 @ 07/16/23 23:17:43.559 (9ms)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:43.559&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:44.126 (567ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] Geoip2 should only allow requests from specific countries" classname="nginx-ingress-controller e2e suite" status="skipped" time="12.7332633">
              <skipped message="skipped - GeoIP test are temporarily disabled"></skipped>
              <system-err>&gt; Enter [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:44.132&#xA;&lt; Exit [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:52.272 (8.14s)&#xA;&gt; Enter [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:42 @ 07/16/23 23:17:52.272&#xA;&lt; Exit [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:42 @ 07/16/23 23:17:56.337 (4.065s)&#xA;&gt; Enter [It] should only allow requests from specific countries - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:70 @ 07/16/23 23:17:56.338&#xA;[SKIPPED] GeoIP test are temporarily disabled&#xA;In [It] at: /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:71 @ 07/16/23 23:17:56.338&#xA;&lt; Exit [It] should only allow requests from specific countries - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:70 @ 07/16/23 23:17:56.338 (0s)&#xA;&gt; Enter [AfterEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:56.338&#xA;&lt; Exit [AfterEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:56.866 (528ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured keeps processing new ingresses even if one of the existing ingresses is misconfigured" classname="nginx-ingress-controller e2e suite" status="passed" time="38.8089373">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:56.867&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:05.372 (8.539s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:18:05.372&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:18:09.472 (4.1s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:18:09.472&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:18:23.753 (14.281s)&#xA;&gt; Enter [It] keeps processing new ingresses even if one of the existing ingresses is misconfigured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:505 @ 07/16/23 23:18:23.753&#xA;&lt; Exit [It] keeps processing new ingresses even if one of the existing ingresses is misconfigured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:505 @ 07/16/23 23:18:35.016 (11.297s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:35.016&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:35.607 (591ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-proxy-protocol should respect proto passed by the PROXY Protocol server port" classname="nginx-ingress-controller e2e suite" status="passed" time="111.3790498">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:35.609&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:43.138 (7.529s)&#xA;&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 07/16/23 23:18:43.138&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 07/16/23 23:18:54.215 (11.077s)&#xA;&gt; Enter [It] should respect proto passed by the PROXY Protocol server port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:79 @ 07/16/23 23:18:54.216&#xA;&lt; Exit [It] should respect proto passed by the PROXY Protocol server port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:79 @ 07/16/23 23:20:26.407 (1m32.295s)&#xA;&gt; Enter [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:26.407&#xA;&lt; Exit [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:26.885 (478ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with value and pattern should route requests to the correct upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="36.264726">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:26.887&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:37.187 (10.334s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:20:37.187&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:20:45.389 (8.202s)&#xA;&gt; Enter [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:532 @ 07/16/23 23:20:45.389&#xA;STEP: routing requests to the mainline upstream when header is set to &#39;DoCananry&#39; and header-value is &#39;DoCanary&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:557 @ 07/16/23 23:21:02.659&#xA;&lt; Exit [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:532 @ 07/16/23 23:21:02.665 (17.31s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:02.665&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:03.083 (418ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should not create additional upstream block when auth-keepalive is not set" classname="nginx-ingress-controller e2e suite" status="passed" time="50.761596">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:03.085&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:11.612 (8.528s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:21:11.613&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:21:15.676 (4.064s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:21:15.676&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:21:30.005 (14.329s)&#xA;&gt; Enter [It] should not create additional upstream block when auth-keepalive is not set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:552 @ 07/16/23 23:21:30.005&#xA;&lt; Exit [It] should not create additional upstream block when auth-keepalive is not set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:552 @ 07/16/23 23:21:53.323 (23.352s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:53.323&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:53.812 (489ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should setup proxy cookies" classname="nginx-ingress-controller e2e suite" status="passed" time="24.5685705">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:53.814&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:03.724 (9.944s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:22:03.724&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:22:07.799 (4.075s)&#xA;&gt; Enter [It] should setup proxy cookies - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:215 @ 07/16/23 23:22:07.799&#xA;&lt; Exit [It] should setup proxy cookies - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:215 @ 07/16/23 23:22:17.991 (10.193s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:17.992&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:18.348 (357ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication with caching is configured should redirect to signin url when not signed in" classname="nginx-ingress-controller e2e suite" status="passed" time="63.0259539">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:18.35&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:25.849 (7.5s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:22:25.849&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:22:29.974 (4.125s)&#xA;&gt; Enter [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 07/16/23 23:22:29.975&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 07/16/23 23:22:35.051&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 07/16/23 23:22:45.228&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 07/16/23 23:22:55.444&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 07/16/23 23:23:05.609&#xA;&lt; Exit [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 07/16/23 23:23:20.804 (50.898s)&#xA;&gt; Enter [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:849 @ 07/16/23 23:23:20.804&#xA;&lt; Exit [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:849 @ 07/16/23 23:23:20.815 (11ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:20.815&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:21.307 (492ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class Without IngressClass Cluster scoped Permission should watch Ingress with correct annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="30.5078184">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:21.309&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:29.836 (8.527s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:23:29.836&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:23:33.883 (4.082s)&#xA;&gt; Enter [BeforeEach] Without IngressClass Cluster scoped Permission - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:587 @ 07/16/23 23:23:33.883&#xA;&lt; Exit [BeforeEach] Without IngressClass Cluster scoped Permission - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:587 @ 07/16/23 23:23:40.947 (7.064s)&#xA;&gt; Enter [It] should watch Ingress with correct annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:631 @ 07/16/23 23:23:40.947&#xA;&lt; Exit [It] should watch Ingress with correct annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:631 @ 07/16/23 23:23:51.186 (10.238s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:51.186&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:51.782 (596ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With specific ingress-class flags should ignore Ingress with no class and accept the correctly configured Ingresses" classname="nginx-ingress-controller e2e suite" status="passed" time="49.7669884">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:51.784&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:01.236 (9.487s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:24:01.236&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:24:07.344 (6.108s)&#xA;&gt; Enter [BeforeEach] With specific ingress-class flags - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:392 @ 07/16/23 23:24:07.344&#xA;&lt; Exit [BeforeEach] With specific ingress-class flags - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:392 @ 07/16/23 23:24:16.393 (9.049s)&#xA;&gt; Enter [It] should ignore Ingress with no class and accept the correctly configured Ingresses - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:413 @ 07/16/23 23:24:16.393&#xA;&lt; Exit [It] should ignore Ingress with no class and accept the correctly configured Ingresses - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:413 @ 07/16/23 23:24:40.653 (24.294s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:40.653&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:41.482 (829ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to grpc:// and use grpc_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="23.4733869">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:41.484&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:50.125 (8.641s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 07/16/23 23:24:50.125&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 07/16/23 23:24:54.192 (4.067s)&#xA;&gt; Enter [It] should set backend protocol to grpc:// and use grpc_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:64 @ 07/16/23 23:24:54.192&#xA;&lt; Exit [It] should set backend protocol to grpc:// and use grpc_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:64 @ 07/16/23 23:25:04.321 (10.163s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:04.321&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:04.923 (601ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not break functionality" classname="nginx-ingress-controller e2e suite" status="passed" time="19.8245701">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:04.925&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:13.199 (8.274s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:25:13.199&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:25:17.26 (4.061s)&#xA;&gt; Enter [It] should not break functionality - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:267 @ 07/16/23 23:25:17.26&#xA;&lt; Exit [It] should not break functionality - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:267 @ 07/16/23 23:25:24.298 (7.039s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:24.298&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:24.749 (451ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity through the config map" classname="nginx-ingress-controller e2e suite" status="passed" time="42.5903439">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:24.752&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:33.474 (8.756s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:25:33.474&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:25:37.542 (4.067s)&#xA;&gt; Enter [It] should enable modsecurity through the config map - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:264 @ 07/16/23 23:25:37.542&#xA;&lt; Exit [It] should enable modsecurity through the config map - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:264 @ 07/16/23 23:26:06.773 (29.265s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:06.773&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:07.274 (502ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] access-log access-log-path use the default configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="12.105545">
              <system-err>&gt; Enter [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:07.276&#xA;&lt; Exit [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:15.787 (8.511s)&#xA;&gt; Enter [It] use the default configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:32 @ 07/16/23 23:26:15.787&#xA;&lt; Exit [It] use the default configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:32 @ 07/16/23 23:26:18.987 (3.2s)&#xA;&gt; Enter [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:18.987&#xA;&lt; Exit [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:19.381 (394ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not match" classname="nginx-ingress-controller e2e suite" status="passed" time="20.1295472">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:19.383&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:27.733 (8.35s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:26:27.733&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:26:31.801 (4.102s)&#xA;&gt; Enter [It] should not match - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:338 @ 07/16/23 23:26:31.801&#xA;&lt; Exit [It] should not match - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:338 @ 07/16/23 23:26:38.85 (7.05s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:38.85&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:39.478 (628ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-upstream with log-format-escape-json and log-format-escape-none log-format-escape-json enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="33.5727472">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:39.479&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:48.115 (8.636s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 07/16/23 23:26:48.115&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 07/16/23 23:26:59.194 (11.079s)&#xA;&gt; Enter [It] log-format-escape-json enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:82 @ 07/16/23 23:26:59.195&#xA;&lt; Exit [It] log-format-escape-json enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:82 @ 07/16/23 23:27:12.403 (13.243s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:12.403&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:13.018 (615ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Load Balancer] round-robin should evenly distribute requests with round-robin (default algorithm)" classname="nginx-ingress-controller e2e suite" status="passed" time="150.3759678">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:13.019&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:21.582 (8.563s)&#xA;&gt; Enter [BeforeEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/round_robin.go:34 @ 07/16/23 23:27:21.582&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/round_robin.go:34 @ 07/16/23 23:27:34.703 (13.156s)&#xA;&gt; Enter [It] should evenly distribute requests with round-robin (default algorithm) - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/round_robin.go:39 @ 07/16/23 23:27:34.703&#xA;&lt; Exit [It] should evenly distribute requests with round-robin (default algorithm) - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/round_robin.go:39 @ 07/16/23 23:29:42.768 (2m8.202s)&#xA;&gt; Enter [AfterEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:42.769&#xA;&lt; Exit [AfterEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:43.223 (454ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinitymode Check persistent affinity mode" classname="nginx-ingress-controller e2e suite" status="passed" time="136.5576609">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:43.227&#xA;&lt; Exit [BeforeEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:53.678 (10.45s)&#xA;&gt; Enter [It] Check persistent affinity mode - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinitymode.go:67 @ 07/16/23 23:29:53.678&#xA;&lt; Exit [It] Check persistent affinity mode - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinitymode.go:67 @ 07/16/23 23:31:59.236 (2m5.735s)&#xA;&gt; Enter [AfterEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:59.236&#xA;&lt; Exit [AfterEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:59.608 (372ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canary is created should route requests to the correct upstream if mainline ingress is created before the canary ingress" classname="nginx-ingress-controller e2e suite" status="passed" time="34.0670579">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:59.609&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:07.878 (8.303s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:32:07.878&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:32:16 (8.122s)&#xA;&gt; Enter [It] should route requests to the correct upstream if mainline ingress is created before the canary ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:161 @ 07/16/23 23:32:16&#xA;STEP: routing requests destined for the mainline ingress to the maineline upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:185 @ 07/16/23 23:32:33.194&#xA;STEP: routing requests destined for the canary ingress to the canary upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:195 @ 07/16/23 23:32:33.2&#xA;&lt; Exit [It] should route requests to the correct upstream if mainline ingress is created before the canary ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:161 @ 07/16/23 23:32:33.205 (17.24s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:33.206&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:33.607 (402ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] server-alias should return status code 200 for hosts defined in two ingresses, different path with one alias" classname="nginx-ingress-controller e2e suite" status="passed" time="28.3347056">
              <system-err>&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:33.609&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:42.047 (8.438s)&#xA;&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 07/16/23 23:32:42.047&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 07/16/23 23:32:44.131 (2.084s)&#xA;&gt; Enter [It] should return status code 200 for hosts defined in two ingresses, different path with one alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:87 @ 07/16/23 23:32:44.131&#xA;&lt; Exit [It] should return status code 200 for hosts defined in two ingresses, different path with one alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:87 @ 07/16/23 23:33:01.382 (17.284s)&#xA;&gt; Enter [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:01.382&#xA;&lt; Exit [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:01.909 (527ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates given an ingress with TLS correctly configured supports requests with domain with trailing dot" classname="nginx-ingress-controller e2e suite" status="passed" time="37.4747837">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:01.911&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:09.441 (7.531s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 07/16/23 23:33:09.441&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 07/16/23 23:33:13.505 (4.063s)&#xA;&gt; Enter [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 07/16/23 23:33:13.505&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:128 @ 07/16/23 23:33:30.702&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:136 @ 07/16/23 23:33:38.854&#xA;&lt; Exit [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 07/16/23 23:33:38.882 (25.412s)&#xA;&gt; Enter [It] supports requests with domain with trailing dot - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:145 @ 07/16/23 23:33:38.883&#xA;&lt; Exit [It] supports requests with domain with trailing dot - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:145 @ 07/16/23 23:33:38.915 (33ms)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:38.915&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:39.351 (436ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] from-to-www-redirect should redirect from www HTTP to HTTP" classname="nginx-ingress-controller e2e suite" status="passed" time="23.0666225">
              <system-err>&gt; Enter [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:39.353&#xA;&lt; Exit [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:47.674 (8.321s)&#xA;&gt; Enter [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:34 @ 07/16/23 23:33:47.674&#xA;&lt; Exit [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:34 @ 07/16/23 23:33:51.753 (4.079s)&#xA;&gt; Enter [It] should redirect from www HTTP to HTTP - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:38 @ 07/16/23 23:33:51.753&#xA;STEP: setting up server for redirect from www - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:39 @ 07/16/23 23:33:51.753&#xA;STEP: sending request to www.fromtowwwredirect.bar.com - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:55 @ 07/16/23 23:34:01.902&#xA;&lt; Exit [It] should redirect from www HTTP to HTTP - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:38 @ 07/16/23 23:34:01.908 (10.19s)&#xA;&gt; Enter [AfterEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:01.908&#xA;&lt; Exit [AfterEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:02.385 (477ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] mirror-* should disable mirror-request-body" classname="nginx-ingress-controller e2e suite" status="passed" time="23.1405183">
              <system-err>&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:02.387&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:10.798 (8.412s)&#xA;&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 07/16/23 23:34:10.798&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 07/16/23 23:34:14.981 (4.183s)&#xA;&gt; Enter [It] should disable mirror-request-body - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:67 @ 07/16/23 23:34:14.981&#xA;&lt; Exit [It] should disable mirror-request-body - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:67 @ 07/16/23 23:34:25.139 (10.158s)&#xA;&gt; Enter [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:25.139&#xA;&lt; Exit [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:25.527 (388ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should be disabled by default" classname="nginx-ingress-controller e2e suite" status="passed" time="12.2326973">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:25.529&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:34.003 (8.508s)&#xA;&gt; Enter [It] should be disabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:32 @ 07/16/23 23:34:34.003&#xA;&lt; Exit [It] should be disabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:32 @ 07/16/23 23:34:37.287 (3.284s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:37.287&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:37.727 (440ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] service-upstream when enabling in the configmap should use the Service Cluster IP and Port" classname="nginx-ingress-controller e2e suite" status="passed" time="30.9028224">
              <system-err>&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:37.729&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:46.195 (8.467s)&#xA;&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 07/16/23 23:34:46.195&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 07/16/23 23:34:50.299 (4.103s)&#xA;&gt; Enter [It] should use the Service Cluster IP and Port  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:70 @ 07/16/23 23:34:50.299&#xA;STEP: checking if the service is reached - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:82 @ 07/16/23 23:35:07.674&#xA;STEP: checking if the Service Cluster IP and Port are used - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:89 @ 07/16/23 23:35:07.684&#xA;&lt; Exit [It] should use the Service Cluster IP and Port  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:70 @ 07/16/23 23:35:07.935 (17.671s)&#xA;&gt; Enter [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:07.935&#xA;&lt; Exit [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:08.597 (662ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] global-options should have worker_rlimit_nofile option and be independent on amount of worker processes" classname="nginx-ingress-controller e2e suite" status="passed" time="19.007426">
              <system-err>&gt; Enter [BeforeEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:08.599&#xA;&lt; Exit [BeforeEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:16.925 (8.326s)&#xA;&gt; Enter [It] should have worker_rlimit_nofile option and be independent on amount of worker processes - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_options.go:38 @ 07/16/23 23:35:16.925&#xA;&lt; Exit [It] should have worker_rlimit_nofile option and be independent on amount of worker processes - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_options.go:38 @ 07/16/23 23:35:27.115 (10.19s)&#xA;&gt; Enter [AfterEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:27.115&#xA;&lt; Exit [AfterEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:27.606 (491ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Load Balancer] load-balance should apply the configmap load-balance setting" classname="nginx-ingress-controller e2e suite" status="passed" time="30.9142383">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:27.607&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:36.182 (8.609s)&#xA;&gt; Enter [BeforeEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/configmap.go:31 @ 07/16/23 23:35:36.182&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/configmap.go:31 @ 07/16/23 23:35:40.286 (4.104s)&#xA;&gt; Enter [It] should apply the configmap load-balance setting - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/configmap.go:35 @ 07/16/23 23:35:40.286&#xA;&lt; Exit [It] should apply the configmap load-balance setting - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/configmap.go:35 @ 07/16/23 23:35:57.881 (17.595s)&#xA;&gt; Enter [AfterEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:57.882&#xA;&lt; Exit [AfterEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:58.487 (606ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [TCP] tcp-services should expose a TCP service" classname="nginx-ingress-controller e2e suite" status="passed" time="22.2822975">
              <system-err>&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:58.488&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:08.838 (10.384s)&#xA;&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 07/16/23 23:36:08.838&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 07/16/23 23:36:08.844 (7ms)&#xA;&gt; Enter [It] should expose a TCP service - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:46 @ 07/16/23 23:36:08.844&#xA;&lt; Exit [It] should expose a TCP service - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:46 @ 07/16/23 23:36:20.132 (11.288s)&#xA;&gt; Enter [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:20.132&#xA;&lt; Exit [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:20.736 (604ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] custom HTTP and HTTPS ports with a plain HTTP ingress should set X-Forwarded-Port headers accordingly when listening on a non-default HTTP port" classname="nginx-ingress-controller e2e suite" status="passed" time="30.4581023">
              <system-err>&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:20.747&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:35.265 (14.553s)&#xA;&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 07/16/23 23:36:35.265&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 07/16/23 23:36:40.48 (5.214s)&#xA;&gt; Enter [It] should set X-Forwarded-Port headers accordingly when listening on a non-default HTTP port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:48 @ 07/16/23 23:36:40.48&#xA;&lt; Exit [It] should set X-Forwarded-Port headers accordingly when listening on a non-default HTTP port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:48 @ 07/16/23 23:36:50.676 (10.196s)&#xA;&gt; Enter [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:50.676&#xA;&lt; Exit [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:51.171 (494ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] Bad annotation values [BAD_ANNOTATIONS] should drop an ingress if there is a forbidden word in some annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="49.5470757">
              <system-err>&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:51.175&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:05.11 (13.969s)&#xA;&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 07/16/23 23:37:05.11&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 07/16/23 23:37:07.17 (2.06s)&#xA;&gt; Enter [It] [BAD_ANNOTATIONS] should drop an ingress if there is a forbidden word in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:67 @ 07/16/23 23:37:07.17&#xA;&lt; Exit [It] [BAD_ANNOTATIONS] should drop an ingress if there is a forbidden word in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:67 @ 07/16/23 23:37:39.655 (32.519s)&#xA;&gt; Enter [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:39.655&#xA;&lt; Exit [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:40.653 (998ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-catch-all should ignore catch all Ingress with backend" classname="nginx-ingress-controller e2e suite" status="passed" time="44.0523557">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:40.661&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:51.734 (11.073s)&#xA;&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 07/16/23 23:37:51.734&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 07/16/23 23:38:03.848 (12.148s)&#xA;&gt; Enter [It] should ignore catch all Ingress with backend - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:50 @ 07/16/23 23:38:03.849&#xA;&lt; Exit [It] should ignore catch all Ingress with backend - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:50 @ 07/16/23 23:38:24.234 (20.386s)&#xA;&gt; Enter [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:24.234&#xA;&lt; Exit [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:24.679 (445ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should return 200 for service type=ExternalName without a port defined" classname="nginx-ingress-controller e2e suite" status="passed" time="19.7847078">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:24.68&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:32.938 (8.292s)&#xA;&gt; Enter [It] should return 200 for service type=ExternalName without a port defined - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:95 @ 07/16/23 23:38:32.938&#xA;&lt; Exit [It] should return 200 for service type=ExternalName without a port defined - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:95 @ 07/16/23 23:38:43.94 (11.002s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:43.94&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:44.431 (490ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Nil Service Backend should return 404 when backend service is nil" classname="nginx-ingress-controller e2e suite" status="passed" time="30.5641053">
              <system-err>&gt; Enter [BeforeEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:44.432&#xA;&lt; Exit [BeforeEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:52.684 (8.252s)&#xA;&gt; Enter [BeforeEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_nil_backend.go:34 @ 07/16/23 23:38:52.684&#xA;&lt; Exit [BeforeEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_nil_backend.go:34 @ 07/16/23 23:38:56.739 (4.055s)&#xA;&gt; Enter [It] should return 404 when backend service is nil - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_nil_backend.go:38 @ 07/16/23 23:38:56.739&#xA;STEP: setting an ingress with a nil backend - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_nil_backend.go:39 @ 07/16/23 23:38:56.739&#xA;&lt; Exit [It] should return 404 when backend service is nil - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_nil_backend.go:38 @ 07/16/23 23:39:14.138 (17.433s)&#xA;&gt; Enter [AfterEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:14.138&#xA;&lt; Exit [AfterEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:14.962 (824ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow headers for cors" classname="nginx-ingress-controller e2e suite" status="passed" time="24.1079978">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:14.965&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:24.07 (9.105s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:39:24.07&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:39:28.143 (4.073s)&#xA;&gt; Enter [It] should allow headers for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:137 @ 07/16/23 23:39:28.143&#xA;&lt; Exit [It] should allow headers for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:137 @ 07/16/23 23:39:38.36 (10.251s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:38.36&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:39.039 (679ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic configuration configures balancer Lua middleware correctly" classname="nginx-ingress-controller e2e suite" status="passed" time="31.2447458">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:39.042&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:48.893 (9.851s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 07/16/23 23:39:48.893&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 07/16/23 23:40:03.237 (14.378s)&#xA;&gt; Enter [It] configures balancer Lua middleware correctly - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:50 @ 07/16/23 23:40:03.237&#xA;&lt; Exit [It] configures balancer Lua middleware correctly - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:50 @ 07/16/23 23:40:09.71 (6.473s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:09.71&#xA;&lt; Exit [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:10.252 (542ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates picks up the certificate when we add TLS spec to existing ingress" classname="nginx-ingress-controller e2e suite" status="passed" time="29.0878012">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:10.253&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:19.088 (8.835s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 07/16/23 23:40:19.088&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 07/16/23 23:40:23.173 (4.085s)&#xA;&gt; Enter [It] picks up the certificate when we add TLS spec to existing ingress - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:45 @ 07/16/23 23:40:23.173&#xA;&lt; Exit [It] picks up the certificate when we add TLS spec to existing ingress - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:45 @ 07/16/23 23:40:38.779 (15.64s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:38.779&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:39.307 (527ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by cookie respects always and never values" classname="nginx-ingress-controller e2e suite" status="passed" time="62.6425084">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:39.308&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:47.706 (8.397s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:40:47.706&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:40:55.919 (8.214s)&#xA;&gt; Enter [It] respects always and never values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:643 @ 07/16/23 23:40:55.919&#xA;STEP: routing requests to the canary upstream when cookie is set to &#39;always&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:667 @ 07/16/23 23:41:13.225&#xA;STEP: routing requests to the mainline upstream when cookie is set to &#39;never&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:678 @ 07/16/23 23:41:21.42&#xA;STEP: routing requests to the mainline upstream when cookie is set to anything else - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:689 @ 07/16/23 23:41:31.387&#xA;&lt; Exit [It] respects always and never values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:643 @ 07/16/23 23:41:41.387 (45.536s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:41.387&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:41.882 (496ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should set cors max-age" classname="nginx-ingress-controller e2e suite" status="passed" time="44.4955697">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:07:34.174&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:07:47.886 (13.712s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:07:47.886&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:08:05.964 (18.112s)&#xA;&gt; Enter [It] should set cors max-age - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:78 @ 07/16/23 23:08:05.964&#xA;&lt; Exit [It] should set cors max-age - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:78 @ 07/16/23 23:08:16.513 (10.55s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:16.513&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:18.635 (2.121s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - FastCGI should add fastcgi_index in the configuration file" classname="nginx-ingress-controller e2e suite" status="passed" time="29.4516908">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:18.644&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:33.277 (14.667s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 07/16/23 23:08:33.277&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 07/16/23 23:08:37.346 (4.069s)&#xA;&gt; Enter [It] should add fastcgi_index in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:54 @ 07/16/23 23:08:37.346&#xA;&lt; Exit [It] should add fastcgi_index in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:54 @ 07/16/23 23:08:47.641 (10.296s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:47.641&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:48.061 (420ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Memory Leak] Dynamic Certificates should not leak memory from ingress SSL certificates or configuration updates" classname="nginx-ingress-controller e2e suite" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should set proxy_redirect to off" classname="nginx-ingress-controller e2e suite" status="passed" time="25.8486686">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:48.065&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:56.738 (8.673s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:08:56.738&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:09:02.831 (6.128s)&#xA;&gt; Enter [It] should set proxy_redirect to off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:36 @ 07/16/23 23:09:02.831&#xA;&lt; Exit [It] should set proxy_redirect to off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:36 @ 07/16/23 23:09:13.19 (10.358s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:13.19&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:13.879 (690ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 503 when authentication is configured with an invalid secret" classname="nginx-ingress-controller e2e suite" status="passed" time="24.7940821">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:13.881&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:23.851 (9.97s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:09:23.851&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:09:27.921 (4.07s)&#xA;&gt; Enter [It] should return status code 503 when authentication is configured with an invalid secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:65 @ 07/16/23 23:09:27.921&#xA;&lt; Exit [It] should return status code 503 when authentication is configured with an invalid secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:65 @ 07/16/23 23:09:38.098 (10.211s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:38.098&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:38.641 (542ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-send-timeout should set valid proxy send timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="30.2675265">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:38.642&#xA;&lt; Exit [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:47.013 (8.37s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:32 @ 07/16/23 23:09:47.013&#xA;&lt; Exit [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:32 @ 07/16/23 23:09:51.1 (4.087s)&#xA;&gt; Enter [It] should set valid proxy send timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:36 @ 07/16/23 23:09:51.1&#xA;&lt; Exit [It] should set valid proxy send timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:36 @ 07/16/23 23:10:08.284 (17.218s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:08.284&#xA;&lt; Exit [AfterEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:08.876 (592ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] stream-snippet should add value of stream-snippet to nginx config" classname="nginx-ingress-controller e2e suite" status="passed" time="28.2197321">
              <system-err>&gt; Enter [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:08.879&#xA;&lt; Exit [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:17.058 (8.179s)&#xA;&gt; Enter [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:37 @ 07/16/23 23:10:17.058&#xA;&lt; Exit [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:37 @ 07/16/23 23:10:21.245 (4.187s)&#xA;&gt; Enter [It] should add value of stream-snippet to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:41 @ 07/16/23 23:10:21.245&#xA;&lt; Exit [It] should add value of stream-snippet to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:41 @ 07/16/23 23:10:36.438 (15.228s)&#xA;&gt; Enter [AfterEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:36.438&#xA;&lt; Exit [AfterEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:37.064 (626ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should set cache_key when external auth cache is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="23.4640268">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:37.067&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:45.508 (8.441s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:10:45.508&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:10:49.586 (4.077s)&#xA;&gt; Enter [It] should set cache_key when external auth cache is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:322 @ 07/16/23 23:10:49.586&#xA;&lt; Exit [It] should set cache_key when external auth cache is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:322 @ 07/16/23 23:10:59.919 (10.333s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:59.919&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:11:00.531 (612ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [SSL] redirect to HTTPS should redirect from HTTP to HTTPS when secret is missing" classname="nginx-ingress-controller e2e suite" status="passed" time="26.4065312">
              <system-err>&gt; Enter [BeforeEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:11:00.533&#xA;&lt; Exit [BeforeEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:11:09.091 (8.614s)&#xA;&gt; Enter [BeforeEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/http_redirect.go:32 @ 07/16/23 23:11:09.091&#xA;&lt; Exit [BeforeEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/http_redirect.go:32 @ 07/16/23 23:11:13.182 (4.091s)&#xA;&gt; Enter [It] should redirect from HTTP to HTTPS when secret is missing - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/http_redirect.go:36 @ 07/16/23 23:11:13.182&#xA;&lt; Exit [It] should redirect from HTTP to HTTPS when secret is missing - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/http_redirect.go:36 @ 07/16/23 23:11:26.418 (13.236s)&#xA;&gt; Enter [AfterEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:11:26.418&#xA;&lt; Exit [AfterEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:11:26.883 (466ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] custom-http-errors configures Nginx correctly" classname="nginx-ingress-controller e2e suite" status="passed" time="50.2990807">
              <system-err>&gt; Enter [BeforeEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:11:26.886&#xA;&lt; Exit [BeforeEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:11:35.167 (8.337s)&#xA;&gt; Enter [BeforeEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:37 @ 07/16/23 23:11:35.167&#xA;&lt; Exit [BeforeEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:37 @ 07/16/23 23:11:39.249 (4.082s)&#xA;&gt; Enter [It] configures Nginx correctly - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:41 @ 07/16/23 23:11:39.249&#xA;STEP: turning on proxy_intercept_errors directive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:59 @ 07/16/23 23:11:49.509&#xA;STEP: configuring error_page directive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:62 @ 07/16/23 23:11:49.509&#xA;STEP: creating error locations - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:67 @ 07/16/23 23:11:49.509&#xA;STEP: updating configuration when only custom-http-error value changes - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:72 @ 07/16/23 23:11:49.509&#xA;STEP: ignoring duplicate values (503 in this case) per server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:90 @ 07/16/23 23:11:55.803&#xA;STEP: using the custom default-backend from annotation for upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:102 @ 07/16/23 23:12:06.081&#xA;&lt; Exit [It] configures Nginx correctly - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:41 @ 07/16/23 23:12:16.315 (37.103s)&#xA;&gt; Enter [AfterEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:16.315&#xA;&lt; Exit [AfterEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:17.092 (777ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* with invalid auth-url should deny whole location should return 503 (location was denied)" classname="nginx-ingress-controller e2e suite" status="passed" time="23.9837494">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:17.094&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:26.253 (9.159s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:12:26.253&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:12:30.38 (4.127s)&#xA;&gt; Enter [BeforeEach] with invalid auth-url should deny whole location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:866 @ 07/16/23 23:12:30.38&#xA;&lt; Exit [BeforeEach] with invalid auth-url should deny whole location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:866 @ 07/16/23 23:12:40.55 (10.205s)&#xA;&gt; Enter [It] should return 503 (location was denied) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:879 @ 07/16/23 23:12:40.55&#xA;&lt; Exit [It] should return 503 (location was denied) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:879 @ 07/16/23 23:12:40.557 (7ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:40.557&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:41.043 (485ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity when enable-owasp-modsecurity-crs is set to true" classname="nginx-ingress-controller e2e suite" status="passed" time="42.2364547">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:41.045&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:49.182 (8.137s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:12:49.182&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:12:53.256 (4.074s)&#xA;&gt; Enter [It] should enable modsecurity when enable-owasp-modsecurity-crs is set to true - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:225 @ 07/16/23 23:12:53.256&#xA;&lt; Exit [It] should enable modsecurity when enable-owasp-modsecurity-crs is set to true - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:225 @ 07/16/23 23:13:22.75 (29.529s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:22.751&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:23.247 (496ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] OCSP should enable OCSP and contain stapling information in the connection" classname="nginx-ingress-controller e2e suite" status="passed" time="56.586004">
              <system-err>&gt; Enter [BeforeEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:23.249&#xA;&lt; Exit [BeforeEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:32.429 (9.214s)&#xA;&gt; Enter [BeforeEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:45 @ 07/16/23 23:13:32.429&#xA;&lt; Exit [BeforeEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:45 @ 07/16/23 23:13:36.507 (4.079s)&#xA;&gt; Enter [It] should enable OCSP and contain stapling information in the connection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:49 @ 07/16/23 23:13:36.507&#xA;STEP: running cfssl gencert -initca ca_csr.json | cfssljson -bare ca - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:216 @ 07/16/23 23:13:43.545&#xA;STEP: running cfssl gencert -ca ca.pem -ca-key ca-key.pem -config=cfssl_config.json -profile=intermediate intermediate_ca_csr.json | cfssljson -bare intermediate_ca - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:216 @ 07/16/23 23:13:43.952&#xA;STEP: running cfssl gencert -ca intermediate_ca.pem -ca-key intermediate_ca-key.pem -config=cfssl_config.json -profile=ocsp ocsp_csr.json | cfssljson -bare ocsp - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:216 @ 07/16/23 23:13:44.496&#xA;STEP: running cfssl serve -db-config=db-config.json -ca-key=intermediate_ca-key.pem -ca=intermediate_ca.pem -config=cfssl_config.json -responder=ocsp.pem -responder-key=ocsp-key.pem - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:228 @ 07/16/23 23:13:44.802&#xA;STEP: running cfssl gencert -remote=localhost -profile=server leaf_csr.json | cfssljson -bare leaf - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:238 @ 07/16/23 23:13:49.804&#xA;STEP: running cfssl ocsprefresh -ca intermediate_ca.pem -responder=ocsp.pem -responder-key=ocsp-key.pem -db-config=db-config.json - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:252 @ 07/16/23 23:13:50.312&#xA;&lt; Exit [It] should enable OCSP and contain stapling information in the connection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:49 @ 07/16/23 23:14:19.018 (42.545s)&#xA;&gt; Enter [AfterEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:19.019&#xA;&lt; Exit [AfterEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:19.766 (748ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] satisfy should configure satisfy directive correctly" classname="nginx-ingress-controller e2e suite" status="passed" time="39.1485666">
              <system-err>&gt; Enter [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:19.784&#xA;&lt; Exit [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:28.844 (9.06s)&#xA;&gt; Enter [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:38 @ 07/16/23 23:14:28.844&#xA;&lt; Exit [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:38 @ 07/16/23 23:14:32.923 (4.113s)&#xA;&gt; Enter [It] should configure satisfy directive correctly - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:42 @ 07/16/23 23:14:32.923&#xA;&lt; Exit [It] should configure satisfy directive correctly - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:42 @ 07/16/23 23:14:58.308 (25.386s)&#xA;&gt; Enter [AfterEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:58.309&#xA;&lt; Exit [AfterEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:58.898 (590ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should enable opentracing using zipkin" classname="nginx-ingress-controller e2e suite" status="passed" time="32.8250242">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:58.904&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:07.074 (8.204s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:15:07.074&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:15:11.143 (4.069s)&#xA;&gt; Enter [It] should enable opentracing using zipkin - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:160 @ 07/16/23 23:15:11.143&#xA;&lt; Exit [It] should enable opentracing using zipkin - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:160 @ 07/16/23 23:15:31.188 (20.046s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:31.189&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:31.695 (506ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:15:31.695&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:15:31.695 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - GRPC should return OK for service with backend protocol GRPC" classname="nginx-ingress-controller e2e suite" status="passed" time="25.1184251">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:31.698&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:40.015 (8.352s)&#xA;&gt; Enter [It] should return OK for service with backend protocol GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:68 @ 07/16/23 23:15:40.015&#xA;&lt; Exit [It] should return OK for service with backend protocol GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:68 @ 07/16/23 23:15:56.386 (16.37s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:56.386&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:56.782 (396ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates given an ingress with TLS correctly configured falls back to using default certificate when secret gets deleted without reloading" classname="nginx-ingress-controller e2e suite" status="passed" time="42.4509444">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:56.784&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:04.113 (7.363s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 07/16/23 23:16:04.113&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 07/16/23 23:16:08.211 (4.099s)&#xA;&gt; Enter [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 07/16/23 23:16:08.211&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:128 @ 07/16/23 23:16:25.445&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:136 @ 07/16/23 23:16:33.599&#xA;&lt; Exit [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 07/16/23 23:16:33.62 (25.443s)&#xA;&gt; Enter [It] falls back to using default certificate when secret gets deleted without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:185 @ 07/16/23 23:16:33.62&#xA;STEP: serving the default certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:204 @ 07/16/23 23:16:38.67&#xA;STEP: skipping Nginx reload - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:214 @ 07/16/23 23:16:38.72&#xA;&lt; Exit [It] falls back to using default certificate when secret gets deleted without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:185 @ 07/16/23 23:16:38.72 (5.1s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:38.72&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:39.166 (446ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] nginx-configuration fails when using root directive" classname="nginx-ingress-controller e2e suite" status="passed" time="62.166271">
              <system-err>&gt; Enter [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 07/16/23 23:16:39.168&#xA;&lt; Exit [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 07/16/23 23:16:41.179 (2.011s)&#xA;&gt; Enter [It] fails when using root directive - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:124 @ 07/16/23 23:16:41.179&#xA;&lt; Exit [It] fails when using root directive - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:124 @ 07/16/23 23:17:41.25 (1m0.14s)&#xA;&gt; Enter [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 07/16/23 23:17:41.25&#xA;&lt; Exit [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 07/16/23 23:17:41.266 (16ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should set proxy_redirect to hello.com goodbye.com" classname="nginx-ingress-controller e2e suite" status="passed" time="22.8308762">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:41.269&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:49.268 (7.999s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:17:49.268&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:17:53.439 (4.171s)&#xA;&gt; Enter [It] should set proxy_redirect to hello.com goodbye.com - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:68 @ 07/16/23 23:17:53.439&#xA;&lt; Exit [It] should set proxy_redirect to hello.com goodbye.com - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:68 @ 07/16/23 23:18:03.611 (10.206s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:03.611&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:04.065 (454ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should not create additional upstream block when host part of auth-url contains a variable" classname="nginx-ingress-controller e2e suite" status="passed" time="49.4074574">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:04.067&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:11.387 (7.321s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:18:11.387&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:18:15.513 (4.126s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:18:15.513&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:18:29.758 (14.244s)&#xA;&gt; Enter [It] should not create additional upstream block when host part of auth-url contains a variable - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:570 @ 07/16/23 23:18:29.758&#xA;&lt; Exit [It] should not create additional upstream block when host part of auth-url contains a variable - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:570 @ 07/16/23 23:18:52.938 (23.215s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:52.938&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:53.44 (502ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not break functionality - without `*`" classname="nginx-ingress-controller e2e suite" status="passed" time="20.0099787">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:53.442&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:01.722 (8.314s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:19:01.722&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:19:05.782 (4.06s)&#xA;&gt; Enter [It] should not break functionality - without `*` - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:291 @ 07/16/23 23:19:05.782&#xA;&lt; Exit [It] should not break functionality - without `*` - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:291 @ 07/16/23 23:19:12.827 (7.045s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:12.827&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:13.418 (591ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log disable-http-access-log set access_log off" classname="nginx-ingress-controller e2e suite" status="passed" time="30.3784723">
              <system-err>&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:13.419&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:21.929 (8.511s)&#xA;&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 07/16/23 23:19:21.93&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 07/16/23 23:19:26.01 (4.081s)&#xA;&gt; Enter [It] disable-http-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:53 @ 07/16/23 23:19:26.011&#xA;&lt; Exit [It] disable-http-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:53 @ 07/16/23 23:19:43.294 (17.318s)&#xA;&gt; Enter [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:43.294&#xA;&lt; Exit [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:43.763 (468ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure Opentelemetry should not exists opentelemetry_operation_name directive when is empty" classname="nginx-ingress-controller e2e suite" status="passed" time="32.0100399">
              <system-err>&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:43.765&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:53.125 (9.36s)&#xA;&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 07/16/23 23:19:53.125&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 07/16/23 23:19:57.249 (4.124s)&#xA;&gt; Enter [It] should not exists opentelemetry_operation_name directive when is empty - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:89 @ 07/16/23 23:19:57.249&#xA;&lt; Exit [It] should not exists opentelemetry_operation_name directive when is empty - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:89 @ 07/16/23 23:20:14.861 (17.646s)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:14.861&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:15.741 (880ms)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 07/16/23 23:20:15.741&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 07/16/23 23:20:15.741 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] DeepInspection should drop whole ingress if one path matches invalid regex" classname="nginx-ingress-controller e2e suite" status="passed" time="30.3802146">
              <system-err>&gt; Enter [BeforeEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:15.743&#xA;&lt; Exit [BeforeEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:24.398 (8.655s)&#xA;&gt; Enter [BeforeEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/deep_inspection.go:30 @ 07/16/23 23:20:24.398&#xA;&lt; Exit [BeforeEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/deep_inspection.go:30 @ 07/16/23 23:20:28.465 (4.067s)&#xA;&gt; Enter [It] should drop whole ingress if one path matches invalid regex - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/deep_inspection.go:34 @ 07/16/23 23:20:28.465&#xA;&lt; Exit [It] should drop whole ingress if one path matches invalid regex - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/deep_inspection.go:34 @ 07/16/23 23:20:45.696 (17.265s)&#xA;&gt; Enter [AfterEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:45.696&#xA;&lt; Exit [AfterEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:46.089 (393ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the upstream keep alive should set keep alive connection timeout to upstream server" classname="nginx-ingress-controller e2e suite" status="passed" time="30.472846">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:46.09&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:54.488 (8.398s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 07/16/23 23:20:54.488&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 07/16/23 23:21:05.565 (11.111s)&#xA;&gt; Enter [It] should set keep alive connection timeout to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:68 @ 07/16/23 23:21:05.565&#xA;&lt; Exit [It] should set keep alive connection timeout to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:68 @ 07/16/23 23:21:15.847 (10.282s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:15.847&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:16.528 (681ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] http2-push-preload enable the http2-push-preload directive" classname="nginx-ingress-controller e2e suite" status="passed" time="25.0381477">
              <system-err>&gt; Enter [BeforeEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:16.53&#xA;&lt; Exit [BeforeEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:26.755 (10.225s)&#xA;&gt; Enter [BeforeEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/http2pushpreload.go:30 @ 07/16/23 23:21:26.755&#xA;&lt; Exit [BeforeEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/http2pushpreload.go:30 @ 07/16/23 23:21:30.816 (4.061s)&#xA;&gt; Enter [It] enable the http2-push-preload directive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/http2pushpreload.go:34 @ 07/16/23 23:21:30.816&#xA;&lt; Exit [It] enable the http2-push-preload directive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/http2pushpreload.go:34 @ 07/16/23 23:21:41.003 (10.222s)&#xA;&gt; Enter [AfterEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:41.003&#xA;&lt; Exit [AfterEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:41.534 (531ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should return 200 for service type=ExternalName using a port name" classname="nginx-ingress-controller e2e suite" status="passed" time="19.445075">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:41.538&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:50.229 (8.691s)&#xA;&gt; Enter [It] should return 200 for service type=ExternalName using a port name - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:184 @ 07/16/23 23:21:50.229&#xA;&lt; Exit [It] should return 200 for service type=ExternalName using a port name - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:184 @ 07/16/23 23:22:00.623 (10.393s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:00.623&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:00.983 (361ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check server names hash size should set server_names_hash_bucket_size" classname="nginx-ingress-controller e2e suite" status="passed" time="30.5991629">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:00.985&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:09.37 (8.419s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 07/16/23 23:22:09.37&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 07/16/23 23:22:20.486 (11.116s)&#xA;&gt; Enter [It] should set server_names_hash_bucket_size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:40 @ 07/16/23 23:22:20.486&#xA;&lt; Exit [It] should set server_names_hash_bucket_size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:40 @ 07/16/23 23:22:30.763 (10.277s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:30.763&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:31.515 (787ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName works with external name set to incomplete fqdn" classname="nginx-ingress-controller e2e suite" status="passed" time="23.5813732">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:31.521&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:40.235 (8.714s)&#xA;&gt; Enter [It] works with external name set to incomplete fqdn - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:62 @ 07/16/23 23:22:40.235&#xA;&lt; Exit [It] works with external name set to incomplete fqdn - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:62 @ 07/16/23 23:22:54.509 (14.274s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:54.509&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:55.102 (593ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the upstream keep alive should set keepalive connection to upstream server" classname="nginx-ingress-controller e2e suite" status="passed" time="30.7302203">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:55.104&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:03.655 (8.585s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 07/16/23 23:23:03.655&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 07/16/23 23:23:14.739 (11.084s)&#xA;&gt; Enter [It] should set keepalive connection to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:59 @ 07/16/23 23:23:14.739&#xA;&lt; Exit [It] should set keepalive connection to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:59 @ 07/16/23 23:23:25.032 (10.292s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:25.032&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:25.8 (768ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] nginx-configuration start nginx with default configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="11.1702051">
              <system-err>&gt; Enter [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 07/16/23 23:23:25.803&#xA;&lt; Exit [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 07/16/23 23:23:27.816 (2.013s)&#xA;&gt; Enter [It] start nginx with default configuration - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:102 @ 07/16/23 23:23:27.816&#xA;&lt; Exit [It] start nginx with default configuration - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:102 @ 07/16/23 23:23:36.925 (9.144s)&#xA;&gt; Enter [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 07/16/23 23:23:36.925&#xA;&lt; Exit [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 07/16/23 23:23:36.938 (13ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should not set proxy client-max-body-size to incorrect value" classname="nginx-ingress-controller e2e suite" status="passed" time="23.3213324">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:36.94&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:45.412 (8.472s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:23:45.412&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:23:49.52 (4.108s)&#xA;&gt; Enter [It] should not set proxy client-max-body-size to incorrect value - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:100 @ 07/16/23 23:23:49.52&#xA;&lt; Exit [It] should not set proxy client-max-body-size to incorrect value - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:100 @ 07/16/23 23:23:59.723 (10.203s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:59.723&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:00.261 (538ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 200 when no authentication is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="22.5986154">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:00.263&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:07.782 (7.554s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:24:07.782&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:24:11.858 (4.076s)&#xA;&gt; Enter [It] should return status code 200 when no authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:46 @ 07/16/23 23:24:11.858&#xA;&lt; Exit [It] should return status code 200 when no authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:46 @ 07/16/23 23:24:22.095 (10.237s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:22.095&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:22.827 (732ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should not exists opentracing_location_operation_name directive when is empty" classname="nginx-ingress-controller e2e suite" status="passed" time="28.365788">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:22.835&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:31.215 (8.414s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:24:31.215&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:24:33.268 (2.053s)&#xA;&gt; Enter [It] should not exists opentracing_location_operation_name directive when is empty - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:130 @ 07/16/23 23:24:33.268&#xA;&lt; Exit [It] should not exists opentracing_location_operation_name directive when is empty - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:130 @ 07/16/23 23:24:50.51 (17.242s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:50.51&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:51.166 (657ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:24:51.166&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:24:51.166 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with value and pattern should route requests to the correct upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="34.7211242">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:51.169&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:00.029 (8.86s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:25:00.029&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:25:08.096 (8.101s)&#xA;&gt; Enter [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:490 @ 07/16/23 23:25:08.096&#xA;STEP: routing requests to the canary upstream when header pattern is matched - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:514 @ 07/16/23 23:25:25.318&#xA;STEP: routing requests to the mainline upstream when header failed to match header value - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:523 @ 07/16/23 23:25:25.328&#xA;&lt; Exit [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:490 @ 07/16/23 23:25:25.338 (17.243s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:25.339&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:25.856 (517ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check the map hash size should set vmap-hash-bucket-size" classname="nginx-ingress-controller e2e suite" status="passed" time="30.3484696">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:25.858&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:34.445 (8.622s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 07/16/23 23:25:34.445&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 07/16/23 23:25:45.53 (11.085s)&#xA;&gt; Enter [It] should set vmap-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:100 @ 07/16/23 23:25:45.53&#xA;&lt; Exit [It] should set vmap-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:100 @ 07/16/23 23:25:55.715 (10.185s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:55.715&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:56.172 (456ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] permanent-redirect permanent-redirect-code should respond with a standard redirect code" classname="nginx-ingress-controller e2e suite" status="passed" time="19.4250835">
              <system-err>&gt; Enter [BeforeEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:56.173&#xA;&lt; Exit [BeforeEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:04.819 (8.68s)&#xA;&gt; Enter [It] should respond with a standard redirect code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:33 @ 07/16/23 23:26:04.819&#xA;STEP: setting permanent-redirect annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:34 @ 07/16/23 23:26:04.819&#xA;STEP: sending request to redirected URL path - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:52 @ 07/16/23 23:26:15.073&#xA;&lt; Exit [It] should respond with a standard redirect code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:33 @ 07/16/23 23:26:15.081 (10.263s)&#xA;&gt; Enter [AfterEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:15.081&#xA;&lt; Exit [AfterEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:15.564 (482ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] should return 404 sending requests when only a default backend is running" classname="nginx-ingress-controller e2e suite" status="passed" time="18.352629">
              <system-err>&gt; Enter [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:15.565&#xA;&lt; Exit [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:23.961 (8.396s)&#xA;&gt; Enter [It] should return 404 sending requests when only a default backend is running - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:33 @ 07/16/23 23:26:23.961&#xA;STEP: basic HTTP GET request without host to path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 07/16/23 23:26:28.963&#xA;STEP: basic HTTP GET request without host to path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 07/16/23 23:26:28.977&#xA;STEP: basic HTTPS GET request without host to path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 07/16/23 23:26:28.992&#xA;STEP: basic HTTPS GET request without host to path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 07/16/23 23:26:29.017&#xA;STEP: basic HTTP POST request without host to path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 07/16/23 23:26:29.044&#xA;STEP: basic HTTP POST request without host to path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 07/16/23 23:26:29.06&#xA;STEP: basic HTTPS POST request without host to path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 07/16/23 23:26:29.371&#xA;STEP: basic HTTPS POST request without host to path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 07/16/23 23:26:29.776&#xA;STEP: basic HTTP GET request to host foo.bar.com and path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 07/16/23 23:26:30.197&#xA;STEP: basic HTTP GET request to host foo.bar.com and path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 07/16/23 23:26:30.574&#xA;STEP: basic HTTPS GET request to host foo.bar.com and path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 07/16/23 23:26:30.98&#xA;STEP: basic HTTPS GET request to host foo.bar.com and path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 07/16/23 23:26:31.34&#xA;STEP: basic HTTP POST request to host foo.bar.com and path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 07/16/23 23:26:31.743&#xA;STEP: basic HTTP POST request to host foo.bar.com and path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 07/16/23 23:26:32.136&#xA;STEP: basic HTTPS POST request to host foo.bar.com and path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 07/16/23 23:26:32.539&#xA;STEP: basic HTTPS POST request to host foo.bar.com and path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 07/16/23 23:26:32.97&#xA;&lt; Exit [It] should return 404 sending requests when only a default backend is running - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:33 @ 07/16/23 23:26:33.344 (9.418s)&#xA;&gt; Enter [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:33.344&#xA;&lt; Exit [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:33.883 (539ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should propagate the w3c header when configured with jaeger" classname="nginx-ingress-controller e2e suite" status="passed" time="42.8786055">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:33.885&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:41.697 (7.812s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:26:41.697&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:26:45.787 (4.089s)&#xA;&gt; Enter [It] should propagate the w3c header when configured with jaeger - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:197 @ 07/16/23 23:26:45.787&#xA;&lt; Exit [It] should propagate the w3c header when configured with jaeger - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:197 @ 07/16/23 23:27:16.141 (30.389s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:16.141&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:16.729 (588ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:27:16.729&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:27:16.729 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with value should route requests to the correct upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="36.4841509">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:16.734&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:27.28 (10.546s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:27:27.28&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:27:35.372 (8.127s)&#xA;&gt; Enter [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:426 @ 07/16/23 23:27:35.373&#xA;STEP: routing requests to the canary upstream when header is set to &#39;DoCanary&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:451 @ 07/16/23 23:27:52.596&#xA;STEP: routing requests to the mainline upstream when header is set to &#39;always&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:460 @ 07/16/23 23:27:52.607&#xA;STEP: routing requests to the mainline upstream when header is set to &#39;never&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:469 @ 07/16/23 23:27:52.618&#xA;STEP: routing requests to the mainline upstream when header is set to anything else - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:478 @ 07/16/23 23:27:52.624&#xA;&lt; Exit [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:426 @ 07/16/23 23:27:52.632 (17.259s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:52.632&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:53.184 (552ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should exists opentracing_location_operation_name directive when is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="30.1413011">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:53.185&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:01.521 (8.37s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:28:01.521&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:28:05.603 (4.082s)&#xA;&gt; Enter [It] should exists opentracing_location_operation_name directive when is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:145 @ 07/16/23 23:28:05.603&#xA;&lt; Exit [It] should exists opentracing_location_operation_name directive when is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:145 @ 07/16/23 23:28:22.87 (17.267s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:22.87&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:23.292 (422ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:28:23.292&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:28:23.292 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should set gzip_min_length to 100" classname="nginx-ingress-controller e2e suite" status="passed" time="26.156898">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:23.293&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:31.555 (8.296s)&#xA;&gt; Enter [It] should set gzip_min_length to 100 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:78 @ 07/16/23 23:28:31.555&#xA;&lt; Exit [It] should set gzip_min_length to 100 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:78 @ 07/16/23 23:28:48.825 (17.268s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:48.825&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:49.416 (591ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should not exists opentracing_operation_name directive when is empty" classname="nginx-ingress-controller e2e suite" status="passed" time="30.6103322">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:49.42&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:57.983 (8.563s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:28:57.983&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:29:02.021 (4.072s)&#xA;&gt; Enter [It] should not exists opentracing_operation_name directive when is empty - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:100 @ 07/16/23 23:29:02.021&#xA;&lt; Exit [It] should not exists opentracing_operation_name directive when is empty - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:100 @ 07/16/23 23:29:19.271 (17.25s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:19.271&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:19.996 (725ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:29:19.996&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:29:19.996 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-send-timeout should not set invalid proxy send timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="29.5046748">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:19.999&#xA;&lt; Exit [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:27.495 (7.496s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:32 @ 07/16/23 23:29:27.495&#xA;&lt; Exit [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:32 @ 07/16/23 23:29:31.525 (4.064s)&#xA;&gt; Enter [It] should not set invalid proxy send timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:52 @ 07/16/23 23:29:31.525&#xA;&lt; Exit [It] should not set invalid proxy send timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:52 @ 07/16/23 23:29:48.787 (17.262s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:48.787&#xA;&lt; Exit [AfterEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:49.468 (682ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check the variable hash size should set variables-hash-max-size" classname="nginx-ingress-controller e2e suite" status="passed" time="30.3397123">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:49.475&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:58.075 (8.6s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 07/16/23 23:29:58.075&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 07/16/23 23:30:09.134 (11.098s)&#xA;&gt; Enter [It] should set variables-hash-max-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:88 @ 07/16/23 23:30:09.134&#xA;&lt; Exit [It] should set variables-hash-max-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:88 @ 07/16/23 23:30:19.281 (10.147s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:30:19.281&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:30:19.775 (494ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure Opentelemetry should include opentelemetry_trust_incoming_spans on directive when enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="41.069556">
              <system-err>&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:30:19.783&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:30:29.478 (9.696s)&#xA;&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 07/16/23 23:30:29.478&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 07/16/23 23:30:33.47 (4.057s)&#xA;&gt; Enter [It] should include opentelemetry_trust_incoming_spans on directive when enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:74 @ 07/16/23 23:30:33.471&#xA;&lt; Exit [It] should include opentelemetry_trust_incoming_spans on directive when enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:74 @ 07/16/23 23:30:54.972 (21.502s)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:30:54.973&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:00.749 (5.815s)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 07/16/23 23:31:00.749&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 07/16/23 23:31:00.749 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* canary affinity behavior always routes traffic to canary if first request was affinitized to canary (explicit sticky behavior)" classname="nginx-ingress-controller e2e suite" status="passed" time="42.0865835">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:00.828&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:08.468 (7.64s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:31:08.468&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:31:16.616 (8.148s)&#xA;&gt; Enter [It] always routes traffic to canary if first request was affinitized to canary (explicit sticky behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:1000 @ 07/16/23 23:31:16.616&#xA;&lt; Exit [It] always routes traffic to canary if first request was affinitized to canary (explicit sticky behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:1000 @ 07/16/23 23:31:42.294 (25.713s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:42.294&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:42.864 (569ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 401 when authentication is configured but Authorization header is not configured" classname="nginx-ingress-controller e2e suite" status="passed" time="24.3322977">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:42.867&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:51.421 (8.554s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:31:51.421&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:31:55.49 (4.069s)&#xA;&gt; Enter [It] should return status code 401 when authentication is configured but Authorization header is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:89 @ 07/16/23 23:31:55.49&#xA;&lt; Exit [It] should return status code 401 when authentication is configured but Authorization header is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:89 @ 07/16/23 23:32:06.723 (11.267s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:06.723&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:07.164 (442ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-forwarded-headers should not trust X-Forwarded headers when setting is false" classname="nginx-ingress-controller e2e suite" status="passed" time="36.0455554">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:07.168&#xA;&lt; Exit [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:14.509 (7.341s)&#xA;&gt; Enter [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:35 @ 07/16/23 23:32:14.509&#xA;&lt; Exit [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:35 @ 07/16/23 23:32:25.596 (11.087s)&#xA;&gt; Enter [It] should not trust X-Forwarded headers when setting is false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:92 @ 07/16/23 23:32:25.596&#xA;&lt; Exit [It] should not trust X-Forwarded headers when setting is false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:92 @ 07/16/23 23:32:42.761 (17.199s)&#xA;&gt; Enter [AfterEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:42.761&#xA;&lt; Exit [AfterEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:43.179 (418ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] access-log http-access-log-path use the specified configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="18.853158">
              <system-err>&gt; Enter [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:43.184&#xA;&lt; Exit [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:51.238 (8.053s)&#xA;&gt; Enter [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:54 @ 07/16/23 23:32:51.238&#xA;&lt; Exit [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:54 @ 07/16/23 23:33:01.441 (10.238s)&#xA;&gt; Enter [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:01.442&#xA;&lt; Exit [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:02.003 (562ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by weight should route requests split between mainline and canary if canary weight is 100 and weight total is 200" classname="nginx-ingress-controller e2e suite" status="passed" time="73.5377854">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:02.007&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:11.575 (9.568s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:33:11.575&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:33:19.722 (8.147s)&#xA;&gt; Enter [It] should route requests split between mainline and canary if canary weight is 100 and weight total is 200 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:834 @ 07/16/23 23:33:19.722&#xA;&lt; Exit [It] should route requests split between mainline and canary if canary weight is 100 and weight total is 200 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:834 @ 07/16/23 23:34:15.058 (55.405s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:15.058&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:15.476 (418ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] mirror-* should set mirror-target to https://test.env.com/$request_uri" classname="nginx-ingress-controller e2e suite" status="passed" time="23.3580945">
              <system-err>&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:15.477&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:23.831 (8.354s)&#xA;&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 07/16/23 23:34:23.831&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 07/16/23 23:34:27.893 (4.061s)&#xA;&gt; Enter [It] should set mirror-target to https://test.env.com/$request_uri - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:51 @ 07/16/23 23:34:27.893&#xA;&lt; Exit [It] should set mirror-target to https://test.env.com/$request_uri - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:51 @ 07/16/23 23:34:38.318 (10.46s)&#xA;&gt; Enter [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:38.318&#xA;&lt; Exit [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:38.801 (483ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to $scheme:// and use proxy_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="24.527899">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:38.803&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:48.547 (9.744s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 07/16/23 23:34:48.547&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 07/16/23 23:34:52.605 (4.058s)&#xA;&gt; Enter [It] should set backend protocol to $scheme:// and use proxy_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:49 @ 07/16/23 23:34:52.605&#xA;&lt; Exit [It] should set backend protocol to $scheme:// and use proxy_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:49 @ 07/16/23 23:35:02.751 (10.18s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:02.751&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:03.297 (546ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-escape-json and log-format-escape-none should disable the log-format-escape-json" classname="nginx-ingress-controller e2e suite" status="passed" time="30.1125385">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:03.312&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:11.68 (8.368s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 07/16/23 23:35:11.68&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 07/16/23 23:35:22.776 (11.096s)&#xA;&gt; Enter [It] should disable the log-format-escape-json - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:55 @ 07/16/23 23:35:22.776&#xA;&lt; Exit [It] should disable the log-format-escape-json - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:55 @ 07/16/23 23:35:32.97 (10.229s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:32.97&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:33.388 (418ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - FastCGI should return OK for service with backend protocol FastCGI" classname="nginx-ingress-controller e2e suite" status="passed" time="21.2464333">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:33.39&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:41.909 (8.519s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 07/16/23 23:35:41.909&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 07/16/23 23:35:43.975 (2.066s)&#xA;&gt; Enter [It] should return OK for service with backend protocol FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:102 @ 07/16/23 23:35:43.975&#xA;&lt; Exit [It] should return OK for service with backend protocol FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:102 @ 07/16/23 23:35:54.184 (10.209s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:54.184&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:54.637 (453ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-ssl-* should set valid proxy-ssl-secret, proxy-ssl-verify to on, proxy-ssl-verify-depth to 2, and proxy-ssl-server-name to on" classname="nginx-ingress-controller e2e suite" status="passed" time="27.3048214">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:54.638&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:04.492 (9.888s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 07/16/23 23:36:04.492&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 07/16/23 23:36:10.59 (6.098s)&#xA;&gt; Enter [It] should set valid proxy-ssl-secret, proxy-ssl-verify to on, proxy-ssl-verify-depth to 2, and proxy-ssl-server-name to on - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:64 @ 07/16/23 23:36:10.59&#xA;&lt; Exit [It] should set valid proxy-ssl-secret, proxy-ssl-verify to on, proxy-ssl-verify-depth to 2, and proxy-ssl-server-name to on - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:64 @ 07/16/23 23:36:21.417 (10.826s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:21.417&#xA;&lt; Exit [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:21.909 (492ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by weight should route requests only to canary if canary weight is 100" classname="nginx-ingress-controller e2e suite" status="passed" time="35.3460961">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:21.91&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:31.441 (9.565s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:36:31.441&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:36:39.575 (8.135s)&#xA;&gt; Enter [It] should route requests only to canary if canary weight is 100 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:743 @ 07/16/23 23:36:39.575&#xA;&lt; Exit [It] should route requests only to canary if canary weight is 100 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:743 @ 07/16/23 23:36:56.821 (17.246s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:56.821&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:57.222 (400ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the upstream keep alive should set keepalive time to upstream server" classname="nginx-ingress-controller e2e suite" status="passed" time="32.5033309">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:57.223&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:07.971 (10.783s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 07/16/23 23:37:07.971&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 07/16/23 23:37:19.071 (11.099s)&#xA;&gt; Enter [It] should set keepalive time to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:77 @ 07/16/23 23:37:19.071&#xA;&lt; Exit [It] should set keepalive time to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:77 @ 07/16/23 23:37:29.282 (10.212s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:29.283&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:29.692 (409ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] no-auth-locations should return status code 200 when accessing &#39;/&#39;  authentication" classname="nginx-ingress-controller e2e suite" status="passed" time="33.3392887">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:29.693&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:38.006 (8.347s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 07/16/23 23:37:38.006&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 07/16/23 23:37:58.271 (20.264s)&#xA;&gt; Enter [It] should return status code 200 when accessing &#39;/&#39;  authentication - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:68 @ 07/16/23 23:37:58.271&#xA;&lt; Exit [It] should return status code 200 when accessing &#39;/&#39;  authentication - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:68 @ 07/16/23 23:38:02.529 (4.293s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:02.529&#xA;&lt; Exit [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:02.964 (434ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] add-headers Add multiple custom headers" classname="nginx-ingress-controller e2e suite" status="passed" time="30.2408119">
              <system-err>&gt; Enter [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:02.971&#xA;&lt; Exit [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:11.459 (8.488s)&#xA;&gt; Enter [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:34 @ 07/16/23 23:38:11.459&#xA;&lt; Exit [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:34 @ 07/16/23 23:38:22.582 (11.122s)&#xA;&gt; Enter [It] Add multiple custom headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:65 @ 07/16/23 23:38:22.582&#xA;&lt; Exit [It] Add multiple custom headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:65 @ 07/16/23 23:38:32.759 (10.211s)&#xA;&gt; Enter [AfterEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:32.759&#xA;&lt; Exit [AfterEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:33.178 (419ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity without using &#39;modsecurity on;&#39;" classname="nginx-ingress-controller e2e suite" status="passed" time="34.4613293">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:33.18&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:41.812 (8.632s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:38:41.812&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:38:49.899 (8.087s)&#xA;&gt; Enter [It] should enable modsecurity without using &#39;modsecurity on;&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:110 @ 07/16/23 23:38:49.899&#xA;&lt; Exit [It] should enable modsecurity without using &#39;modsecurity on;&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:110 @ 07/16/23 23:39:07.104 (17.239s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:07.104&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:07.608 (504ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates given an ingress with TLS correctly configured picks up the updated certificate without reloading" classname="nginx-ingress-controller e2e suite" status="passed" time="51.1719674">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:07.617&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:15.244 (7.627s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 07/16/23 23:39:15.244&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 07/16/23 23:39:21.419 (6.176s)&#xA;&gt; Enter [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 07/16/23 23:39:21.42&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:128 @ 07/16/23 23:39:38.597&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:136 @ 07/16/23 23:39:46.821&#xA;&lt; Exit [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 07/16/23 23:39:46.84 (25.455s)&#xA;&gt; Enter [It] picks up the updated certificate without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:149 @ 07/16/23 23:39:46.841&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:163 @ 07/16/23 23:39:52.033&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:169 @ 07/16/23 23:39:55.176&#xA;STEP: skipping Nginx reload - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:180 @ 07/16/23 23:39:58.206&#xA;&lt; Exit [It] picks up the updated certificate without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:149 @ 07/16/23 23:39:58.206 (11.366s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:58.206&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:58.754 (548ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should exists opentracing directive when is enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="32.5664912">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:58.76&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:07.505 (8.774s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:40:07.505&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:40:13.578 (6.073s)&#xA;&gt; Enter [It] should exists opentracing directive when is enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:71 @ 07/16/23 23:40:13.578&#xA;&lt; Exit [It] should exists opentracing directive when is enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:71 @ 07/16/23 23:40:30.774 (17.231s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:30.774&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:31.257 (483ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:40:31.257&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:40:31.258 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication with caching is configured should return status code 200 when signed in after auth backend is deleted" classname="nginx-ingress-controller e2e suite" status="passed" time="73.1807948">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:31.26&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:39.618 (8.359s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:40:39.619&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:40:45.749 (6.13s)&#xA;&gt; Enter [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 07/16/23 23:40:45.749&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 07/16/23 23:40:50.946&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 07/16/23 23:41:01.126&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 07/16/23 23:41:11.35&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 07/16/23 23:41:21.559&#xA;&lt; Exit [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 07/16/23 23:41:36.857 (51.177s)&#xA;&gt; Enter [It] should return status code 200 when signed in after auth backend is deleted  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:772 @ 07/16/23 23:41:36.857&#xA;&lt; Exit [It] should return status code 200 when signed in after auth backend is deleted  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:772 @ 07/16/23 23:41:43.93 (7.073s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:43.93&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:44.372 (442ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by weight should route requests only to mainline if canary weight is 0" classname="nginx-ingress-controller e2e suite" status="passed" time="54.3242791">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:07:34.287&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:07:49.044 (14.757s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:07:49.044&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:08:05.568 (16.559s)&#xA;&gt; Enter [It] should route requests only to mainline if canary weight is 0 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:705 @ 07/16/23 23:08:05.569&#xA;&lt; Exit [It] should route requests only to mainline if canary weight is 0 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:705 @ 07/16/23 23:08:27.887 (22.318s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:27.887&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:28.576 (689ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] Add no tls redirect locations Check no tls redirect locations config" classname="nginx-ingress-controller e2e suite" status="passed" time="29.4005463">
              <system-err>&gt; Enter [BeforeEach] [Setting] Add no tls redirect locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:28.582&#xA;&lt; Exit [BeforeEach] [Setting] Add no tls redirect locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:36.857 (8.309s)&#xA;&gt; Enter [It] Check no tls redirect locations config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_tls_redirect_locations.go:31 @ 07/16/23 23:08:36.857&#xA;&lt; Exit [It] Check no tls redirect locations config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_tls_redirect_locations.go:31 @ 07/16/23 23:08:57.345 (20.488s)&#xA;&gt; Enter [AfterEach] [Setting] Add no tls redirect locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:57.345&#xA;&lt; Exit [AfterEach] [Setting] Add no tls redirect locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:57.948 (603ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should set request-redirect when global-auth-request-redirect is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="68.5104246">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:57.95&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:06.944 (9.028s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:09:06.944&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:09:25.075 (18.131s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:09:25.075&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 07/16/23 23:09:25.075&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 07/16/23 23:09:35.276&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 07/16/23 23:09:45.533&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:09:55.741 (30.7s)&#xA;&gt; Enter [It] should set request-redirect when global-auth-request-redirect is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:237 @ 07/16/23 23:09:55.741&#xA;STEP: Adding a global-auth-request-redirect to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:242 @ 07/16/23 23:09:55.741&#xA;&lt; Exit [It] should set request-redirect when global-auth-request-redirect is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:237 @ 07/16/23 23:10:05.886 (10.18s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:05.886&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:06.357 (471ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-upstream with log-format-escape-json and log-format-escape-none log-format default escape" classname="nginx-ingress-controller e2e suite" status="passed" time="34.3825706">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:06.359&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:15.633 (9.274s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 07/16/23 23:10:15.633&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 07/16/23 23:10:26.724 (11.091s)&#xA;&gt; Enter [It] log-format default escape - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:105 @ 07/16/23 23:10:26.724&#xA;&lt; Exit [It] log-format default escape - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:105 @ 07/16/23 23:10:40.107 (13.418s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:40.107&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:40.707 (600ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Load Balancer] EWMA does not fail requests" classname="nginx-ingress-controller e2e suite" status="passed" time="34.6657434">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:40.727&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:49.212 (8.485s)&#xA;&gt; Enter [BeforeEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/ewma.go:34 @ 07/16/23 23:10:49.212&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/ewma.go:34 @ 07/16/23 23:11:00.338 (11.126s)&#xA;&gt; Enter [It] does not fail requests - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/ewma.go:42 @ 07/16/23 23:11:00.338&#xA;Jul 16 23:11:14.762: INFO: Request distribution: map[echo-7b6bf466cc-k5lq4:6 echo-7b6bf466cc-xhgrs:9 echo-7b6bf466cc-zm2tc:15]&#xA;&lt; Exit [It] does not fail requests - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/ewma.go:42 @ 07/16/23 23:11:14.762 (14.48s)&#xA;&gt; Enter [AfterEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:11:14.762&#xA;&lt; Exit [AfterEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:11:15.337 (574ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should not set affinity across all server locations when using separate ingresses" classname="nginx-ingress-controller e2e suite" status="passed" time="30.7649717">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:11:15.344&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:11:23.899 (8.554s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:11:23.899&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:11:28.014 (4.115s)&#xA;&gt; Enter [It] should not set affinity across all server locations when using separate ingresses - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:320 @ 07/16/23 23:11:28.014&#xA;&lt; Exit [It] should not set affinity across all server locations when using separate ingresses - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:320 @ 07/16/23 23:11:45.272 (17.315s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:11:45.272&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:11:46.053 (781ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should add custom error page when global-auth-signin url is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="58.6966417">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:11:46.055&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:11:54.592 (8.537s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:11:54.592&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:12:02.74 (8.185s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:12:02.741&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 07/16/23 23:12:02.741&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 07/16/23 23:12:12.97&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 07/16/23 23:12:23.365&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:12:33.703 (30.997s)&#xA;&gt; Enter [It] should add custom error page when global-auth-signin url is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:210 @ 07/16/23 23:12:33.703&#xA;STEP: Adding a global-auth-signin to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:215 @ 07/16/23 23:12:33.703&#xA;&lt; Exit [It] should add custom error page when global-auth-signin url is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:210 @ 07/16/23 23:12:43.93 (10.227s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:43.93&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:44.68 (750ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-sync-events should not create sync events" classname="nginx-ingress-controller e2e suite" status="passed" time="32.0337503">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:44.681&#xA;&lt; Exit [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:53.488 (8.807s)&#xA;&gt; Enter [It] should not create sync events - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:80 @ 07/16/23 23:12:53.488&#xA;&lt; Exit [It] should not create sync events - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:80 @ 07/16/23 23:13:16.154 (22.701s)&#xA;&gt; Enter [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:16.154&#xA;&lt; Exit [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:16.68 (526ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinitymode Balanced affinity mode should balance" classname="nginx-ingress-controller e2e suite" status="passed" time="26.9087913">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:16.682&#xA;&lt; Exit [BeforeEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:24.418 (7.736s)&#xA;&gt; Enter [It] Balanced affinity mode should balance - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinitymode.go:34 @ 07/16/23 23:13:24.418&#xA;&lt; Exit [It] Balanced affinity mode should balance - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinitymode.go:34 @ 07/16/23 23:13:43.022 (18.638s)&#xA;&gt; Enter [AfterEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:43.022&#xA;&lt; Exit [AfterEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:43.557 (535ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should still return status code 200 after auth backend is deleted using cache" classname="nginx-ingress-controller e2e suite" status="passed" time="74.3679894">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:43.569&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:52.109 (8.54s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:13:52.109&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:14:00.22 (8.111s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:14:00.22&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 07/16/23 23:14:00.221&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 07/16/23 23:14:10.357&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 07/16/23 23:14:20.687&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:14:31.22 (31.034s)&#xA;&gt; Enter [It] should still return status code 200 after auth backend is deleted using cache - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:155 @ 07/16/23 23:14:31.221&#xA;STEP: Adding a global-auth-cache-key to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:163 @ 07/16/23 23:14:31.221&#xA;&lt; Exit [It] should still return status code 200 after auth backend is deleted using cache - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:155 @ 07/16/23 23:14:56.908 (25.722s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:56.908&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:57.868 (959ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] mirror-* should set mirror-target to http://localhost/mirror" classname="nginx-ingress-controller e2e suite" status="passed" time="24.7436373">
              <system-err>&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:57.873&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:07.775 (9.936s)&#xA;&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 07/16/23 23:15:07.775&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 07/16/23 23:15:11.846 (4.07s)&#xA;&gt; Enter [It] should set mirror-target to http://localhost/mirror - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:36 @ 07/16/23 23:15:11.846&#xA;&lt; Exit [It] should set mirror-target to http://localhost/mirror - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:36 @ 07/16/23 23:15:22.158 (10.312s)&#xA;&gt; Enter [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:22.158&#xA;&lt; Exit [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:22.583 (425ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set sticky cookie SERVERID" classname="nginx-ingress-controller e2e suite" status="passed" time="23.3930481">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:22.584&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:31.03 (8.446s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:15:31.03&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:15:35.048 (4.052s)&#xA;&gt; Enter [It] should set sticky cookie SERVERID - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:42 @ 07/16/23 23:15:35.048&#xA;&lt; Exit [It] should set sticky cookie SERVERID - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:42 @ 07/16/23 23:15:45.303 (10.255s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:45.303&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:45.943 (640ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] service-upstream when enabling in the configmap and disabling in the annotations should not use the Service Cluster IP and Port" classname="nginx-ingress-controller e2e suite" status="passed" time="30.4041474">
              <system-err>&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:45.959&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:54.309 (8.35s)&#xA;&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 07/16/23 23:15:54.309&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 07/16/23 23:15:58.369 (4.06s)&#xA;&gt; Enter [It] should not use the Service Cluster IP and Port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:99 @ 07/16/23 23:15:58.369&#xA;STEP: checking if the service is reached - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:113 @ 07/16/23 23:16:15.745&#xA;STEP: checking if the Service Cluster IP and Port are not used - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:120 @ 07/16/23 23:16:15.754&#xA;&lt; Exit [It] should not use the Service Cluster IP and Port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:99 @ 07/16/23 23:16:15.932 (17.597s)&#xA;&gt; Enter [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:15.932&#xA;&lt; Exit [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:16.329 (396ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] ssl-ciphers should change ssl ciphers" classname="nginx-ingress-controller e2e suite" status="passed" time="23.6848481">
              <system-err>&gt; Enter [BeforeEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:16.33&#xA;&lt; Exit [BeforeEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:24.942 (8.612s)&#xA;&gt; Enter [BeforeEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/sslciphers.go:31 @ 07/16/23 23:16:24.942&#xA;&lt; Exit [BeforeEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/sslciphers.go:31 @ 07/16/23 23:16:29.022 (4.08s)&#xA;&gt; Enter [It] should change ssl ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/sslciphers.go:35 @ 07/16/23 23:16:29.022&#xA;&lt; Exit [It] should change ssl ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/sslciphers.go:35 @ 07/16/23 23:16:39.31 (10.323s)&#xA;&gt; Enter [AfterEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:39.31&#xA;&lt; Exit [AfterEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:39.98 (670ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-escape-json and log-format-escape-none should enable the log-format-escape-none" classname="nginx-ingress-controller e2e suite" status="passed" time="31.6590056">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:39.982&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:49.837 (9.855s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 07/16/23 23:16:49.837&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 07/16/23 23:17:00.937 (11.1s)&#xA;&gt; Enter [It] should enable the log-format-escape-none - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:63 @ 07/16/23 23:17:00.938&#xA;&lt; Exit [It] should enable the log-format-escape-none - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:63 @ 07/16/23 23:17:11.121 (10.218s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:11.121&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:11.607 (486ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by weight should route requests split between mainline and canary if canary weight is 50" classname="nginx-ingress-controller e2e suite" status="passed" time="72.9624279">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:11.608&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:20.212 (8.604s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:17:20.212&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:17:28.342 (8.13s)&#xA;&gt; Enter [It] should route requests split between mainline and canary if canary weight is 50 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:808 @ 07/16/23 23:17:28.342&#xA;&lt; Exit [It] should route requests split between mainline and canary if canary weight is 50 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:808 @ 07/16/23 23:18:23.842 (55.569s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:23.843&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:24.502 (659ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should set valid proxy timeouts" classname="nginx-ingress-controller e2e suite" status="passed" time="22.0752737">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:24.505&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:31.714 (7.243s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:18:31.714&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:18:35.862 (4.148s)&#xA;&gt; Enter [It] should set valid proxy timeouts - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:115 @ 07/16/23 23:18:35.862&#xA;&lt; Exit [It] should set valid proxy timeouts - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:115 @ 07/16/23 23:18:46.046 (10.184s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:46.046&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:46.546 (500ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should not create additional upstream block when auth-keepalive is negative" classname="nginx-ingress-controller e2e suite" status="passed" time="49.775886">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:46.548&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:53.971 (7.423s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:18:53.971&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:18:58.059 (4.088s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:18:58.059&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:19:12.335 (14.31s)&#xA;&gt; Enter [It] should not create additional upstream block when auth-keepalive is negative - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:590 @ 07/16/23 23:19:12.335&#xA;&lt; Exit [It] should not create additional upstream block when auth-keepalive is negative - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:590 @ 07/16/23 23:19:35.576 (23.275s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:35.576&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:36.255 (679ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic configuration when only backends change handles an annotation change" classname="nginx-ingress-controller e2e suite" status="passed" time="28.7916129">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:36.256&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:43.637 (7.381s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 07/16/23 23:19:43.637&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 07/16/23 23:19:57.933 (14.296s)&#xA;&gt; Enter [It] handles an annotation change - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:171 @ 07/16/23 23:19:57.933&#xA;&lt; Exit [It] handles an annotation change - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:171 @ 07/16/23 23:20:04.479 (6.58s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:04.479&#xA;&lt; Exit [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:05.013 (534ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Security] Pod Security Policies with volumes should be running with a Pod Security Policy" classname="nginx-ingress-controller e2e suite" status="skipped" time="10.6800515">
              <skipped message="skipped - PSP not supported in this version"></skipped>
              <system-err>&gt; Enter [BeforeEach] [Security] Pod Security Policies with volumes - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:05.015&#xA;&lt; Exit [BeforeEach] [Security] Pod Security Policies with volumes - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:14.859 (9.844s)&#xA;&gt; Enter [It] should be running with a Pod Security Policy - /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy_volumes.go:40 @ 07/16/23 23:20:14.859&#xA;[SKIPPED] PSP not supported in this version&#xA;In [It] at: /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy_volumes.go:53 @ 07/16/23 23:20:14.864&#xA;&lt; Exit [It] should be running with a Pod Security Policy - /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy_volumes.go:40 @ 07/16/23 23:20:14.864 (5ms)&#xA;&gt; Enter [AfterEach] [Security] Pod Security Policies with volumes - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:14.864&#xA;&lt; Exit [AfterEach] [Security] Pod Security Policies with volumes - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:15.695 (831ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set secure in cookie with provided true annotation on http" classname="nginx-ingress-controller e2e suite" status="passed" time="22.5750295">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:15.697&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:23.308 (7.611s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:20:23.308&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:20:27.397 (4.089s)&#xA;&gt; Enter [It] should set secure in cookie with provided true annotation on http - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:412 @ 07/16/23 23:20:27.397&#xA;&lt; Exit [It] should set secure in cookie with provided true annotation on http - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:412 @ 07/16/23 23:20:37.584 (10.221s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:37.584&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:38.237 (653ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should return 200 using auth-tls-match-cn with matching CN from client" classname="nginx-ingress-controller e2e suite" status="passed" time="23.9705324">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:38.239&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:46.709 (8.47s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 07/16/23 23:20:46.709&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 07/16/23 23:20:50.775 (4.066s)&#xA;&gt; Enter [It] should return 200 using auth-tls-match-cn with matching CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:295 @ 07/16/23 23:20:50.775&#xA;&lt; Exit [It] should return 200 using auth-tls-match-cn with matching CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:295 @ 07/16/23 23:21:01.786 (11.046s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:01.786&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:02.175 (389ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] rewrite-target use-regex enable-rewrite-log should fail to use longest match for documented warning" classname="nginx-ingress-controller e2e suite" status="passed" time="30.318831">
              <system-err>&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:02.177&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:10.721 (8.544s)&#xA;&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 07/16/23 23:21:10.721&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 07/16/23 23:21:14.801 (4.08s)&#xA;&gt; Enter [It] should fail to use longest match for documented warning - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:158 @ 07/16/23 23:21:14.801&#xA;STEP: creating a regular ingress definition - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:161 @ 07/16/23 23:21:14.801&#xA;STEP: creating an ingress definition with the use-regex annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:165 @ 07/16/23 23:21:21.843&#xA;STEP: check that &#39;/foo/bar/bar&#39; does not match the longest exact path - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:179 @ 07/16/23 23:21:32.042&#xA;&lt; Exit [It] should fail to use longest match for documented warning - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:158 @ 07/16/23 23:21:32.048 (17.282s)&#xA;&gt; Enter [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:32.048&#xA;&lt; Exit [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:32.461 (413ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class Without IngressClass Cluster scoped Permission should ignore Ingress with only IngressClassName" classname="nginx-ingress-controller e2e suite" status="passed" time="30.1356454">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:32.463&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:39.797 (7.334s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:21:39.797&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:21:43.865 (4.068s)&#xA;&gt; Enter [BeforeEach] Without IngressClass Cluster scoped Permission - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:587 @ 07/16/23 23:21:43.865&#xA;&lt; Exit [BeforeEach] Without IngressClass Cluster scoped Permission - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:587 @ 07/16/23 23:21:51.955 (8.09s)&#xA;&gt; Enter [It] should ignore Ingress with only IngressClassName - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:652 @ 07/16/23 23:21:51.955&#xA;&lt; Exit [It] should ignore Ingress with only IngressClassName - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:652 @ 07/16/23 23:22:02.145 (10.223s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:02.145&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:02.564 (419ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] block-* should block Referers defined in the ConfigMap" classname="nginx-ingress-controller e2e suite" status="passed" time="31.1387085">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:02.566&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:11.193 (8.627s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 07/16/23 23:22:11.193&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 07/16/23 23:22:22.303 (11.11s)&#xA;&gt; Enter [It] should block Referers defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:88 @ 07/16/23 23:22:22.303&#xA;&lt; Exit [It] should block Referers defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:88 @ 07/16/23 23:22:32.765 (10.496s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:32.765&#xA;&lt; Exit [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:33.67 (906ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] Configmap change should reload after an update in the configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="43.977068">
              <system-err>&gt; Enter [BeforeEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:33.674&#xA;&lt; Exit [BeforeEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:42.623 (8.949s)&#xA;&gt; Enter [BeforeEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:32 @ 07/16/23 23:22:42.623&#xA;&lt; Exit [BeforeEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:32 @ 07/16/23 23:22:46.677 (4.054s)&#xA;&gt; Enter [It] should reload after an update in the configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:36 @ 07/16/23 23:22:46.677&#xA;STEP: adding a whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:42 @ 07/16/23 23:22:53.713&#xA;STEP: changing error-log-level - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:61 @ 07/16/23 23:23:03.876&#xA;&lt; Exit [It] should reload after an update in the configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:36 @ 07/16/23 23:23:17.205 (30.562s)&#xA;&gt; Enter [AfterEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:17.205&#xA;&lt; Exit [AfterEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:17.616 (412ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-catch-all should ignore catch all Ingress with backend and rules" classname="nginx-ingress-controller e2e suite" status="passed" time="34.3049437">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:17.617&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:25.915 (8.298s)&#xA;&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 07/16/23 23:23:25.916&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 07/16/23 23:23:40.996 (15.114s)&#xA;&gt; Enter [It] should ignore catch all Ingress with backend and rules - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:69 @ 07/16/23 23:23:40.996&#xA;&lt; Exit [It] should ignore catch all Ingress with backend and rules - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:69 @ 07/16/23 23:23:51.243 (10.247s)&#xA;&gt; Enter [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:51.243&#xA;&lt; Exit [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:51.888 (645ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should set &#34;proxy_set_header &#39;My-Custom-Header&#39; &#39;42&#39;;&#34; when auth-headers are set" classname="nginx-ingress-controller e2e suite" status="passed" time="25.2821374">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:51.89&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:02.36 (10.505s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:24:02.36&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:24:06.483 (4.123s)&#xA;&gt; Enter [It] should set &#34;proxy_set_header &#39;My-Custom-Header&#39; &#39;42&#39;;&#34; when auth-headers are set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:301 @ 07/16/23 23:24:06.483&#xA;&lt; Exit [It] should set &#34;proxy_set_header &#39;My-Custom-Header&#39; &#39;42&#39;;&#34; when auth-headers are set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:301 @ 07/16/23 23:24:16.671 (10.187s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:16.671&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:17.137 (467ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should set client_body_buffer_size to 1m" classname="nginx-ingress-controller e2e suite" status="passed" time="23.0553091">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:17.14&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:25.522 (8.382s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 07/16/23 23:24:25.522&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 07/16/23 23:24:29.596 (4.073s)&#xA;&gt; Enter [It] should set client_body_buffer_size to 1m - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:101 @ 07/16/23 23:24:29.596&#xA;&lt; Exit [It] should set client_body_buffer_size to 1m - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:101 @ 07/16/23 23:24:39.753 (10.192s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:39.753&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:40.161 (408ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Shutdown] ingress controller should shutdown in less than 60 secons without pending connections" classname="nginx-ingress-controller e2e suite" status="passed" time="30.8368955">
              <system-err>&gt; Enter [BeforeEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:40.163&#xA;&lt; Exit [BeforeEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:48.151 (7.988s)&#xA;&gt; Enter [BeforeEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/shutdown.go:35 @ 07/16/23 23:24:48.151&#xA;&lt; Exit [BeforeEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/shutdown.go:35 @ 07/16/23 23:24:59.271 (11.12s)&#xA;&gt; Enter [It] should shutdown in less than 60 secons without pending connections - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/shutdown.go:40 @ 07/16/23 23:24:59.271&#xA;&lt; Exit [It] should shutdown in less than 60 secons without pending connections - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/shutdown.go:40 @ 07/16/23 23:25:10.518 (11.281s)&#xA;&gt; Enter [AfterEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:10.518&#xA;&lt; Exit [AfterEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:10.966 (448ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should ignore Ingress with a different class annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="29.2870748">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:10.967&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:18.468 (7.501s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:25:18.468&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:25:22.573 (4.105s)&#xA;&gt; Enter [It] should ignore Ingress with a different class annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:68 @ 07/16/23 23:25:22.573&#xA;&lt; Exit [It] should ignore Ingress with a different class annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:68 @ 07/16/23 23:25:39.828 (17.29s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:39.828&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:40.22 (391ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] Bad annotation values [BAD_ANNOTATIONS] should allow an ingress if there is a default blocklist config in place" classname="nginx-ingress-controller e2e suite" status="passed" time="30.604903">
              <system-err>&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:40.221&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:47.582 (7.361s)&#xA;&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 07/16/23 23:25:47.582&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 07/16/23 23:25:51.699 (4.117s)&#xA;&gt; Enter [It] [BAD_ANNOTATIONS] should allow an ingress if there is a default blocklist config in place - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:102 @ 07/16/23 23:25:51.699&#xA;&lt; Exit [It] [BAD_ANNOTATIONS] should allow an ingress if there is a default blocklist config in place - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:102 @ 07/16/23 23:26:10.03 (18.365s)&#xA;&gt; Enter [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:10.03&#xA;&lt; Exit [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:10.792 (762ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check proxy header hash size should set proxy-headers-hash-max-size" classname="nginx-ingress-controller e2e suite" status="passed" time="29.5565465">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:10.796&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:18.517 (7.721s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 07/16/23 23:26:18.517&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 07/16/23 23:26:29.612 (11.095s)&#xA;&gt; Enter [It] should set proxy-headers-hash-max-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:68 @ 07/16/23 23:26:29.612&#xA;&lt; Exit [It] should set proxy-headers-hash-max-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:68 @ 07/16/23 23:26:39.848 (10.27s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:39.848&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:40.318 (470ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with no value should route requests to the correct upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="34.6947308">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:40.322&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:49.062 (8.74s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:26:49.062&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:26:57.227 (8.165s)&#xA;&gt; Enter [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:372 @ 07/16/23 23:26:57.227&#xA;STEP: routing requests to the canary upstream when header is set to &#39;always&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:395 @ 07/16/23 23:27:14.5&#xA;STEP: routing requests to the mainline upstream when header is set to &#39;never&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:404 @ 07/16/23 23:27:14.506&#xA;STEP: routing requests to the mainline upstream when header is set to anything else - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:414 @ 07/16/23 23:27:14.512&#xA;&lt; Exit [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:372 @ 07/16/23 23:27:14.518 (17.326s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:14.518&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:14.982 (464ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-next-upstream should build proxy next upstream using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="30.4059144">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:14.983&#xA;&lt; Exit [BeforeEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:23.621 (8.637s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_next_upstream.go:32 @ 07/16/23 23:27:23.621&#xA;&lt; Exit [BeforeEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_next_upstream.go:32 @ 07/16/23 23:27:27.678 (4.058s)&#xA;&gt; Enter [It] should build proxy next upstream using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_next_upstream.go:36 @ 07/16/23 23:27:27.678&#xA;&lt; Exit [It] should build proxy next upstream using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_next_upstream.go:36 @ 07/16/23 23:27:44.864 (17.219s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:44.864&#xA;&lt; Exit [AfterEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:45.355 (491ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] default-backend when default backend annotation is enabled should use a custom default backend as upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="24.1701154">
              <system-err>&gt; Enter [BeforeEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:45.356&#xA;&lt; Exit [BeforeEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:54.361 (9.004s)&#xA;&gt; Enter [BeforeEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/default_backend.go:32 @ 07/16/23 23:27:54.361&#xA;&lt; Exit [BeforeEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/default_backend.go:32 @ 07/16/23 23:27:58.446 (4.085s)&#xA;&gt; Enter [It] should use a custom default backend as upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/default_backend.go:37 @ 07/16/23 23:27:58.446&#xA;&lt; Exit [It] should use a custom default backend as upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/default_backend.go:37 @ 07/16/23 23:28:08.662 (10.25s)&#xA;&gt; Enter [AfterEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:08.662&#xA;&lt; Exit [AfterEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:09.492 (830ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - FastCGI should use fastcgi_pass in the configuration file" classname="nginx-ingress-controller e2e suite" status="passed" time="21.5885282">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:09.495&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:18.198 (8.703s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 07/16/23 23:28:18.198&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 07/16/23 23:28:20.266 (2.068s)&#xA;&gt; Enter [It] should use fastcgi_pass in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:37 @ 07/16/23 23:28:20.266&#xA;&lt; Exit [It] should use fastcgi_pass in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:37 @ 07/16/23 23:28:30.476 (10.21s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:30.476&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:31.049 (608ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] denylist-source-range only deny explicitly denied IPs, allow all others" classname="nginx-ingress-controller e2e suite" status="passed" time="37.2024876">
              <system-err>&gt; Enter [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:31.05&#xA;&lt; Exit [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:39.51 (8.46s)&#xA;&gt; Enter [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:31 @ 07/16/23 23:28:39.51&#xA;&lt; Exit [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:31 @ 07/16/23 23:28:43.584 (4.073s)&#xA;&gt; Enter [It] only deny explicitly denied IPs, allow all others - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:35 @ 07/16/23 23:28:43.584&#xA;STEP: sending request from an explicitly denied IP range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:61 @ 07/16/23 23:29:00.77&#xA;STEP: sending request from an explicitly denied IP address - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:69 @ 07/16/23 23:29:00.776&#xA;STEP: sending request from an implicitly allowed IP range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:77 @ 07/16/23 23:29:00.783&#xA;&lt; Exit [It] only deny explicitly denied IPs, allow all others - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:35 @ 07/16/23 23:29:07.785 (24.235s)&#xA;&gt; Enter [AfterEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:07.785&#xA;&lt; Exit [AfterEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:08.219 (434ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] backend status code 503 should return 503 when backend service does not exist" classname="nginx-ingress-controller e2e suite" status="passed" time="19.0865194">
              <system-err>&gt; Enter [BeforeEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:08.222&#xA;&lt; Exit [BeforeEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:16.588 (8.366s)&#xA;&gt; Enter [It] should return 503 when backend service does not exist - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_backend.go:36 @ 07/16/23 23:29:16.588&#xA;&lt; Exit [It] should return 503 when backend service does not exist - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_backend.go:36 @ 07/16/23 23:29:26.783 (10.195s)&#xA;&gt; Enter [AfterEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:26.783&#xA;&lt; Exit [AfterEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:27.308 (525ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure Opentelemetry should not exists opentelemetry directive" classname="nginx-ingress-controller e2e suite" status="passed" time="29.9809659">
              <system-err>&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:27.309&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:35.546 (8.271s)&#xA;&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 07/16/23 23:29:35.546&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 07/16/23 23:29:39.603 (4.057s)&#xA;&gt; Enter [It] should not exists opentelemetry directive - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:47 @ 07/16/23 23:29:39.603&#xA;&lt; Exit [It] should not exists opentelemetry directive - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:47 @ 07/16/23 23:29:56.89 (17.287s)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:56.89&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:57.255 (365ms)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 07/16/23 23:29:57.255&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 07/16/23 23:29:57.255 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should return status code 401 when request any protected service" classname="nginx-ingress-controller e2e suite" status="passed" time="58.7238473">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:57.258&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:30:07.638 (10.419s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:30:07.638&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:30:15.827 (8.189s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:30:15.827&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 07/16/23 23:30:15.827&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 07/16/23 23:30:26.122&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 07/16/23 23:30:36.224&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:30:48.339 (32.577s)&#xA;&gt; Enter [It] should return status code 401 when request any protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:85 @ 07/16/23 23:30:48.339&#xA;STEP: Sending a request to protected service /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:87 @ 07/16/23 23:30:48.339&#xA;STEP: Sending a request to protected service /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:94 @ 07/16/23 23:30:48.391&#xA;&lt; Exit [It] should return status code 401 when request any protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:85 @ 07/16/23 23:30:48.504 (165ms)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:30:48.504&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:30:55.877 (7.373s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should enable opentracing using datadog" classname="nginx-ingress-controller e2e suite" status="passed" time="35.771252">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:30:55.918&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:09.07 (13.19s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:31:09.07&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:31:11.17 (2.1s)&#xA;&gt; Enter [It] should enable opentracing using datadog - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:241 @ 07/16/23 23:31:11.17&#xA;&lt; Exit [It] should enable opentracing using datadog - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:241 @ 07/16/23 23:31:31.176 (20.041s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:31.176&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:31.616 (439ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:31:31.616&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:31:31.616 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication with caching is configured should deny login for different location on same server" classname="nginx-ingress-controller e2e suite" status="passed" time="131.3586144">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:31.67&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:40.298 (8.628s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:31:40.298&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:31:44.4 (4.102s)&#xA;&gt; Enter [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 07/16/23 23:31:44.402&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 07/16/23 23:31:49.602&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 07/16/23 23:31:59.831&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 07/16/23 23:32:09.984&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 07/16/23 23:32:20.215&#xA;&lt; Exit [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 07/16/23 23:32:35.406 (51.073s)&#xA;&gt; Enter [It] should deny login for different location on same server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:792 @ 07/16/23 23:32:35.406&#xA;STEP: receiving an internal server error without cache on location /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:811 @ 07/16/23 23:32:42.457&#xA;&lt; Exit [It] should deny login for different location on same server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:792 @ 07/16/23 23:33:42.399 (1m7.062s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:42.4&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:42.892 (492ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Security] Pod Security Policies should be running with a Pod Security Policy" classname="nginx-ingress-controller e2e suite" status="skipped" time="8.768991100000001">
              <skipped message="skipped - PSP not supported in this version"></skipped>
              <system-err>&gt; Enter [BeforeEach] [Security] Pod Security Policies - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:42.896&#xA;&lt; Exit [BeforeEach] [Security] Pod Security Policies - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:51.181 (8.285s)&#xA;&gt; Enter [It] should be running with a Pod Security Policy - /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy.go:44 @ 07/16/23 23:33:51.181&#xA;[SKIPPED] PSP not supported in this version&#xA;In [It] at: /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy.go:56 @ 07/16/23 23:33:51.184&#xA;&lt; Exit [It] should be running with a Pod Security Policy - /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy.go:44 @ 07/16/23 23:33:51.184 (3ms)&#xA;&gt; Enter [AfterEach] [Security] Pod Security Policies - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:51.184&#xA;&lt; Exit [AfterEach] [Security] Pod Security Policies - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:51.664 (480ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canary is created should route requests to the correct upstream if the mainline ingress is modified" classname="nginx-ingress-controller e2e suite" status="passed" time="38.6161234">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:51.666&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:00.007 (8.341s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:34:00.007&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:34:08.102 (8.129s)&#xA;&gt; Enter [It] should route requests to the correct upstream if the mainline ingress is modified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:250 @ 07/16/23 23:34:08.102&#xA;STEP: routing requests destined fro the mainline ingress to the mainline upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:288 @ 07/16/23 23:34:29.661&#xA;STEP: routing requests destined for the canary ingress to the canary upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:297 @ 07/16/23 23:34:29.668&#xA;&lt; Exit [It] should route requests to the correct upstream if the mainline ingress is modified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:250 @ 07/16/23 23:34:29.676 (21.575s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:29.676&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:30.248 (571ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With ingress-class-by-name flag should watch Ingress that uses the class name even if spec is different" classname="nginx-ingress-controller e2e suite" status="passed" time="49.2747739">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:30.253&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:39.68 (9.461s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:34:39.68&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:34:45.772 (6.092s)&#xA;&gt; Enter [BeforeEach] With ingress-class-by-name flag - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:518 @ 07/16/23 23:34:45.772&#xA;&lt; Exit [BeforeEach] With ingress-class-by-name flag - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:518 @ 07/16/23 23:34:54.823 (9.051s)&#xA;&gt; Enter [It] should watch Ingress that uses the class name even if spec is different - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:539 @ 07/16/23 23:34:54.823&#xA;&lt; Exit [It] should watch Ingress that uses the class name even if spec is different - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:539 @ 07/16/23 23:35:19.068 (24.279s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:19.068&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:19.459 (391ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow origin for cors" classname="nginx-ingress-controller e2e suite" status="passed" time="20.0703369">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:19.461&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:27.831 (8.37s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:35:27.831&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:35:31.866 (4.07s)&#xA;&gt; Enter [It] should allow origin for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:110 @ 07/16/23 23:35:31.866&#xA;&lt; Exit [It] should allow origin for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:110 @ 07/16/23 23:35:38.908 (7.042s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:38.908&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:39.497 (588ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic configuration when only backends change handles endpoints only changes" classname="nginx-ingress-controller e2e suite" status="passed" time="35.9511506">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:39.502&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:48.362 (8.86s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 07/16/23 23:35:48.362&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 07/16/23 23:36:02.591 (14.263s)&#xA;&gt; Enter [It] handles endpoints only changes - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:62 @ 07/16/23 23:36:02.591&#xA;&lt; Exit [It] handles endpoints only changes - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:62 @ 07/16/23 23:36:15.012 (12.421s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:15.012&#xA;&lt; Exit [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:15.419 (407ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should exists opentracing_operation_name directive when is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="29.1864807">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:15.421&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:22.799 (7.379s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:36:22.799&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:36:26.895 (4.096s)&#xA;&gt; Enter [It] should exists opentracing_operation_name directive when is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:115 @ 07/16/23 23:36:26.895&#xA;&lt; Exit [It] should exists opentracing_operation_name directive when is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:115 @ 07/16/23 23:36:44.072 (17.211s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:44.072&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:44.573 (501ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:36:44.573&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:36:44.573 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-upstream with log-format-escape-json and log-format-escape-none log-format-escape-none enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="33.1573172">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:44.575&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:52.863 (8.288s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 07/16/23 23:36:52.863&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 07/16/23 23:37:03.994 (11.165s)&#xA;&gt; Enter [It] log-format-escape-none enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:128 @ 07/16/23 23:37:03.994&#xA;&lt; Exit [It] log-format-escape-none enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:128 @ 07/16/23 23:37:17.209 (13.215s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:17.209&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:17.698 (489ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] x-forwarded-prefix should not add X-Forwarded-Prefix if the annotation value is empty" classname="nginx-ingress-controller e2e suite" status="passed" time="22.5838376">
              <system-err>&gt; Enter [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:17.7&#xA;&lt; Exit [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:25.25 (7.55s)&#xA;&gt; Enter [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:31 @ 07/16/23 23:37:25.25&#xA;&lt; Exit [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:31 @ 07/16/23 23:37:29.308 (4.058s)&#xA;&gt; Enter [It] should not add X-Forwarded-Prefix if the annotation value is empty - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:57 @ 07/16/23 23:37:29.308&#xA;&lt; Exit [It] should not add X-Forwarded-Prefix if the annotation value is empty - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:57 @ 07/16/23 23:37:39.541 (10.267s)&#xA;&gt; Enter [AfterEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:39.541&#xA;&lt; Exit [AfterEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:40.249 (708ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow correct origins - missing subdomain + origin with wildcard origin and correct origin" classname="nginx-ingress-controller e2e suite" status="passed" time="24.3587205">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:40.25&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:50.903 (10.653s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:37:50.903&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:37:56.972 (6.069s)&#xA;&gt; Enter [It] should allow correct origins - missing subdomain + origin with wildcard origin and correct origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:535 @ 07/16/23 23:37:56.972&#xA;&lt; Exit [It] should allow correct origins - missing subdomain + origin with wildcard origin and correct origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:535 @ 07/16/23 23:38:04.012 (7.074s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:04.012&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:04.575 (562ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* Single canary Ingress should not use canary as a catch-all server" classname="nginx-ingress-controller e2e suite" status="passed" time="34.4296202">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:04.576&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:13.092 (8.516s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:38:13.092&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:38:21.224 (8.132s)&#xA;&gt; Enter [It] should not use canary as a catch-all server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:863 @ 07/16/23 23:38:21.224&#xA;&lt; Exit [It] should not use canary as a catch-all server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:863 @ 07/16/23 23:38:38.446 (17.256s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:38.446&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:38.972 (525ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-escape-json and log-format-escape-none should disable the log-format-escape-none" classname="nginx-ingress-controller e2e suite" status="passed" time="32.6154152">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:38.973&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:47.576 (8.603s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 07/16/23 23:38:47.576&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 07/16/23 23:39:00.694 (13.151s)&#xA;&gt; Enter [It] should disable the log-format-escape-none - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:71 @ 07/16/23 23:39:00.694&#xA;&lt; Exit [It] should disable the log-format-escape-none - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:71 @ 07/16/23 23:39:10.972 (10.278s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:10.972&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:11.554 (582ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should set cors methods to only allow POST, GET" classname="nginx-ingress-controller e2e suite" status="passed" time="24.9506285">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:11.557&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:21.757 (10.2s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:39:21.757&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:39:25.828 (4.071s)&#xA;&gt; Enter [It] should set cors methods to only allow POST, GET - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:62 @ 07/16/23 23:39:25.828&#xA;&lt; Exit [It] should set cors methods to only allow POST, GET - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:62 @ 07/16/23 23:39:35.962 (10.168s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:35.962&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:36.474 (511ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should be enabled with default settings" classname="nginx-ingress-controller e2e suite" status="passed" time="19.370634">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:36.475&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:45.251 (8.776s)&#xA;&gt; Enter [It] should be enabled with default settings - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:39 @ 07/16/23 23:39:45.251&#xA;&lt; Exit [It] should be enabled with default settings - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:39 @ 07/16/23 23:39:55.449 (10.198s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:55.449&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:55.846 (396ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should expose headers for cors" classname="nginx-ingress-controller e2e suite" status="passed" time="27.5362647">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:55.848&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:04.392 (8.579s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:40:04.392&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:40:12.535 (8.142s)&#xA;&gt; Enter [It] should expose headers for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:153 @ 07/16/23 23:40:12.535&#xA;&lt; Exit [It] should expose headers for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:153 @ 07/16/23 23:40:22.872 (10.337s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:22.872&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:23.35 (478ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should ignore Ingress without IngressClass configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="30.7522369">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:23.353&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:31.723 (8.405s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:40:31.724&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:40:35.786 (4.063s)&#xA;&gt; Enter [It] should ignore Ingress without IngressClass configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:164 @ 07/16/23 23:40:35.786&#xA;&lt; Exit [It] should ignore Ingress without IngressClass configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:164 @ 07/16/23 23:40:53.138 (17.352s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:53.138&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:54.07 (932ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should 302 redirect to error page instead of 400 when auth-tls-error-page is set" classname="nginx-ingress-controller e2e suite" status="passed" time="27.2150254">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:54.097&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:41:02.625 (8.562s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 07/16/23 23:41:02.625&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 07/16/23 23:41:06.715 (4.09s)&#xA;&gt; Enter [It] should 302 redirect to error page instead of 400 when auth-tls-error-page is set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:114 @ 07/16/23 23:41:06.715&#xA;&lt; Exit [It] should 302 redirect to error page instead of 400 when auth-tls-error-page is set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:114 @ 07/16/23 23:41:20.837 (14.122s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:20.837&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:21.278 (441ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-read-timeout should set valid proxy read timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="27.7274403">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:41:21.3&#xA;&lt; Exit [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:41:29.247 (7.948s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:32 @ 07/16/23 23:41:29.248&#xA;&lt; Exit [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:32 @ 07/16/23 23:41:31.27 (2.057s)&#xA;&gt; Enter [It] should set valid proxy read timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:36 @ 07/16/23 23:41:31.27&#xA;&lt; Exit [It] should set valid proxy read timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:36 @ 07/16/23 23:41:48.597 (17.327s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:48.597&#xA;&lt; Exit [AfterEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:48.993 (395ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should set client_body_buffer_size to 1M" classname="nginx-ingress-controller e2e suite" status="passed" time="47.7200023">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:07:34.242&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:07:51.069 (16.827s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 07/16/23 23:07:51.069&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 07/16/23 23:08:07.17 (16.135s)&#xA;&gt; Enter [It] should set client_body_buffer_size to 1M - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:123 @ 07/16/23 23:08:07.17&#xA;&lt; Exit [It] should set client_body_buffer_size to 1M - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:123 @ 07/16/23 23:08:18.073 (10.903s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:18.073&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:21.927 (3.855s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log disable-access-log set access_log off" classname="nginx-ingress-controller e2e suite" status="passed" time="34.1352475">
              <system-err>&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:21.964&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:34.164 (12.234s)&#xA;&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 07/16/23 23:08:34.164&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 07/16/23 23:08:38.275 (4.111s)&#xA;&gt; Enter [It] disable-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:35 @ 07/16/23 23:08:38.275&#xA;&lt; Exit [It] disable-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:35 @ 07/16/23 23:08:55.61 (17.335s)&#xA;&gt; Enter [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:55.61&#xA;&lt; Exit [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:56.065 (455ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] access-log access-log-path use the specified configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="20.0266119">
              <system-err>&gt; Enter [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:56.067&#xA;&lt; Exit [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:04.727 (8.695s)&#xA;&gt; Enter [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:42 @ 07/16/23 23:09:04.727&#xA;&lt; Exit [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:42 @ 07/16/23 23:09:15.337 (10.61s)&#xA;&gt; Enter [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:15.337&#xA;&lt; Exit [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:16.059 (722ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should set gzip_disable to msie6" classname="nginx-ingress-controller e2e suite" status="passed" time="28.4511687">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:16.064&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:26.631 (10.567s)&#xA;&gt; Enter [It] should set gzip_disable to msie6 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:67 @ 07/16/23 23:09:26.631&#xA;&lt; Exit [It] should set gzip_disable to msie6 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:67 @ 07/16/23 23:09:43.812 (17.216s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:43.816&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:44.481 (664ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates given an ingress with TLS correctly configured removes HTTPS configuration when we delete TLS spec" classname="nginx-ingress-controller e2e suite" status="passed" time="43.7996681">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:44.483&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:52.854 (8.371s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 07/16/23 23:09:52.854&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 07/16/23 23:09:56.947 (4.093s)&#xA;&gt; Enter [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 07/16/23 23:09:56.947&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:128 @ 07/16/23 23:10:14.472&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:136 @ 07/16/23 23:10:22.717&#xA;&lt; Exit [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 07/16/23 23:10:22.74 (25.827s)&#xA;&gt; Enter [It] removes HTTPS configuration when we delete TLS spec - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:233 @ 07/16/23 23:10:22.74&#xA;&lt; Exit [It] removes HTTPS configuration when we delete TLS spec - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:233 @ 07/16/23 23:10:27.764 (5.024s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:27.764&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:28.249 (485ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should set gzip_types to application/javascript" classname="nginx-ingress-controller e2e suite" status="passed" time="26.4027206">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:28.252&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:36.867 (8.65s)&#xA;&gt; Enter [It] should set gzip_types to application/javascript - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:89 @ 07/16/23 23:10:36.867&#xA;&lt; Exit [It] should set gzip_types to application/javascript - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:89 @ 07/16/23 23:10:54.131 (17.264s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:54.131&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:10:54.62 (489ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] server-snippet drops server snippet if disabled by the administrator" classname="nginx-ingress-controller e2e suite" status="passed" time="42.2234782">
              <system-err>&gt; Enter [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:54.623&#xA;&lt; Exit [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:11:02.922 (8.355s)&#xA;&gt; Enter [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:31 @ 07/16/23 23:11:02.922&#xA;&lt; Exit [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:31 @ 07/16/23 23:11:07.043 (4.12s)&#xA;&gt; Enter [It] drops server snippet if disabled by the administrator - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:61 @ 07/16/23 23:11:07.043&#xA;&lt; Exit [It] drops server snippet if disabled by the administrator - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:61 @ 07/16/23 23:11:36.273 (29.286s)&#xA;&gt; Enter [AfterEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:11:36.273&#xA;&lt; Exit [AfterEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:11:36.734 (462ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should set client_body_buffer_size to 1000" classname="nginx-ingress-controller e2e suite" status="passed" time="23.4842961">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:11:36.736&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:11:45.28 (8.543s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 07/16/23 23:11:45.28&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 07/16/23 23:11:49.471 (4.191s)&#xA;&gt; Enter [It] should set client_body_buffer_size to 1000 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:35 @ 07/16/23 23:11:49.471&#xA;&lt; Exit [It] should set client_body_buffer_size to 1000 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:35 @ 07/16/23 23:11:59.696 (10.224s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:11:59.696&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:00.22 (525ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-connect-timeout should set valid proxy timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="29.4130747">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:00.222&#xA;&lt; Exit [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:07.673 (7.488s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:32 @ 07/16/23 23:12:07.673&#xA;&lt; Exit [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:32 @ 07/16/23 23:12:11.802 (4.129s)&#xA;&gt; Enter [It] should set valid proxy timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:36 @ 07/16/23 23:12:11.802&#xA;&lt; Exit [It] should set valid proxy timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:36 @ 07/16/23 23:12:29.118 (17.317s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:29.119&#xA;&lt; Exit [AfterEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:29.598 (479ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Debug CLI should get information for a specific backend server" classname="nginx-ingress-controller e2e suite" status="passed" time="24.3579777">
              <system-err>&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:29.6&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:38.338 (8.773s)&#xA;&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 07/16/23 23:12:38.338&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 07/16/23 23:12:42.421 (4.083s)&#xA;&gt; Enter [It] should get information for a specific backend server - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:56 @ 07/16/23 23:12:42.421&#xA;&lt; Exit [It] should get information for a specific backend server - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:56 @ 07/16/23 23:12:53.144 (10.723s)&#xA;&gt; Enter [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:53.144&#xA;&lt; Exit [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:53.923 (779ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should return status code 200 when signed in" classname="nginx-ingress-controller e2e suite" status="passed" time="27.5322042">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:53.953&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:02.253 (8.335s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:13:02.254&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:13:06.383 (4.13s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:13:06.383&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:13:20.773 (14.39s)&#xA;&gt; Enter [It] should return status code 200 when signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:485 @ 07/16/23 23:13:20.773&#xA;&lt; Exit [It] should return status code 200 when signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:485 @ 07/16/23 23:13:20.8 (27ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:20.8&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:21.451 (651ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] no-auth-locations should return status code 200 when accessing &#39;/noauth&#39; unauthenticated" classname="nginx-ingress-controller e2e suite" status="passed" time="34.0313932">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:21.454&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:32.274 (10.854s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 07/16/23 23:13:32.274&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 07/16/23 23:13:51.868 (19.594s)&#xA;&gt; Enter [It] should return status code 200 when accessing &#39;/noauth&#39; unauthenticated - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:82 @ 07/16/23 23:13:51.868&#xA;&lt; Exit [It] should return status code 200 when accessing &#39;/noauth&#39; unauthenticated - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:82 @ 07/16/23 23:13:55.053 (3.185s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:55.053&#xA;&lt; Exit [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:55.451 (398ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] force-ssl-redirect should redirect to https" classname="nginx-ingress-controller e2e suite" status="passed" time="20.1262433">
              <system-err>&gt; Enter [BeforeEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:55.453&#xA;&lt; Exit [BeforeEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:03.927 (8.508s)&#xA;&gt; Enter [BeforeEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/forcesslredirect.go:30 @ 07/16/23 23:14:03.927&#xA;&lt; Exit [BeforeEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/forcesslredirect.go:30 @ 07/16/23 23:14:08.019 (4.092s)&#xA;&gt; Enter [It] should redirect to https - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/forcesslredirect.go:34 @ 07/16/23 23:14:08.019&#xA;&lt; Exit [It] should redirect to https - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/forcesslredirect.go:34 @ 07/16/23 23:14:15.059 (7.04s)&#xA;&gt; Enter [AfterEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:15.059&#xA;&lt; Exit [AfterEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:15.545 (486ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow - matching origin with wildcard origin (2 subdomains)" classname="nginx-ingress-controller e2e suite" status="passed" time="35.4711634">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:15.546&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:25.303 (9.757s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:14:25.303&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:14:31.39 (6.086s)&#xA;&gt; Enter [It] should allow - matching origin with wildcard origin (2 subdomains) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:425 @ 07/16/23 23:14:31.39&#xA;&lt; Exit [It] should allow - matching origin with wildcard origin (2 subdomains) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:425 @ 07/16/23 23:14:38.906 (7.55s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:38.906&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:50.983 (12.078s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [TCP] tcp-services should reload after an update in the configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="32.8432535">
              <system-err>&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:51.107&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:05.828 (14.755s)&#xA;&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 07/16/23 23:15:05.828&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 07/16/23 23:15:05.835 (7ms)&#xA;&gt; Enter [It] should reload after an update in the configuration - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:169 @ 07/16/23 23:15:05.835&#xA;STEP: setting up a first deployment - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:171 @ 07/16/23 23:15:05.835&#xA;STEP: updating the tcp service to a second deployment - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:196 @ 07/16/23 23:15:13.198&#xA;&lt; Exit [It] should reload after an update in the configuration - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:169 @ 07/16/23 23:15:23.493 (17.658s)&#xA;&gt; Enter [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:23.493&#xA;&lt; Exit [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:23.916 (423ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] configmap server-snippet should add global server-snippet and drop annotations per admin config" classname="nginx-ingress-controller e2e suite" status="passed" time="45.5397753">
              <system-err>&gt; Enter [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:23.918&#xA;&lt; Exit [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:32.462 (8.579s)&#xA;&gt; Enter [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:31 @ 07/16/23 23:15:32.462&#xA;&lt; Exit [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:31 @ 07/16/23 23:15:36.539 (4.076s)&#xA;&gt; Enter [It] should add global server-snippet and drop annotations per admin config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:92 @ 07/16/23 23:15:36.539&#xA;&lt; Exit [It] should add global server-snippet and drop annotations per admin config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:92 @ 07/16/23 23:16:08.955 (32.451s)&#xA;&gt; Enter [AfterEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:08.955&#xA;&lt; Exit [AfterEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:09.389 (434ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not allow - single origin with port and origin without port" classname="nginx-ingress-controller e2e suite" status="passed" time="19.8859877">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:09.392&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:17.757 (8.366s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:16:17.757&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:16:21.842 (4.084s)&#xA;&gt; Enter [It] should not allow - single origin with port and origin without port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:386 @ 07/16/23 23:16:21.842&#xA;&lt; Exit [It] should not allow - single origin with port and origin without port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:386 @ 07/16/23 23:16:28.878 (7.036s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:28.878&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:29.277 (399ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set cookie with domain" classname="nginx-ingress-controller e2e suite" status="passed" time="22.134782">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:29.279&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:36.677 (7.433s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:16:36.678&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:16:40.761 (4.083s)&#xA;&gt; Enter [It] should set cookie with domain - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:225 @ 07/16/23 23:16:40.761&#xA;&lt; Exit [It] should set cookie with domain - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:225 @ 07/16/23 23:16:50.994 (10.233s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:50.994&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:51.379 (385ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] ssl-ciphers Add ssl ciphers" classname="nginx-ingress-controller e2e suite" status="passed" time="18.9356291">
              <system-err>&gt; Enter [BeforeEach] [Setting] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:51.381&#xA;&lt; Exit [BeforeEach] [Setting] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:59.709 (8.329s)&#xA;&gt; Enter [It] Add ssl ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_ciphers.go:31 @ 07/16/23 23:16:59.71&#xA;&lt; Exit [It] Add ssl ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_ciphers.go:31 @ 07/16/23 23:17:09.861 (10.185s)&#xA;&gt; Enter [AfterEach] [Setting] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:09.861&#xA;&lt; Exit [AfterEach] [Setting] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:10.282 (421ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] [PathType] exact should choose exact location for /exact" classname="nginx-ingress-controller e2e suite" status="passed" time="40.9304922">
              <system-err>&gt; Enter [BeforeEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:10.283&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:18.723 (8.44s)&#xA;&gt; Enter [BeforeEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_exact.go:33 @ 07/16/23 23:17:18.724&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_exact.go:33 @ 07/16/23 23:17:22.807 (4.083s)&#xA;&gt; Enter [It] should choose exact location for /exact - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_exact.go:37 @ 07/16/23 23:17:22.807&#xA;&lt; Exit [It] should choose exact location for /exact - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_exact.go:37 @ 07/16/23 23:17:50.668 (27.896s)&#xA;&gt; Enter [AfterEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:50.668&#xA;&lt; Exit [AfterEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:51.179 (511ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] configmap server-snippet should add value of server-snippet setting to all ingress config" classname="nginx-ingress-controller e2e suite" status="passed" time="45.8906599">
              <system-err>&gt; Enter [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:51.181&#xA;&lt; Exit [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:59.818 (8.637s)&#xA;&gt; Enter [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:31 @ 07/16/23 23:17:59.819&#xA;&lt; Exit [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:31 @ 07/16/23 23:18:03.954 (4.169s)&#xA;&gt; Enter [It] should add value of server-snippet setting to all ingress config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:35 @ 07/16/23 23:18:03.954&#xA;&lt; Exit [It] should add value of server-snippet setting to all ingress config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:35 @ 07/16/23 23:18:36.609 (32.69s)&#xA;&gt; Enter [AfterEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:36.609&#xA;&lt; Exit [AfterEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:37.003 (394ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-escape-json and log-format-escape-none should enable the log-format-escape-json" classname="nginx-ingress-controller e2e suite" status="passed" time="30.2295655">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:37.005&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:45.497 (8.492s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 07/16/23 23:18:45.497&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 07/16/23 23:18:56.635 (11.138s)&#xA;&gt; Enter [It] should enable the log-format-escape-json - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:47 @ 07/16/23 23:18:56.635&#xA;&lt; Exit [It] should enable the log-format-escape-json - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:47 @ 07/16/23 23:19:06.818 (10.218s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:06.819&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:07.2 (381ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] server-snippet add valid directives to server via server snippet" classname="nginx-ingress-controller e2e suite" status="passed" time="23.3526123">
              <system-err>&gt; Enter [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:07.202&#xA;&lt; Exit [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:15.79 (8.588s)&#xA;&gt; Enter [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:31 @ 07/16/23 23:19:15.79&#xA;&lt; Exit [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:31 @ 07/16/23 23:19:19.867 (4.077s)&#xA;&gt; Enter [It] add valid directives to server via server snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:35 @ 07/16/23 23:19:19.867&#xA;&lt; Exit [It] add valid directives to server via server snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:35 @ 07/16/23 23:19:30.126 (10.259s)&#xA;&gt; Enter [AfterEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:30.126&#xA;&lt; Exit [AfterEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:30.554 (428ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] [PathType] prefix checks should return 404 when prefix /aaa does not match request /aaaccc" classname="nginx-ingress-controller e2e suite" status="passed" time="23.302233">
              <system-err>&gt; Enter [BeforeEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:30.555&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:38.942 (8.421s)&#xA;&gt; Enter [BeforeEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_prefix.go:31 @ 07/16/23 23:19:38.942&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_prefix.go:31 @ 07/16/23 23:19:43.029 (4.087s)&#xA;&gt; Enter [It] should return 404 when prefix /aaa does not match request /aaaccc - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_prefix.go:35 @ 07/16/23 23:19:43.029&#xA;&lt; Exit [It] should return 404 when prefix /aaa does not match request /aaaccc - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_prefix.go:35 @ 07/16/23 23:19:53.271 (10.241s)&#xA;&gt; Enter [AfterEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:53.271&#xA;&lt; Exit [AfterEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:53.823 (553ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] server-tokens should not exists Server header in the response" classname="nginx-ingress-controller e2e suite" status="passed" time="30.1654251">
              <system-err>&gt; Enter [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:53.836&#xA;&lt; Exit [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:02.051 (8.25s)&#xA;&gt; Enter [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:34 @ 07/16/23 23:20:02.051&#xA;&lt; Exit [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:34 @ 07/16/23 23:20:06.14 (4.089s)&#xA;&gt; Enter [It] should not exists Server header in the response - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:38 @ 07/16/23 23:20:06.14&#xA;&lt; Exit [It] should not exists Server header in the response - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:38 @ 07/16/23 23:20:23.477 (17.337s)&#xA;&gt; Enter [AfterEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:23.477&#xA;&lt; Exit [AfterEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:23.967 (489ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] custom service uses custom default backend that returns 200 as status code" classname="nginx-ingress-controller e2e suite" status="passed" time="25.4070472">
              <system-err>&gt; Enter [BeforeEach] [Default Backend] custom service - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:23.968&#xA;&lt; Exit [BeforeEach] [Default Backend] custom service - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:32.478 (8.544s)&#xA;&gt; Enter [It] uses custom default backend that returns 200 as status code - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/custom_default_backend.go:36 @ 07/16/23 23:20:32.478&#xA;&lt; Exit [It] uses custom default backend that returns 200 as status code - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/custom_default_backend.go:36 @ 07/16/23 23:20:48.821 (16.343s)&#xA;&gt; Enter [AfterEach] [Default Backend] custom service - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:48.821&#xA;&lt; Exit [AfterEach] [Default Backend] custom service - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:49.341 (520ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should return 403 using auth-tls-match-cn with no matching CN from client" classname="nginx-ingress-controller e2e suite" status="passed" time="24.2762821">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:49.348&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:57.865 (8.517s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 07/16/23 23:20:57.865&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 07/16/23 23:21:01.925 (4.094s)&#xA;&gt; Enter [It] should return 403 using auth-tls-match-cn with no matching CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:266 @ 07/16/23 23:21:01.925&#xA;&lt; Exit [It] should return 403 using auth-tls-match-cn with no matching CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:266 @ 07/16/23 23:21:13.025 (11.101s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:13.025&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:13.59 (565ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should return 200 for service type=ExternalName using FQDN with trailing dot" classname="nginx-ingress-controller e2e suite" status="passed" time="20.6145828">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:13.591&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:23.49 (9.898s)&#xA;&gt; Enter [It] should return 200 for service type=ExternalName using FQDN with trailing dot - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:217 @ 07/16/23 23:21:23.49&#xA;&lt; Exit [It] should return 200 for service type=ExternalName using FQDN with trailing dot - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:217 @ 07/16/23 23:21:33.747 (10.292s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:33.747&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:34.172 (424ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-read-timeout should not set invalid proxy read timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="30.8205755">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:34.173&#xA;&lt; Exit [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:43.009 (8.836s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:32 @ 07/16/23 23:21:43.009&#xA;&lt; Exit [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:32 @ 07/16/23 23:21:47.1 (4.091s)&#xA;&gt; Enter [It] should not set invalid proxy read timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:52 @ 07/16/23 23:21:47.1&#xA;&lt; Exit [It] should not set invalid proxy read timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:52 @ 07/16/23 23:22:04.345 (17.279s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:04.345&#xA;&lt; Exit [AfterEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:04.959 (614ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set cookie with expires" classname="nginx-ingress-controller e2e suite" status="passed" time="23.2029575">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:04.961&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:13.436 (8.476s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:22:13.436&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:22:17.548 (4.111s)&#xA;&gt; Enter [It] should set cookie with expires - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:194 @ 07/16/23 23:22:17.548&#xA;&lt; Exit [It] should set cookie with expires - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:194 @ 07/16/23 23:22:27.746 (10.199s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:27.746&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:28.164 (417ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should not set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is not configured" classname="nginx-ingress-controller e2e suite" status="passed" time="23.630663">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:28.165&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:36.999 (8.868s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:22:36.999&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:22:41.09 (4.09s)&#xA;&gt; Enter [It] should not set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:284 @ 07/16/23 23:22:41.09&#xA;&lt; Exit [It] should not set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:284 @ 07/16/23 23:22:51.266 (10.177s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:51.266&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:51.761 (495ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should not exists opentracing directive" classname="nginx-ingress-controller e2e suite" status="passed" time="30.1947514">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:51.771&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:00.105 (8.333s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:23:00.105&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:23:04.146 (4.075s)&#xA;&gt; Enter [It] should not exists opentracing directive - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:58 @ 07/16/23 23:23:04.146&#xA;&lt; Exit [It] should not exists opentracing directive - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:58 @ 07/16/23 23:23:21.518 (17.372s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:21.518&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:21.932 (414ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:23:21.932&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:23:21.932 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should enable opentracing using jaeger with sampler host" classname="nginx-ingress-controller e2e suite" status="passed" time="34.1749552">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:21.935&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:31.384 (9.483s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:23:31.384&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:23:35.475 (4.091s)&#xA;&gt; Enter [It] should enable opentracing using jaeger with sampler host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:184 @ 07/16/23 23:23:35.475&#xA;&lt; Exit [It] should enable opentracing using jaeger with sampler host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:184 @ 07/16/23 23:23:55.524 (20.049s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:55.524&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:56.075 (551ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:23:56.075&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:23:56.075 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] definition without host should set ingress details variables for ingresses with host without IngressRuleValue, only Backend" classname="nginx-ingress-controller e2e suite" status="passed" time="23.1853069">
              <system-err>&gt; Enter [BeforeEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:56.077&#xA;&lt; Exit [BeforeEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:04.518 (8.476s)&#xA;&gt; Enter [It] should set ingress details variables for ingresses with host without IngressRuleValue, only Backend - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/without_host.go:55 @ 07/16/23 23:24:04.518&#xA;&lt; Exit [It] should set ingress details variables for ingresses with host without IngressRuleValue, only Backend - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/without_host.go:55 @ 07/16/23 23:24:18.775 (14.257s)&#xA;&gt; Enter [AfterEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:18.775&#xA;&lt; Exit [AfterEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:19.228 (452ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to &#39;&#39; and use fastcgi_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="23.6797553">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:19.229&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:27.5 (8.272s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 07/16/23 23:24:27.501&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 07/16/23 23:24:31.562 (4.096s)&#xA;&gt; Enter [It] should set backend protocol to &#39;&#39; and use fastcgi_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:94 @ 07/16/23 23:24:31.562&#xA;&lt; Exit [It] should set backend protocol to &#39;&#39; and use fastcgi_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:94 @ 07/16/23 23:24:42.129 (10.566s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:42.129&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:42.874 (745ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Security] request smuggling should not return body content from error_page" classname="nginx-ingress-controller e2e suite" status="passed" time="35.7837448">
              <system-err>&gt; Enter [BeforeEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:42.875&#xA;&lt; Exit [BeforeEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:51.845 (8.97s)&#xA;&gt; Enter [BeforeEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/security/request_smuggling.go:35 @ 07/16/23 23:24:51.845&#xA;&lt; Exit [BeforeEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/security/request_smuggling.go:35 @ 07/16/23 23:24:55.921 (4.076s)&#xA;&gt; Enter [It] should not return body content from error_page - /go/src/k8s.io/ingress-nginx/test/e2e/security/request_smuggling.go:39 @ 07/16/23 23:24:55.921&#xA;&lt; Exit [It] should not return body content from error_page - /go/src/k8s.io/ingress-nginx/test/e2e/security/request_smuggling.go:39 @ 07/16/23 23:25:18.165 (22.279s)&#xA;&gt; Enter [AfterEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:18.165&#xA;&lt; Exit [AfterEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:18.624 (459ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* cookie set by external authentication server user does not retain cookie if upstream returns error status code" classname="nginx-ingress-controller e2e suite" status="passed" time="34.2596381">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:18.626&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:26.989 (8.37s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:25:26.996&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:25:31.086 (4.091s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 07/16/23 23:25:31.087&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 07/16/23 23:25:52.393 (21.341s)&#xA;&gt; Enter [It] user does not retain cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:422 @ 07/16/23 23:25:52.393&#xA;&lt; Exit [It] user does not retain cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:422 @ 07/16/23 23:25:52.403 (10ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:52.403&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:52.851 (448ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates given an ingress with TLS correctly configured picks up a non-certificate only change" classname="nginx-ingress-controller e2e suite" status="passed" time="44.2339168">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:52.853&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:01.147 (8.328s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 07/16/23 23:26:01.147&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 07/16/23 23:26:05.234 (4.087s)&#xA;&gt; Enter [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 07/16/23 23:26:05.234&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:128 @ 07/16/23 23:26:22.995&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:136 @ 07/16/23 23:26:31.133&#xA;&lt; Exit [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 07/16/23 23:26:31.179 (25.98s)&#xA;&gt; Enter [It] picks up a non-certificate only change - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:218 @ 07/16/23 23:26:31.179&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:229 @ 07/16/23 23:26:36.206&#xA;&lt; Exit [It] picks up a non-certificate only change - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:218 @ 07/16/23 23:26:36.237 (5.058s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:36.237&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:37.018 (782ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log disable-stream-access-log set access_log off" classname="nginx-ingress-controller e2e suite" status="passed" time="30.4588905">
              <system-err>&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:37.021&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:45.616 (8.596s)&#xA;&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 07/16/23 23:26:45.616&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 07/16/23 23:26:49.683 (4.066s)&#xA;&gt; Enter [It] disable-stream-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:71 @ 07/16/23 23:26:49.683&#xA;&lt; Exit [It] disable-stream-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:71 @ 07/16/23 23:27:06.949 (17.301s)&#xA;&gt; Enter [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:06.949&#xA;&lt; Exit [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:07.445 (496ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-catch-all should delete Ingress updated to catch-all" classname="nginx-ingress-controller e2e suite" status="passed" time="38.3532264">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:07.447&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:15.777 (8.33s)&#xA;&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 07/16/23 23:27:15.778&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 07/16/23 23:27:30.909 (15.132s)&#xA;&gt; Enter [It] should delete Ingress updated to catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:81 @ 07/16/23 23:27:30.909&#xA;&lt; Exit [It] should delete Ingress updated to catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:81 @ 07/16/23 23:27:45.291 (14.415s)&#xA;&gt; Enter [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:45.291&#xA;&lt; Exit [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:45.766 (475ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should set client_body_buffer_size to 1k" classname="nginx-ingress-controller e2e suite" status="passed" time="23.8919238">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:45.767&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:54.396 (8.629s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 07/16/23 23:27:54.396&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 07/16/23 23:27:58.524 (4.127s)&#xA;&gt; Enter [It] should set client_body_buffer_size to 1k - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:79 @ 07/16/23 23:27:58.524&#xA;&lt; Exit [It] should set client_body_buffer_size to 1k - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:79 @ 07/16/23 23:28:08.725 (10.235s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:08.725&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:09.625 (900ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should work with server-alias annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="22.7231201">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:09.63&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:17.428 (7.798s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:28:17.428&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:28:21.486 (4.058s)&#xA;&gt; Enter [It] should work with server-alias annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:372 @ 07/16/23 23:28:21.486&#xA;&lt; Exit [It] should work with server-alias annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:372 @ 07/16/23 23:28:31.88 (10.429s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:31.88&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:32.319 (438ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] SSL should return a self generated SSL certificate" classname="nginx-ingress-controller e2e suite" status="passed" time="15.0163295">
              <system-err>&gt; Enter [BeforeEach] [Default Backend] SSL - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:32.324&#xA;&lt; Exit [BeforeEach] [Default Backend] SSL - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:41.907 (9.584s)&#xA;&gt; Enter [It] should return a self generated SSL certificate - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/ssl.go:29 @ 07/16/23 23:28:41.907&#xA;STEP: checking SSL Certificate using the NGINX IP address - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/ssl.go:30 @ 07/16/23 23:28:41.908&#xA;STEP: checking SSL Certificate using the NGINX catch all server - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/ssl.go:45 @ 07/16/23 23:28:46.925&#xA;&lt; Exit [It] should return a self generated SSL certificate - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/ssl.go:29 @ 07/16/23 23:28:46.943 (5.036s)&#xA;&gt; Enter [AfterEach] [Default Backend] SSL - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:46.943&#xA;&lt; Exit [AfterEach] [Default Backend] SSL - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:47.34 (397ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] server-tokens should exists Server header in the response when is enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="30.4229921">
              <system-err>&gt; Enter [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:47.341&#xA;&lt; Exit [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:55.857 (8.516s)&#xA;&gt; Enter [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:34 @ 07/16/23 23:28:55.857&#xA;&lt; Exit [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:34 @ 07/16/23 23:28:59.917 (4.06s)&#xA;&gt; Enter [It] should exists Server header in the response when is enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:50 @ 07/16/23 23:28:59.917&#xA;&lt; Exit [It] should exists Server header in the response when is enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:50 @ 07/16/23 23:29:17.172 (17.289s)&#xA;&gt; Enter [AfterEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:17.172&#xA;&lt; Exit [AfterEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:17.73 (558ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] modsecurity-snippet should add value of modsecurity-snippet setting to nginx config" classname="nginx-ingress-controller e2e suite" status="passed" time="20.1582254">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] modsecurity-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:17.734&#xA;&lt; Exit [BeforeEach] [Setting] [Security] modsecurity-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:26.783 (9.049s)&#xA;&gt; Enter [It] should add value of modsecurity-snippet setting to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/modsecurity/modsecurity_snippet.go:30 @ 07/16/23 23:29:26.783&#xA;&lt; Exit [It] should add value of modsecurity-snippet setting to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/modsecurity/modsecurity_snippet.go:30 @ 07/16/23 23:29:37.377 (10.63s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] modsecurity-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:37.377&#xA;&lt; Exit [AfterEach] [Setting] [Security] modsecurity-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:37.857 (480ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] enable-access-log enable-rewrite-log set rewrite_log on" classname="nginx-ingress-controller e2e suite" status="passed" time="22.3586037">
              <system-err>&gt; Enter [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:37.859&#xA;&lt; Exit [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:45.315 (7.456s)&#xA;&gt; Enter [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:30 @ 07/16/23 23:29:45.315&#xA;&lt; Exit [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:30 @ 07/16/23 23:29:49.393 (4.078s)&#xA;&gt; Enter [It] set rewrite_log on - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:49 @ 07/16/23 23:29:49.393&#xA;&lt; Exit [It] set rewrite_log on - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:49 @ 07/16/23 23:29:59.716 (10.323s)&#xA;&gt; Enter [AfterEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:59.716&#xA;&lt; Exit [AfterEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:30:00.218 (501ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - GRPC should return OK for service with backend protocol GRPCS" classname="nginx-ingress-controller e2e suite" status="passed" time="23.5406261">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:30:00.22&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:30:08.82 (8.64s)&#xA;&gt; Enter [It] should return OK for service with backend protocol GRPCS - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:199 @ 07/16/23 23:30:08.82&#xA;&lt; Exit [It] should return OK for service with backend protocol GRPCS - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:199 @ 07/16/23 23:30:23.242 (14.421s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:30:23.242&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:30:23.721 (479ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] stream-snippet should add stream-snippet and drop annotations per admin config" classname="nginx-ingress-controller e2e suite" status="passed" time="42.9605084">
              <system-err>&gt; Enter [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:30:23.724&#xA;&lt; Exit [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:30:32.155 (8.497s)&#xA;&gt; Enter [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:37 @ 07/16/23 23:30:32.155&#xA;&lt; Exit [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:37 @ 07/16/23 23:30:36.238 (4.083s)&#xA;&gt; Enter [It] should add stream-snippet and drop annotations per admin config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:85 @ 07/16/23 23:30:36.238&#xA;&lt; Exit [It] should add stream-snippet and drop annotations per admin config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:85 @ 07/16/23 23:31:06.15 (29.95s)&#xA;&gt; Enter [AfterEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:06.15&#xA;&lt; Exit [AfterEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:06.581 (431ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set sticky cookie without host" classname="nginx-ingress-controller e2e suite" status="passed" time="23.2996416">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:06.583&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:15.201 (8.619s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:31:15.201&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:31:19.262 (4.061s)&#xA;&gt; Enter [It] should set sticky cookie without host - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:352 @ 07/16/23 23:31:19.262&#xA;&lt; Exit [It] should set sticky cookie without host - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:352 @ 07/16/23 23:31:29.469 (10.206s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:29.469&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:29.882 (413ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] configuration-snippet set snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations&#34;" classname="nginx-ingress-controller e2e suite" status="passed" time="24.9538328">
              <system-err>&gt; Enter [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:29.885&#xA;&lt; Exit [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:40.12 (10.27s)&#xA;&gt; Enter [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:31 @ 07/16/23 23:31:40.12&#xA;&lt; Exit [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:31 @ 07/16/23 23:31:44.185 (4.066s)&#xA;&gt; Enter [It] set snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations&#34; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:35 @ 07/16/23 23:31:44.185&#xA;&lt; Exit [It] set snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations&#34; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:35 @ 07/16/23 23:31:54.361 (10.176s)&#xA;&gt; Enter [AfterEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:54.361&#xA;&lt; Exit [AfterEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:31:54.803 (442ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should enable opentracing using jaeger" classname="nginx-ingress-controller e2e suite" status="passed" time="32.7940916">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:31:54.805&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:03.07 (8.3s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:32:03.07&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:32:07.143 (4.072s)&#xA;&gt; Enter [It] should enable opentracing using jaeger - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:172 @ 07/16/23 23:32:07.143&#xA;&lt; Exit [It] should enable opentracing using jaeger - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:172 @ 07/16/23 23:32:27.197 (20.054s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:27.197&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:27.565 (368ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:32:27.565&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:32:27.565 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to &#39;&#39; and use ajp_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="23.2995558">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:27.566&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:35.926 (8.394s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 07/16/23 23:32:35.926&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 07/16/23 23:32:40.026 (4.1s)&#xA;&gt; Enter [It] should set backend protocol to &#39;&#39; and use ajp_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:109 @ 07/16/23 23:32:40.026&#xA;&lt; Exit [It] should set backend protocol to &#39;&#39; and use ajp_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:109 @ 07/16/23 23:32:50.274 (10.248s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:50.274&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:32:50.832 (558ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-forwarded-headers should trust X-Forwarded headers when setting is true" classname="nginx-ingress-controller e2e suite" status="passed" time="37.3268827">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:50.833&#xA;&lt; Exit [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:32:59.336 (8.503s)&#xA;&gt; Enter [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:35 @ 07/16/23 23:32:59.336&#xA;&lt; Exit [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:35 @ 07/16/23 23:33:10.405 (11.103s)&#xA;&gt; Enter [It] should trust X-Forwarded headers when setting is true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:40 @ 07/16/23 23:33:10.405&#xA;STEP: ensuring single values are parsed correctly - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:54 @ 07/16/23 23:33:27.663&#xA;STEP: ensuring that first entry in X-Forwarded-Host is used as the best host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:75 @ 07/16/23 23:33:27.674&#xA;&lt; Exit [It] should trust X-Forwarded headers when setting is true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:40 @ 07/16/23 23:33:27.683 (17.278s)&#xA;&gt; Enter [AfterEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:27.683&#xA;&lt; Exit [AfterEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:28.126 (443ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Endpointslices] long service name should return 200 when service name has max allowed number of characters 63" classname="nginx-ingress-controller e2e suite" status="passed" time="22.090578">
              <system-err>&gt; Enter [BeforeEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:28.128&#xA;&lt; Exit [BeforeEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:35.418 (7.324s)&#xA;&gt; Enter [BeforeEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/longname.go:34 @ 07/16/23 23:33:35.418&#xA;&lt; Exit [BeforeEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/longname.go:34 @ 07/16/23 23:33:39.517 (4.099s)&#xA;&gt; Enter [It] should return 200 when service name has max allowed number of characters 63 - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/longname.go:38 @ 07/16/23 23:33:39.517&#xA;STEP: checking if the service is reached - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/longname.go:48 @ 07/16/23 23:33:49.731&#xA;&lt; Exit [It] should return 200 when service name has max allowed number of characters 63 - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/longname.go:38 @ 07/16/23 23:33:49.739 (10.222s)&#xA;&gt; Enter [AfterEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:49.739&#xA;&lt; Exit [AfterEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:33:50.184 (444ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-ssl-* should set valid proxy-ssl-secret, proxy-ssl-ciphers to HIGH:!AES" classname="nginx-ingress-controller e2e suite" status="passed" time="23.7545107">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:50.185&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:33:58.583 (8.398s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 07/16/23 23:33:58.583&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 07/16/23 23:34:02.597 (4.049s)&#xA;&gt; Enter [It] should set valid proxy-ssl-secret, proxy-ssl-ciphers to HIGH:!AES - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:94 @ 07/16/23 23:34:02.598&#xA;&lt; Exit [It] should set valid proxy-ssl-secret, proxy-ssl-ciphers to HIGH:!AES - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:94 @ 07/16/23 23:34:13.497 (10.899s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:13.497&#xA;&lt; Exit [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:13.905 (409ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] main-snippet should add value of main-snippet setting to nginx config" classname="nginx-ingress-controller e2e suite" status="passed" time="19.0534585">
              <system-err>&gt; Enter [BeforeEach] [Setting] main-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:13.907&#xA;&lt; Exit [BeforeEach] [Setting] main-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:22.216 (8.309s)&#xA;&gt; Enter [It] should add value of main-snippet setting to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/main_snippet.go:31 @ 07/16/23 23:34:22.216&#xA;&lt; Exit [It] should add value of main-snippet setting to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/main_snippet.go:31 @ 07/16/23 23:34:32.368 (10.187s)&#xA;&gt; Enter [AfterEach] [Setting] main-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:32.368&#xA;&lt; Exit [AfterEach] [Setting] main-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:34:32.925 (557ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) should configure HSTS policy header overriding what&#39;s set from the upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="31.8430583">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:32.927&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:34:41.551 (8.624s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 07/16/23 23:34:41.551&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 07/16/23 23:34:47.637 (6.086s)&#xA;&gt; Enter [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 07/16/23 23:34:47.637&#xA;&lt; Exit [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 07/16/23 23:34:57.01 (9.372s)&#xA;&gt; Enter [It] overriding what&#39;s set from the upstream - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:166 @ 07/16/23 23:34:57.01&#xA;&lt; Exit [It] overriding what&#39;s set from the upstream - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:166 @ 07/16/23 23:35:04.275 (7.3s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:04.275&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:04.736 (461ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should disable modsecurity" classname="nginx-ingress-controller e2e suite" status="passed" time="24.4810909">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:04.742&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:14.56 (9.817s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:35:14.56&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:35:18.617 (4.057s)&#xA;&gt; Enter [It] should disable modsecurity - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:74 @ 07/16/23 23:35:18.617&#xA;&lt; Exit [It] should disable modsecurity - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:74 @ 07/16/23 23:35:28.832 (10.214s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:28.832&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:29.223 (392ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should set valid auth-tls-secret, sslVerify to off, and sslVerifyDepth to 2" classname="nginx-ingress-controller e2e suite" status="passed" time="24.8904639">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:29.225&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:38.691 (9.501s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 07/16/23 23:35:38.692&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 07/16/23 23:35:42.8 (4.108s)&#xA;&gt; Enter [It] should set valid auth-tls-secret, sslVerify to off, and sslVerifyDepth to 2 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:84 @ 07/16/23 23:35:42.8&#xA;&lt; Exit [It] should set valid auth-tls-secret, sslVerify to off, and sslVerifyDepth to 2 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:84 @ 07/16/23 23:35:53.62 (10.82s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:53.62&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:35:54.081 (461ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should change cookie name on ingress definition change" classname="nginx-ingress-controller e2e suite" status="passed" time="31.6513169">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:35:54.084&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:03.891 (9.841s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:36:03.891&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:36:09.979 (6.088s)&#xA;&gt; Enter [It] should change cookie name on ingress definition change - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:64 @ 07/16/23 23:36:09.979&#xA;&lt; Exit [It] should change cookie name on ingress definition change - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:64 @ 07/16/23 23:36:25.241 (15.261s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:25.241&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:25.701 (460ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should enable cors" classname="nginx-ingress-controller e2e suite" status="passed" time="22.7059893">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:25.703&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:33.605 (7.936s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:36:33.605&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:36:37.682 (4.077s)&#xA;&gt; Enter [It] should enable cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:35 @ 07/16/23 23:36:37.682&#xA;&lt; Exit [It] should enable cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:35 @ 07/16/23 23:36:47.901 (10.219s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:47.901&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:36:48.375 (474ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-ssl-* should set valid proxy-ssl-secret, proxy-ssl-protocols" classname="nginx-ingress-controller e2e suite" status="passed" time="26.3214044">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:48.376&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:36:56.928 (8.552s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 07/16/23 23:36:56.928&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 07/16/23 23:37:03.013 (6.119s)&#xA;&gt; Enter [It] should set valid proxy-ssl-secret, proxy-ssl-protocols - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:122 @ 07/16/23 23:37:03.013&#xA;&lt; Exit [It] should set valid proxy-ssl-secret, proxy-ssl-protocols - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:122 @ 07/16/23 23:37:14.194 (11.181s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:14.194&#xA;&lt; Exit [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:14.663 (469ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should set client_body_buffer_size to 1K" classname="nginx-ingress-controller e2e suite" status="passed" time="23.0879898">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:14.665&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:22.951 (8.286s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 07/16/23 23:37:22.951&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 07/16/23 23:37:27.087 (4.136s)&#xA;&gt; Enter [It] should set client_body_buffer_size to 1K - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:57 @ 07/16/23 23:37:27.087&#xA;&lt; Exit [It] should set client_body_buffer_size to 1K - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:57 @ 07/16/23 23:37:37.286 (10.233s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:37.286&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:37:37.719 (433ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity with snippet" classname="nginx-ingress-controller e2e suite" status="passed" time="24.5298388">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:37.721&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:37:47.137 (9.416s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:37:47.137&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:37:51.362 (4.225s)&#xA;&gt; Enter [It] should enable modsecurity with snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:91 @ 07/16/23 23:37:51.362&#xA;&lt; Exit [It] should enable modsecurity with snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:91 @ 07/16/23 23:38:01.535 (10.206s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:01.535&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:02.216 (682ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-connect-timeout should not set invalid proxy timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="29.3663941">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:02.219&#xA;&lt; Exit [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:09.728 (7.509s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:32 @ 07/16/23 23:38:09.729&#xA;&lt; Exit [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:32 @ 07/16/23 23:38:13.797 (4.069s)&#xA;&gt; Enter [It] should not set invalid proxy timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:52 @ 07/16/23 23:38:13.797&#xA;&lt; Exit [It] should not set invalid proxy timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:52 @ 07/16/23 23:38:31.175 (17.412s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:31.175&#xA;&lt; Exit [AfterEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:38:31.552 (376ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should not create additional upstream block when auth-keepalive is set with HTTP/2" classname="nginx-ingress-controller e2e suite" status="passed" time="36.6293011">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:31.553&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:38:40.919 (9.366s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:38:40.919&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:38:46.993 (6.074s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:38:46.993&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:39:03.307 (16.348s)&#xA;&gt; Enter [It] should not create additional upstream block when auth-keepalive is set with HTTP/2 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:609 @ 07/16/23 23:39:03.307&#xA;&lt; Exit [It] should not create additional upstream block when auth-keepalive is set with HTTP/2 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:609 @ 07/16/23 23:39:07.472 (4.165s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:07.472&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:08.148 (676ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set the path to /something on the generated cookie" classname="nginx-ingress-controller e2e suite" status="passed" time="25.1126173">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:08.153&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:16.57 (8.417s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:39:16.57&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:39:22.657 (6.087s)&#xA;&gt; Enter [It] should set the path to /something on the generated cookie - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:99 @ 07/16/23 23:39:22.657&#xA;&lt; Exit [It] should set the path to /something on the generated cookie - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:99 @ 07/16/23 23:39:32.838 (10.215s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:32.838&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:33.231 (394ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) ports or X-Forwarded-Host check during HTTP tp HTTPS redirection should not use ports or X-Forwarded-Host during the HTTP to HTTPS redirection" classname="nginx-ingress-controller e2e suite" status="passed" time="30.2725692">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:33.235&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:40.596 (7.361s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 07/16/23 23:39:40.596&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 07/16/23 23:39:44.718 (4.122s)&#xA;&gt; Enter [It] should not use ports or X-Forwarded-Host during the HTTP to HTTPS redirection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:205 @ 07/16/23 23:39:44.718&#xA;Jul 16 23:40:00.953: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not settings-tls&#xA;&lt; Exit [It] should not use ports or X-Forwarded-Host during the HTTP to HTTPS redirection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:205 @ 07/16/23 23:40:02.967 (18.283s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:02.967&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:03.473 (506ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] definition without host should set ingress details variables for ingresses without a host" classname="nginx-ingress-controller e2e suite" status="passed" time="25.5938495">
              <system-err>&gt; Enter [BeforeEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:03.475&#xA;&lt; Exit [BeforeEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:14.008 (10.533s)&#xA;&gt; Enter [It] should set ingress details variables for ingresses without a host - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/without_host.go:34 @ 07/16/23 23:40:14.008&#xA;&lt; Exit [It] should set ingress details variables for ingresses without a host - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/without_host.go:34 @ 07/16/23 23:40:28.273 (14.265s)&#xA;&gt; Enter [AfterEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:28.274&#xA;&lt; Exit [AfterEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:29.069 (795ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not allow - unmatching origin with wildcard origin (2 subdomains)" classname="nginx-ingress-controller e2e suite" status="passed" time="19.1383321">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:29.07&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:36.48 (7.444s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:40:36.48&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:40:40.607 (4.127s)&#xA;&gt; Enter [It] should not allow - unmatching origin with wildcard origin (2 subdomains) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:468 @ 07/16/23 23:40:40.607&#xA;&lt; Exit [It] should not allow - unmatching origin with wildcard origin (2 subdomains) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:468 @ 07/16/23 23:40:47.651 (7.043s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:47.651&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:48.174 (524ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Dynamic $proxy_host should exist a proxy_host using the upstream-vhost annotation value" classname="nginx-ingress-controller e2e suite" status="passed" time="23.4757701">
              <system-err>&gt; Enter [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:48.176&#xA;&lt; Exit [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:56.86 (8.684s)&#xA;&gt; Enter [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:32 @ 07/16/23 23:40:56.86&#xA;&lt; Exit [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:32 @ 07/16/23 23:41:00.951 (4.125s)&#xA;&gt; Enter [It] should exist a proxy_host using the upstream-vhost annotation value - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:57 @ 07/16/23 23:41:00.951&#xA;&lt; Exit [It] should exist a proxy_host using the upstream-vhost annotation value - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:57 @ 07/16/23 23:41:11.126 (10.175s)&#xA;&gt; Enter [AfterEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:11.126&#xA;&lt; Exit [AfterEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:11.617 (491ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] connection-proxy-header set connection header to keep-alive" classname="nginx-ingress-controller e2e suite" status="passed" time="21.2601189">
              <system-err>&gt; Enter [BeforeEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:41:11.624&#xA;&lt; Exit [BeforeEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:41:20.141 (8.516s)&#xA;&gt; Enter [BeforeEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/connection.go:32 @ 07/16/23 23:41:20.141&#xA;&lt; Exit [BeforeEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/connection.go:32 @ 07/16/23 23:41:22.214 (2.074s)&#xA;&gt; Enter [It] set connection header to keep-alive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/connection.go:36 @ 07/16/23 23:41:22.214&#xA;&lt; Exit [It] set connection header to keep-alive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/connection.go:36 @ 07/16/23 23:41:32.382 (10.202s)&#xA;&gt; Enter [AfterEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:32.382&#xA;&lt; Exit [AfterEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:32.85 (468ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] from-to-www-redirect should redirect from www HTTPS to HTTPS" classname="nginx-ingress-controller e2e suite" status="passed" time="27.3605633">
              <system-err>&gt; Enter [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:41:32.854&#xA;&lt; Exit [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:41:40.227 (7.374s)&#xA;&gt; Enter [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:34 @ 07/16/23 23:41:40.227&#xA;&lt; Exit [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:34 @ 07/16/23 23:41:44.297 (4.07s)&#xA;&gt; Enter [It] should redirect from www HTTPS to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:64 @ 07/16/23 23:41:44.297&#xA;STEP: setting up server for redirect from www - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:65 @ 07/16/23 23:41:44.297&#xA;STEP: sending request to www should redirect to domain - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:91 @ 07/16/23 23:41:59.768&#xA;STEP: sending request to domain should not redirect to www - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:103 @ 07/16/23 23:41:59.784&#xA;&lt; Exit [It] should redirect from www HTTPS to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:64 @ 07/16/23 23:41:59.805 (15.508s)&#xA;&gt; Enter [AfterEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:59.805&#xA;&lt; Exit [AfterEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:42:00.18 (409ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow - single origin for multiple cors values" classname="nginx-ingress-controller e2e suite" status="passed" time="40.8055021">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:07:34.241&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:07:48.51 (14.268s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:07:48.51&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:08:06.784 (18.308s)&#xA;&gt; Enter [It] should allow - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:169 @ 07/16/23 23:08:06.784&#xA;&lt; Exit [It] should allow - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:169 @ 07/16/23 23:08:13.874 (7.09s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:13.874&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:15.012 (1.138s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should turn off proxy-request-buffering" classname="nginx-ingress-controller e2e suite" status="passed" time="31.5103211">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:15.026&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:31.711 (16.684s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:08:31.711&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:08:35.749 (4.073s)&#xA;&gt; Enter [It] should turn off proxy-request-buffering - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:179 @ 07/16/23 23:08:35.749&#xA;&lt; Exit [It] should turn off proxy-request-buffering - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:179 @ 07/16/23 23:08:45.914 (10.164s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:45.914&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:08:46.502 (588ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure Opentelemetry should exists opentelemetry_operation_name directive when is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="35.2157044">
              <system-err>&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:46.507&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:08:58.795 (12.288s)&#xA;&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 07/16/23 23:08:58.795&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 07/16/23 23:09:02.852 (4.092s)&#xA;&gt; Enter [It] should exists opentelemetry_operation_name directive when is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:104 @ 07/16/23 23:09:02.852&#xA;&lt; Exit [It] should exists opentelemetry_operation_name directive when is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:104 @ 07/16/23 23:09:20.835 (17.983s)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:20.835&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:21.688 (853ms)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 07/16/23 23:09:21.688&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 07/16/23 23:09:21.688 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) should configure HSTS policy header setting includeSubDomains parameter" classname="nginx-ingress-controller e2e suite" status="passed" time="33.9353808">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:21.694&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:29.368 (7.675s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 07/16/23 23:09:29.369&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 07/16/23 23:09:33.396 (4.061s)&#xA;&gt; Enter [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 07/16/23 23:09:33.396&#xA;Jul 16 23:09:42.839: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not settings-tls&#xA;&lt; Exit [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 07/16/23 23:09:44.841 (11.445s)&#xA;&gt; Enter [It] setting includeSubDomains parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:127 @ 07/16/23 23:09:44.841&#xA;&lt; Exit [It] setting includeSubDomains parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:127 @ 07/16/23 23:09:55.117 (10.276s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:55.117&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:09:55.595 (478ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication with caching is configured should deny login for different servers" classname="nginx-ingress-controller e2e suite" status="passed" time="141.4069732">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:09:55.621&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:10:03.902 (8.315s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:10:03.902&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:10:07.984 (4.082s)&#xA;&gt; Enter [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 07/16/23 23:10:07.984&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 07/16/23 23:10:23.092&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 07/16/23 23:10:33.264&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 07/16/23 23:10:43.654&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 07/16/23 23:10:53.881&#xA;&lt; Exit [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 07/16/23 23:11:09.227 (1m1.333s)&#xA;&gt; Enter [It] should deny login for different servers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:820 @ 07/16/23 23:11:09.227&#xA;STEP: logging into server thisHost /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:821 @ 07/16/23 23:11:09.227&#xA;STEP: receiving an internal server error without cache on thisHost location /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:833 @ 07/16/23 23:11:16.27&#xA;&lt; Exit [It] should deny login for different servers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:820 @ 07/16/23 23:12:16.192 (1m7.058s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:16.192&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:16.811 (619ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the upstream keep alive should set the request count to upstream server through one keep alive connection" classname="nginx-ingress-controller e2e suite" status="passed" time="30.936815">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:16.817&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:25.674 (8.857s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 07/16/23 23:12:25.674&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 07/16/23 23:12:36.81 (11.17s)&#xA;&gt; Enter [It] should set the request count to upstream server through one keep alive connection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:86 @ 07/16/23 23:12:36.81&#xA;&lt; Exit [It] should set the request count to upstream server through one keep alive connection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:86 @ 07/16/23 23:12:47.088 (10.278s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:47.088&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:12:47.718 (631ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the keep alive should set keepalive_timeout" classname="nginx-ingress-controller e2e suite" status="passed" time="31.1564128">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:47.72&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:12:56.863 (9.143s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 07/16/23 23:12:56.863&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 07/16/23 23:13:07.932 (11.103s)&#xA;&gt; Enter [It] should set keepalive_timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:40 @ 07/16/23 23:13:07.932&#xA;&lt; Exit [It] should set keepalive_timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:40 @ 07/16/23 23:13:18.203 (10.272s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:18.203&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:18.842 (639ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] enable-multi-accept should be enabled when set to true" classname="nginx-ingress-controller e2e suite" status="passed" time="20.7630135">
              <system-err>&gt; Enter [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:18.844&#xA;&lt; Exit [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:28.621 (9.777s)&#xA;&gt; Enter [It] should be enabled when set to true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:39 @ 07/16/23 23:13:28.621&#xA;&lt; Exit [It] should be enabled when set to true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:39 @ 07/16/23 23:13:39.052 (10.465s)&#xA;&gt; Enter [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:39.052&#xA;&lt; Exit [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:13:39.573 (521ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should serve Ingress when class is updated between annotation and ingressClassName" classname="nginx-ingress-controller e2e suite" status="passed" time="38.8464615">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:39.576&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:13:47.884 (8.308s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:13:47.884&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 07/16/23 23:13:51.979 (4.095s)&#xA;&gt; Enter [It] should serve Ingress when class is updated between annotation and ingressClassName - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:323 @ 07/16/23 23:13:51.979&#xA;&lt; Exit [It] should serve Ingress when class is updated between annotation and ingressClassName - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:323 @ 07/16/23 23:14:17.414 (25.47s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:17.414&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:18.388 (973ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canary is created should response with a 200 status from the mainline upstream when requests are made to the mainline ingress" classname="nginx-ingress-controller e2e suite" status="passed" time="39.6534635">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:18.39&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:27.699 (9.309s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:14:27.699&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:14:34.284 (6.619s)&#xA;&gt; Enter [It] should response with a 200 status from the mainline upstream when requests are made to the mainline ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:48 @ 07/16/23 23:14:34.284&#xA;&lt; Exit [It] should response with a 200 status from the mainline upstream when requests are made to the mainline ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:48 @ 07/16/23 23:14:57.094 (22.81s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:57.094&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:14:58.009 (914ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] rewrite-target use-regex enable-rewrite-log should use correct longest path match" classname="nginx-ingress-controller e2e suite" status="passed" time="38.056706">
              <system-err>&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:14:58.012&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:08.991 (11.014s)&#xA;&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 07/16/23 23:15:08.991&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 07/16/23 23:15:15.072 (6.08s)&#xA;&gt; Enter [It] should use correct longest path match - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:66 @ 07/16/23 23:15:15.072&#xA;STEP: creating a regular ingress definition - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:69 @ 07/16/23 23:15:15.072&#xA;STEP: making a request to the non-rewritten location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:78 @ 07/16/23 23:15:25.351&#xA;STEP: creating an ingress definition with the rewrite-target annotation set on the &#34;/&#34; location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:88 @ 07/16/23 23:15:25.361&#xA;STEP: making a second request to the non-rewritten location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:102 @ 07/16/23 23:15:35.543&#xA;&lt; Exit [It] should use correct longest path match - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:66 @ 07/16/23 23:15:35.551 (20.514s)&#xA;&gt; Enter [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:35.551&#xA;&lt; Exit [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:15:36 (449ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] x-forwarded-prefix should set the X-Forwarded-Prefix to the annotation value" classname="nginx-ingress-controller e2e suite" status="passed" time="25.22843">
              <system-err>&gt; Enter [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:36.002&#xA;&lt; Exit [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:15:44.55 (8.548s)&#xA;&gt; Enter [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:31 @ 07/16/23 23:15:44.55&#xA;&lt; Exit [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:31 @ 07/16/23 23:15:50.604 (6.055s)&#xA;&gt; Enter [It] should set the X-Forwarded-Prefix to the annotation value - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:35 @ 07/16/23 23:15:50.604&#xA;&lt; Exit [It] should set the X-Forwarded-Prefix to the annotation value - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:35 @ 07/16/23 23:16:00.832 (10.227s)&#xA;&gt; Enter [AfterEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:00.832&#xA;&lt; Exit [AfterEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:01.23 (398ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [SSL] secret update should not appear references to secret updates not used in ingress rules" classname="nginx-ingress-controller e2e suite" status="passed" time="36.6225179">
              <system-err>&gt; Enter [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:01.232&#xA;&lt; Exit [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:09.619 (8.421s)&#xA;&gt; Enter [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:36 @ 07/16/23 23:16:09.619&#xA;&lt; Exit [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:36 @ 07/16/23 23:16:13.742 (4.123s)&#xA;&gt; Enter [It] should not appear references to secret updates not used in ingress rules - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:40 @ 07/16/23 23:16:13.742&#xA;&lt; Exit [It] should not appear references to secret updates not used in ingress rules - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:40 @ 07/16/23 23:16:37.172 (23.465s)&#xA;&gt; Enter [AfterEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:37.172&#xA;&lt; Exit [AfterEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:16:37.786 (614ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should set snippet when global external auth is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="58.0479243">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:37.787&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:16:46.283 (8.495s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:16:46.283&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:16:54.442 (8.159s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:16:54.442&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 07/16/23 23:16:54.442&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 07/16/23 23:17:04.664&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 07/16/23 23:17:15.032&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:17:25.212 (30.804s)&#xA;&gt; Enter [It] should set snippet when global external auth is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:250 @ 07/16/23 23:17:25.212&#xA;STEP: Adding a global-auth-snippet to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:254 @ 07/16/23 23:17:25.212&#xA;&lt; Exit [It] should set snippet when global external auth is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:250 @ 07/16/23 23:17:35.375 (10.198s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:35.375&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:35.767 (391ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not allow - portless origin with wildcard origin" classname="nginx-ingress-controller e2e suite" status="passed" time="20.021794">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:35.769&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:44.223 (8.454s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:17:44.223&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 07/16/23 23:17:48.3 (4.077s)&#xA;&gt; Enter [It] should not allow - portless origin with wildcard origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:515 @ 07/16/23 23:17:48.3&#xA;&lt; Exit [It] should not allow - portless origin with wildcard origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:515 @ 07/16/23 23:17:55.341 (7.041s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:55.341&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:17:55.791 (449ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name does not set the path to / on the generated cookie if there&#39;s more than one rule referring to the same backend" classname="nginx-ingress-controller e2e suite" status="passed" time="23.1537606">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:17:55.792&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:04.137 (8.379s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:18:04.137&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 07/16/23 23:18:08.248 (4.112s)&#xA;&gt; Enter [It] does not set the path to / on the generated cookie if there&#39;s more than one rule referring to the same backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:121 @ 07/16/23 23:18:08.249&#xA;&lt; Exit [It] does not set the path to / on the generated cookie if there&#39;s more than one rule referring to the same backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:121 @ 07/16/23 23:18:18.49 (10.241s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:18.49&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:18.911 (422ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] satisfy should allow multiple auth with satisfy any" classname="nginx-ingress-controller e2e suite" status="passed" time="29.3125471">
              <system-err>&gt; Enter [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:18.912&#xA;&lt; Exit [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:27.287 (8.374s)&#xA;&gt; Enter [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:38 @ 07/16/23 23:18:27.287&#xA;&lt; Exit [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:38 @ 07/16/23 23:18:31.349 (4.062s)&#xA;&gt; Enter [It] should allow multiple auth with satisfy any - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:84 @ 07/16/23 23:18:31.349&#xA;&lt; Exit [It] should allow multiple auth with satisfy any - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:84 @ 07/16/23 23:18:47.764 (16.45s)&#xA;&gt; Enter [AfterEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:47.764&#xA;&lt; Exit [AfterEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:18:48.191 (427ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] Bad annotation values [BAD_ANNOTATIONS] should drop an ingress if there is a custom blocklist config in place and allow others to pass" classname="nginx-ingress-controller e2e suite" status="passed" time="38.4002606">
              <system-err>&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:48.193&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:18:56.623 (8.43s)&#xA;&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 07/16/23 23:18:56.623&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 07/16/23 23:19:00.738 (4.115s)&#xA;&gt; Enter [It] [BAD_ANNOTATIONS] should drop an ingress if there is a custom blocklist config in place and allow others to pass - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:133 @ 07/16/23 23:19:00.738&#xA;&lt; Exit [It] [BAD_ANNOTATIONS] should drop an ingress if there is a custom blocklist config in place and allow others to pass - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:133 @ 07/16/23 23:19:26.161 (25.457s)&#xA;&gt; Enter [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:26.161&#xA;&lt; Exit [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:26.559 (398ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Dynamic $proxy_host should exist a proxy_host" classname="nginx-ingress-controller e2e suite" status="passed" time="23.2717891">
              <system-err>&gt; Enter [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:26.564&#xA;&lt; Exit [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:35.081 (8.55s)&#xA;&gt; Enter [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:32 @ 07/16/23 23:19:35.081&#xA;&lt; Exit [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:32 @ 07/16/23 23:19:39.133 (4.052s)&#xA;&gt; Enter [It] should exist a proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:36 @ 07/16/23 23:19:39.133&#xA;&lt; Exit [It] should exist a proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:36 @ 07/16/23 23:19:49.376 (10.244s)&#xA;&gt; Enter [AfterEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:49.376&#xA;&lt; Exit [AfterEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:19:49.802 (425ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [SSL] [Flag] default-ssl-certificate uses default ssl certificate for catch-all ingress" classname="nginx-ingress-controller e2e suite" status="passed" time="36.4974907">
              <system-err>&gt; Enter [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:49.804&#xA;&lt; Exit [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:19:58.14 (8.336s)&#xA;&gt; Enter [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:40 @ 07/16/23 23:19:58.14&#xA;&lt; Exit [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:40 @ 07/16/23 23:20:13.506 (15.401s)&#xA;&gt; Enter [It] uses default ssl certificate for catch-all ingress - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:64 @ 07/16/23 23:20:13.506&#xA;STEP: making sure new ingress is deployed - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:68 @ 07/16/23 23:20:20.544&#xA;STEP: making sure new ingress is responding - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:74 @ 07/16/23 23:20:23.704&#xA;STEP: making sure the configured default ssl certificate is being used - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:76 @ 07/16/23 23:20:23.704&#xA;&lt; Exit [It] uses default ssl certificate for catch-all ingress - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:64 @ 07/16/23 23:20:25.721 (12.215s)&#xA;&gt; Enter [AfterEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:25.721&#xA;&lt; Exit [AfterEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:26.267 (546ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* with invalid auth-url should deny whole location should add error to the config" classname="nginx-ingress-controller e2e suite" status="passed" time="26.3440155">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:26.269&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:34.686 (8.452s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:20:34.686&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:20:38.757 (4.07s)&#xA;&gt; Enter [BeforeEach] with invalid auth-url should deny whole location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:866 @ 07/16/23 23:20:38.757&#xA;&lt; Exit [BeforeEach] with invalid auth-url should deny whole location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:866 @ 07/16/23 23:20:48.932 (10.175s)&#xA;&gt; Enter [It] should add error to the config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:887 @ 07/16/23 23:20:48.932&#xA;&lt; Exit [It] should add error to the config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:887 @ 07/16/23 23:20:52.115 (3.183s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:52.115&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:20:52.579 (463ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 401 when authentication is configured and Authorization header is sent with invalid credentials" classname="nginx-ingress-controller e2e suite" status="passed" time="24.1174672">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:20:52.58&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:00.264 (7.684s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:21:00.264&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:21:04.298 (4.069s)&#xA;&gt; Enter [It] should return status code 401 when authentication is configured and Authorization header is sent with invalid credentials - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:116 @ 07/16/23 23:21:04.298&#xA;&lt; Exit [It] should return status code 401 when authentication is configured and Authorization header is sent with invalid credentials - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:116 @ 07/16/23 23:21:15.98 (11.682s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:15.98&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:16.663 (683ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 401 and cors headers when authentication and cors is configured but Authorization header is not configured" classname="nginx-ingress-controller e2e suite" status="passed" time="26.1847335">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:16.666&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:26.922 (10.256s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:21:26.922&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:21:30.978 (4.056s)&#xA;&gt; Enter [It] should return status code 401 and cors headers when authentication and cors is configured but Authorization header is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:144 @ 07/16/23 23:21:30.978&#xA;&lt; Exit [It] should return status code 401 and cors headers when authentication and cors is configured but Authorization header is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:144 @ 07/16/23 23:21:42.285 (11.341s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:42.285&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:21:42.816 (531ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) should configure HSTS policy header setting preload parameter" classname="nginx-ingress-controller e2e suite" status="passed" time="34.6399454">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:42.818&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:21:51.43 (8.612s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 07/16/23 23:21:51.43&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 07/16/23 23:21:55.497 (4.067s)&#xA;&gt; Enter [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 07/16/23 23:21:55.497&#xA;Jul 16 23:22:04.729: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not settings-tls&#xA;&lt; Exit [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 07/16/23 23:22:06.734 (11.271s)&#xA;&gt; Enter [It] setting preload parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:146 @ 07/16/23 23:22:06.734&#xA;&lt; Exit [It] setting preload parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:146 @ 07/16/23 23:22:16.936 (10.203s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:16.937&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:22:17.423 (487ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url cookie set by external authentication server user does not retain cookie if upstream returns error status code" classname="nginx-ingress-controller e2e suite" status="passed" time="45.3711967">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:17.424&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:22:25.824 (8.4s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:22:25.824&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:22:33.95 (8.16s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 07/16/23 23:22:33.95&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 07/16/23 23:23:02.307 (28.392s)&#xA;&gt; Enter [It] user does not retain cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:337 @ 07/16/23 23:23:02.308&#xA;&lt; Exit [It] user does not retain cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:337 @ 07/16/23 23:23:02.317 (10ms)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:02.317&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:02.727 (409ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* canary affinity behavior always routes traffic to canary if first request was affinitized to canary (default behavior)" classname="nginx-ingress-controller e2e suite" status="passed" time="40.7051869">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:02.729&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:11.096 (8.368s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:23:11.097&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 07/16/23 23:23:17.255 (6.159s)&#xA;&gt; Enter [It] always routes traffic to canary if first request was affinitized to canary (default behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:943 @ 07/16/23 23:23:17.255&#xA;&lt; Exit [It] always routes traffic to canary if first request was affinitized to canary (default behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:943 @ 07/16/23 23:23:42.874 (25.653s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:42.874&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:23:43.4 (525ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should return status code 200 when request whitelisted (via ingress annotation) service and 401 when request protected service" classname="nginx-ingress-controller e2e suite" status="passed" time="52.2325148">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:43.401&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:23:52.034 (8.633s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:23:52.034&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 07/16/23 23:24:00.279 (8.245s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:24:00.279&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 07/16/23 23:24:00.279&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 07/16/23 23:24:10.446&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 07/16/23 23:24:20.663&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 07/16/23 23:24:30.894 (30.65s)&#xA;&gt; Enter [It] should return status code 200 when request whitelisted (via ingress annotation) service and 401 when request protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:126 @ 07/16/23 23:24:30.894&#xA;STEP: Adding an ingress rule for /bar with annotation enable-global-auth = false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:128 @ 07/16/23 23:24:30.894&#xA;STEP: Sending a request to protected service /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:140 @ 07/16/23 23:24:35.071&#xA;STEP: Sending a request to whitelisted service /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:147 @ 07/16/23 23:24:35.079&#xA;&lt; Exit [It] should return status code 200 when request whitelisted (via ingress annotation) service and 401 when request protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:126 @ 07/16/23 23:24:35.086 (4.226s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:35.086&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:24:35.565 (479ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] annotation-global-rate-limit generates correct configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="47.7139774">
              <system-err>&gt; Enter [BeforeEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:35.566&#xA;&lt; Exit [BeforeEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:24:44.981 (9.415s)&#xA;&gt; Enter [BeforeEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/globalratelimit.go:34 @ 07/16/23 23:24:44.981&#xA;&lt; Exit [BeforeEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/globalratelimit.go:34 @ 07/16/23 23:24:49.116 (4.135s)&#xA;&gt; Enter [It] generates correct configuration - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/globalratelimit.go:38 @ 07/16/23 23:24:49.116&#xA;STEP: regenerating the correct configuration after update - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/globalratelimit.go:65 @ 07/16/23 23:25:11.373&#xA;&lt; Exit [It] generates correct configuration - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/globalratelimit.go:38 @ 07/16/23 23:25:22.684 (33.602s)&#xA;&gt; Enter [AfterEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:22.684&#xA;&lt; Exit [AfterEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:25:23.246 (562ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] brotli should only compress responses that meet the `brotli-min-length` condition" classname="nginx-ingress-controller e2e suite" status="passed" time="44.3218287">
              <system-err>&gt; Enter [BeforeEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:23.247&#xA;&lt; Exit [BeforeEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:25:31.61 (8.398s)&#xA;&gt; Enter [BeforeEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/settings/brotli.go:35 @ 07/16/23 23:25:31.61&#xA;&lt; Exit [BeforeEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/settings/brotli.go:35 @ 07/16/23 23:25:35.714 (4.104s)&#xA;&gt; Enter [It] should only compress responses that meet the `brotli-min-length` condition - /go/src/k8s.io/ingress-nginx/test/e2e/settings/brotli.go:39 @ 07/16/23 23:25:35.715&#xA;&lt; Exit [It] should only compress responses that meet the `brotli-min-length` condition - /go/src/k8s.io/ingress-nginx/test/e2e/settings/brotli.go:39 @ 07/16/23 23:26:07.011 (31.33s)&#xA;&gt; Enter [AfterEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:07.011&#xA;&lt; Exit [AfterEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:07.5 (489ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] preserve-trailing-slash should allow preservation of trailing slashes" classname="nginx-ingress-controller e2e suite" status="passed" time="20.446374">
              <system-err>&gt; Enter [BeforeEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:07.503&#xA;&lt; Exit [BeforeEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:16.195 (8.692s)&#xA;&gt; Enter [BeforeEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/preservetrailingslash.go:30 @ 07/16/23 23:26:16.195&#xA;&lt; Exit [BeforeEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/preservetrailingslash.go:30 @ 07/16/23 23:26:20.306 (4.111s)&#xA;&gt; Enter [It] should allow preservation of trailing slashes - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/preservetrailingslash.go:34 @ 07/16/23 23:26:20.306&#xA;&lt; Exit [It] should allow preservation of trailing slashes - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/preservetrailingslash.go:34 @ 07/16/23 23:26:27.349 (7.044s)&#xA;&gt; Enter [AfterEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:27.349&#xA;&lt; Exit [AfterEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:26:27.949 (600ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity with snippet and block requests" classname="nginx-ingress-controller e2e suite" status="passed" time="35.6442115">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:27.952&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:26:36.662 (8.744s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:26:36.662&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:26:40.824 (4.163s)&#xA;&gt; Enter [It] should enable modsecurity with snippet and block requests - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:153 @ 07/16/23 23:26:40.824&#xA;&lt; Exit [It] should enable modsecurity with snippet and block requests - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:153 @ 07/16/23 23:27:03.024 (22.234s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:03.024&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:03.527 (504ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should redirect to signin url when not signed in" classname="nginx-ingress-controller e2e suite" status="passed" time="27.4725007">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:03.528&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:11.896 (8.368s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:27:11.896&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 07/16/23 23:27:15.977 (4.081s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:27:15.977&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 07/16/23 23:27:30.444 (14.468s)&#xA;&gt; Enter [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:494 @ 07/16/23 23:27:30.445&#xA;&lt; Exit [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:494 @ 07/16/23 23:27:30.455 (11ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:30.455&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:31.001 (545ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should turn on proxy-buffering" classname="nginx-ingress-controller e2e suite" status="passed" time="23.203952">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:31.003&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:39.402 (8.434s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:27:39.403&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:27:43.461 (4.058s)&#xA;&gt; Enter [It] should turn on proxy-buffering - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:157 @ 07/16/23 23:27:43.461&#xA;&lt; Exit [It] should turn on proxy-buffering - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:157 @ 07/16/23 23:27:53.686 (10.226s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:53.687&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:27:54.173 (486ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] rewrite-target use-regex enable-rewrite-log should use ~* location modifier if regex annotation is present" classname="nginx-ingress-controller e2e suite" status="passed" time="33.6183721">
              <system-err>&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:27:54.174&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:02.854 (8.714s)&#xA;&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 07/16/23 23:28:02.854&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 07/16/23 23:28:06.916 (4.062s)&#xA;&gt; Enter [It] should use ~* location modifier if regex annotation is present - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:111 @ 07/16/23 23:28:06.916&#xA;STEP: creating a regular ingress definition - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:114 @ 07/16/23 23:28:06.917&#xA;STEP: creating an ingress definition with the use-regex amd rewrite-target annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:123 @ 07/16/23 23:28:17.092&#xA;STEP: ensuring &#39;/foo&#39; matches &#39;~* ^/foo&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:137 @ 07/16/23 23:28:27.312&#xA;STEP: ensuring &#39;/foo/bar&#39; matches &#39;~* ^/foo.+&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:147 @ 07/16/23 23:28:27.32&#xA;&lt; Exit [It] should use ~* location modifier if regex annotation is present - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:111 @ 07/16/23 23:28:27.329 (20.413s)&#xA;&gt; Enter [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:27.329&#xA;&lt; Exit [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:27.758 (429ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [TCP] tcp-services should expose an ExternalName TCP service" classname="nginx-ingress-controller e2e suite" status="passed" time="11.4738193">
              <system-err>&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:27.76&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:35.027 (7.302s)&#xA;&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 07/16/23 23:28:35.027&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 07/16/23 23:28:35.031 (4ms)&#xA;&gt; Enter [It] should expose an ExternalName TCP service - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:80 @ 07/16/23 23:28:35.031&#xA;&lt; Exit [It] should expose an ExternalName TCP service - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:80 @ 07/16/23 23:28:38.754 (3.722s)&#xA;&gt; Enter [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:38.754&#xA;&lt; Exit [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:28:39.199 (446ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should disable modsecurity using &#39;modsecurity off;&#39;" classname="nginx-ingress-controller e2e suite" status="passed" time="29.9578012">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:39.205&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:28:47.511 (8.307s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:28:47.511&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 07/16/23 23:28:51.575 (4.064s)&#xA;&gt; Enter [It] should disable modsecurity using &#39;modsecurity off;&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:132 @ 07/16/23 23:28:51.575&#xA;&lt; Exit [It] should disable modsecurity using &#39;modsecurity off;&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:132 @ 07/16/23 23:29:08.745 (17.204s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:08.745&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:29:09.129 (383ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-proxy-protocol should enable PROXY Protocol for TCP" classname="nginx-ingress-controller e2e suite" status="passed" time="635.6501243">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:09.13&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:29:17.772 (8.641s)&#xA;&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 07/16/23 23:29:17.772&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 07/16/23 23:29:28.874 (11.102s)&#xA;&gt; Enter [It] should enable PROXY Protocol for TCP - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:155 @ 07/16/23 23:29:28.874&#xA;Automatically polling progress:&#xA;  [Setting] use-proxy-protocol should enable PROXY Protocol for TCP (Spec Runtime: 3m19.498s)&#xA;    /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:155&#xA;    In [It] (Node Runtime: 2m59.754s)&#xA;      /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:155&#xA;&#xA;    Spec Goroutine&#xA;    goroutine 2683 [IO wait, 2 minutes]&#xA;      internal/poll.runtime_pollWait(0x7f5468c3dd40, 0x72)&#xA;        /usr/local/go/src/runtime/netpoll.go:306&#xA;      internal/poll.(*pollDesc).wait(0xc000c86a00?, 0xc000daf725?, 0x0)&#xA;        /usr/local/go/src/internal/poll/fd_poll_runtime.go:84&#xA;      internal/poll.(*pollDesc).waitRead(...)&#xA;        /usr/local/go/src/internal/poll/fd_poll_runtime.go:89&#xA;      internal/poll.(*FD).Read(0xc000c86a00, {0xc000daf725, 0x15b, 0x15b})&#xA;        /usr/local/go/src/internal/poll/fd_unix.go:167&#xA;      net.(*netFD).Read(0xc000c86a00, {0xc000daf725?, 0x453656?, 0x380?})&#xA;        /usr/local/go/src/net/fd_posix.go:55&#xA;      net.(*conn).Read(0xc000126120, {0xc000daf725?, 0x19913c0?, 0xc000daf500?})&#xA;        /usr/local/go/src/net/net.go:183&#xA;      io.ReadAll({0x1f62e00, 0xc000126120})&#xA;        /usr/local/go/src/io/io.go:701&#xA;    &gt; k8s.io/ingress-nginx/test/e2e/settings.glob..func38.5()&#xA;        /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:211&#xA;      github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0xa0558e, 0xc000cfc300})&#xA;        /go/src/k8s.io/ingress-nginx/.modcache/github.com/onsi/ginkgo/v2@v2.9.0/internal/node.go:463&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;        /go/src/k8s.io/ingress-nginx/.modcache/github.com/onsi/ginkgo/v2@v2.9.0/internal/suite.go:863&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).runNode&#xA;        /go/src/k8s.io/ingress-nginx/.modcache/github.com/onsi/ginkgo/v2@v2.9.0/internal/suite.go:850&#xA;&lt; Exit [It] should enable PROXY Protocol for TCP - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:155 @ 07/16/23 23:39:43.452 (10m15.338s)&#xA;&gt; Enter [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:43.452&#xA;&lt; Exit [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:39:44.02 (568ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] enable-real-ip trusts X-Forwarded-For header only when setting is true" classname="nginx-ingress-controller e2e suite" status="passed" time="35.1522824">
              <system-err>&gt; Enter [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:44.023&#xA;&lt; Exit [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:39:52.324 (8.301s)&#xA;&gt; Enter [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:35 @ 07/16/23 23:39:52.324&#xA;&lt; Exit [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:35 @ 07/16/23 23:40:01.39 (9.101s)&#xA;&gt; Enter [It] trusts X-Forwarded-For header only when setting is true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:40 @ 07/16/23 23:40:01.39&#xA;STEP: ensuring single values are parsed correctly - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:54 @ 07/16/23 23:40:18.685&#xA;&lt; Exit [It] trusts X-Forwarded-For header only when setting is true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:40 @ 07/16/23 23:40:18.693 (17.302s)&#xA;&gt; Enter [AfterEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:18.693&#xA;&lt; Exit [AfterEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:19.14 (448ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Lua] lua-shared-dicts configures lua shared dicts" classname="nginx-ingress-controller e2e suite" status="passed" time="21.2409386">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Lua] lua-shared-dicts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:19.154&#xA;&lt; Exit [BeforeEach] [Setting] [Lua] lua-shared-dicts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:27.75 (8.595s)&#xA;&gt; Enter [It] configures lua shared dicts - /go/src/k8s.io/ingress-nginx/test/e2e/settings/lua_shared_dicts.go:29 @ 07/16/23 23:40:27.75&#xA;&lt; Exit [It] configures lua shared dicts - /go/src/k8s.io/ingress-nginx/test/e2e/settings/lua_shared_dicts.go:29 @ 07/16/23 23:40:39.948 (12.232s)&#xA;&gt; Enter [AfterEach] [Setting] [Lua] lua-shared-dicts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:39.948&#xA;&lt; Exit [AfterEach] [Setting] [Lua] lua-shared-dicts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:40:40.361 (413ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-sync-events should create sync events" classname="nginx-ingress-controller e2e suite" status="passed" time="31.7558127">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:40.362&#xA;&lt; Exit [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:40:49.01 (8.647s)&#xA;&gt; Enter [It] should create sync events - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:53 @ 07/16/23 23:40:49.01&#xA;&lt; Exit [It] should create sync events - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:53 @ 07/16/23 23:41:11.382 (22.406s)&#xA;&gt; Enter [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:11.382&#xA;&lt; Exit [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:12.084 (702ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should build proxy next upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="22.3846957">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:41:12.087&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:41:19.624 (7.537s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:41:19.624&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 07/16/23 23:41:23.694 (4.07s)&#xA;&gt; Enter [It] should build proxy next upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:194 @ 07/16/23 23:41:23.694&#xA;&lt; Exit [It] should build proxy next upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:194 @ 07/16/23 23:41:33.973 (10.314s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:33.974&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:41:34.437 (464ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should include opentracing_trust_incoming_span off directive when disabled" classname="nginx-ingress-controller e2e suite" status="passed" time="30.2536481">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:41:34.439&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 07/16/23 23:41:42.983 (8.544s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:41:42.983&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 07/16/23 23:41:47.055 (4.073s)&#xA;&gt; Enter [It] should include opentracing_trust_incoming_span off directive when disabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:85 @ 07/16/23 23:41:47.055&#xA;&lt; Exit [It] should include opentracing_trust_incoming_span off directive when disabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:85 @ 07/16/23 23:42:04.248 (17.227s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:42:04.248&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 07/16/23 23:42:04.658 (410ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:42:04.658&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 07/16/23 23:42:04.658 (0s)&#xA;</system-err>
          </testcase>
      </testsuite>
  </testsuites>