<?xml version="1.0" encoding="UTF-8"?>
  <testsuites tests="427" disabled="6" errors="0" failures="0" time="15519.407450685">
      <testsuite name="nginx-ingress-controller e2e suite" package="/" tests="427" disabled="0" skipped="6" errors="0" failures="0" time="15519.407450685" timestamp="2023-04-04T18:04:19">
          <properties>
              <property name="SuiteSucceeded" value="true"></property>
              <property name="SuiteHasProgrammaticFocus" value="false"></property>
              <property name="SpecialSuiteFailureReason" value=""></property>
              <property name="SuiteLabels" value="[]"></property>
              <property name="RandomSeed" value="1680631459"></property>
              <property name="RandomizeAllSpecs" value="true"></property>
              <property name="LabelFilter" value=""></property>
              <property name="FocusStrings" value=""></property>
              <property name="SkipStrings" value="\[Memory Leak\]"></property>
              <property name="FocusFiles" value=""></property>
              <property name="SkipFiles" value=""></property>
              <property name="FailOnPending" value="false"></property>
              <property name="FailFast" value="true"></property>
              <property name="FlakeAttempts" value="2"></property>
              <property name="DryRun" value="false"></property>
              <property name="ParallelTotal" value="7"></property>
              <property name="OutputInterceptorMode" value=""></property>
          </properties>
          <testcase name="[It] [Annotations] cors-* should set cors methods to only allow POST, GET" classname="nginx-ingress-controller e2e suite" status="passed" time="155.719672151">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:04:19.256&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:40.576 (2m21.32s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:06:40.576&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:06:44.629 (4.053s)&#xA;&gt; Enter [It] should set cors methods to only allow POST, GET - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:62 @ 04/04/23 18:06:44.629&#xA;&lt; Exit [It] should set cors methods to only allow POST, GET - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:62 @ 04/04/23 18:06:54.768 (10.139s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:54.768&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:54.976 (208ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Load Balancer] round-robin should evenly distribute requests with round-robin (default algorithm)" classname="nginx-ingress-controller e2e suite" status="passed" time="146.423040301">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:54.976&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:01.906 (6.93s)&#xA;&gt; Enter [BeforeEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/round_robin.go:34 @ 04/04/23 18:07:01.906&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/round_robin.go:34 @ 04/04/23 18:07:12.967 (11.06s)&#xA;&gt; Enter [It] should evenly distribute requests with round-robin (default algorithm) - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/round_robin.go:39 @ 04/04/23 18:07:12.967&#xA;&lt; Exit [It] should evenly distribute requests with round-robin (default algorithm) - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/round_robin.go:39 @ 04/04/23 18:09:21.17 (2m8.203s)&#xA;&gt; Enter [AfterEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:21.17&#xA;&lt; Exit [AfterEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:21.399 (229ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-forwarded-headers should trust X-Forwarded headers when setting is true" classname="nginx-ingress-controller e2e suite" status="passed" time="35.389805466">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:21.4&#xA;&lt; Exit [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:28.324 (6.924s)&#xA;&gt; Enter [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:35 @ 04/04/23 18:09:28.324&#xA;&lt; Exit [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:35 @ 04/04/23 18:09:39.376 (11.052s)&#xA;&gt; Enter [It] should trust X-Forwarded headers when setting is true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:40 @ 04/04/23 18:09:39.376&#xA;STEP: ensuring single values are parsed correctly - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:54 @ 04/04/23 18:09:56.563&#xA;STEP: ensuring that first entry in X-Forwarded-Host is used as the best host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:75 @ 04/04/23 18:09:56.572&#xA;&lt; Exit [It] should trust X-Forwarded headers when setting is true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:40 @ 04/04/23 18:09:56.578 (17.202s)&#xA;&gt; Enter [AfterEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:56.578&#xA;&lt; Exit [AfterEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:56.789 (211ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] from-to-www-redirect should redirect from www HTTPS to HTTPS" classname="nginx-ingress-controller e2e suite" status="passed" time="26.419790469">
              <system-err>&gt; Enter [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:56.79&#xA;&lt; Exit [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:03.662 (6.873s)&#xA;&gt; Enter [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:34 @ 04/04/23 18:10:03.662&#xA;&lt; Exit [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:34 @ 04/04/23 18:10:07.688 (4.026s)&#xA;&gt; Enter [It] should redirect from www HTTPS to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:64 @ 04/04/23 18:10:07.688&#xA;STEP: setting up server for redirect from www - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:65 @ 04/04/23 18:10:07.688&#xA;STEP: sending request to www should redirect to domain - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:91 @ 04/04/23 18:10:22.913&#xA;STEP: sending request to domain should not redirect to www - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:103 @ 04/04/23 18:10:22.941&#xA;&lt; Exit [It] should redirect from www HTTPS to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:64 @ 04/04/23 18:10:22.969 (15.281s)&#xA;&gt; Enter [AfterEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:22.969&#xA;&lt; Exit [AfterEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:23.209 (240ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set secure in cookie with provided true annotation on http" classname="nginx-ingress-controller e2e suite" status="passed" time="22.314624867">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:23.21&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:31.083 (7.874s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:10:31.083&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:10:35.101 (4.018s)&#xA;&gt; Enter [It] should set secure in cookie with provided true annotation on http - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:412 @ 04/04/23 18:10:35.101&#xA;&lt; Exit [It] should set secure in cookie with provided true annotation on http - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:412 @ 04/04/23 18:10:45.308 (10.206s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:45.308&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:45.524 (217ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should not set cookie without domain annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="21.240386516">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:45.525&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:52.399 (6.874s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:10:52.399&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:10:56.446 (4.048s)&#xA;&gt; Enter [It] should not set cookie without domain annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:248 @ 04/04/23 18:10:56.446&#xA;&lt; Exit [It] should not set cookie without domain annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:248 @ 04/04/23 18:11:06.571 (10.124s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:06.571&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:06.765 (195ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set sticky cookie without host" classname="nginx-ingress-controller e2e suite" status="passed" time="21.40125451">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:06.765&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:13.684 (6.918s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:11:13.684&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:11:17.714 (4.03s)&#xA;&gt; Enter [It] should set sticky cookie without host - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:352 @ 04/04/23 18:11:17.714&#xA;&lt; Exit [It] should set sticky cookie without host - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:352 @ 04/04/23 18:11:27.946 (10.232s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:27.946&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:28.167 (220ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Security] request smuggling should not return body content from error_page" classname="nginx-ingress-controller e2e suite" status="passed" time="32.363293062">
              <system-err>&gt; Enter [BeforeEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:28.167&#xA;&lt; Exit [BeforeEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:36.071 (7.904s)&#xA;&gt; Enter [BeforeEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/security/request_smuggling.go:35 @ 04/04/23 18:11:36.071&#xA;&lt; Exit [BeforeEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/security/request_smuggling.go:35 @ 04/04/23 18:11:38.106 (2.035s)&#xA;&gt; Enter [It] should not return body content from error_page - /go/src/k8s.io/ingress-nginx/test/e2e/security/request_smuggling.go:39 @ 04/04/23 18:11:38.106&#xA;&lt; Exit [It] should not return body content from error_page - /go/src/k8s.io/ingress-nginx/test/e2e/security/request_smuggling.go:39 @ 04/04/23 18:12:00.307 (22.201s)&#xA;&gt; Enter [AfterEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:00.307&#xA;&lt; Exit [AfterEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:00.53 (223ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - GRPC should use grpc_pass in the configuration file" classname="nginx-ingress-controller e2e suite" status="passed" time="24.501632586">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:00.531&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:07.492 (6.961s)&#xA;&gt; Enter [It] should use grpc_pass in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:43 @ 04/04/23 18:12:07.492&#xA;&lt; Exit [It] should use grpc_pass in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:43 @ 04/04/23 18:12:24.818 (17.326s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:24.818&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:25.032 (214ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 401 when authentication is configured with invalid content and Authorization header is sent" classname="nginx-ingress-controller e2e suite" status="passed" time="21.754871768">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:25.033&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:32.425 (7.392s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:12:32.425&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:12:36.448 (4.023s)&#xA;&gt; Enter [It] should return status code 401 when authentication is configured with invalid content and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:227 @ 04/04/23 18:12:36.448&#xA;&lt; Exit [It] should return status code 401 when authentication is configured with invalid content and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:227 @ 04/04/23 18:12:46.572 (10.124s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:46.572&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:46.787 (215ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with value and pattern should route requests to the correct upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="33.025082751">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:46.788&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:54.215 (7.427s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:12:54.215&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:13:02.279 (8.064s)&#xA;&gt; Enter [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:490 @ 04/04/23 18:13:02.279&#xA;STEP: routing requests to the canary upstream when header pattern is matched - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:514 @ 04/04/23 18:13:19.503&#xA;STEP: routing requests to the mainline upstream when header failed to match header value - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:523 @ 04/04/23 18:13:19.508&#xA;&lt; Exit [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:490 @ 04/04/23 18:13:19.51 (17.231s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:19.51&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:19.813 (303ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] enable-multi-accept should be enabled by default" classname="nginx-ingress-controller e2e suite" status="passed" time="10.259806432">
              <system-err>&gt; Enter [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:19.813&#xA;&lt; Exit [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:26.704 (6.89s)&#xA;&gt; Enter [It] should be enabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:31 @ 04/04/23 18:13:26.704&#xA;&lt; Exit [It] should be enabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:31 @ 04/04/23 18:13:29.872 (3.169s)&#xA;&gt; Enter [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:29.872&#xA;&lt; Exit [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:30.073 (201ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] Bad annotation values [BAD_ANNOTATIONS] should drop an ingress if there is a custom blocklist config in place and allow others to pass" classname="nginx-ingress-controller e2e suite" status="passed" time="37.41369791">
              <system-err>&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:30.073&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:37.948 (7.874s)&#xA;&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 04/04/23 18:13:37.948&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 04/04/23 18:13:41.967 (4.019s)&#xA;&gt; Enter [It] [BAD_ANNOTATIONS] should drop an ingress if there is a custom blocklist config in place and allow others to pass - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:133 @ 04/04/23 18:13:41.967&#xA;&lt; Exit [It] [BAD_ANNOTATIONS] should drop an ingress if there is a custom blocklist config in place and allow others to pass - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:133 @ 04/04/23 18:14:07.32 (25.353s)&#xA;&gt; Enter [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:07.32&#xA;&lt; Exit [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:07.487 (167ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] disables access logging for default backend" classname="nginx-ingress-controller e2e suite" status="skipped" time="7.073309195">
              <skipped message="skipped - enable-access-log-for-default-backend"></skipped>
              <system-err>&gt; Enter [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:07.487&#xA;&lt; Exit [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:14.369 (6.882s)&#xA;&gt; Enter [It] disables access logging for default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:105 @ 04/04/23 18:14:14.369&#xA;[SKIPPED] enable-access-log-for-default-backend&#xA;In [It] at: /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:107 @ 04/04/23 18:14:14.37&#xA;&lt; Exit [It] disables access logging for default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:105 @ 04/04/23 18:14:14.37 (1ms)&#xA;&gt; Enter [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:14.37&#xA;&lt; Exit [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:14.561 (191ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by cookie respects always and never values" classname="nginx-ingress-controller e2e suite" status="passed" time="60.518220117">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:14.561&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:21.468 (6.907s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:14:21.468&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:14:29.526 (8.058s)&#xA;&gt; Enter [It] respects always and never values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:643 @ 04/04/23 18:14:29.526&#xA;STEP: routing requests to the canary upstream when cookie is set to &#39;always&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:667 @ 04/04/23 18:14:46.664&#xA;STEP: routing requests to the mainline upstream when cookie is set to &#39;never&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:678 @ 04/04/23 18:14:54.864&#xA;STEP: routing requests to the mainline upstream when cookie is set to anything else - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:689 @ 04/04/23 18:15:04.858&#xA;&lt; Exit [It] respects always and never values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:643 @ 04/04/23 18:15:14.862 (45.336s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:14.862&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:15.079 (218ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] default-backend when default backend annotation is enabled should use a custom default backend as upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="22.31198962">
              <system-err>&gt; Enter [BeforeEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:15.08&#xA;&lt; Exit [BeforeEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:22.972 (7.892s)&#xA;&gt; Enter [BeforeEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/default_backend.go:32 @ 04/04/23 18:15:22.972&#xA;&lt; Exit [BeforeEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/default_backend.go:32 @ 04/04/23 18:15:26.998 (4.026s)&#xA;&gt; Enter [It] should use a custom default backend as upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/default_backend.go:37 @ 04/04/23 18:15:26.998&#xA;&lt; Exit [It] should use a custom default backend as upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/default_backend.go:37 @ 04/04/23 18:15:37.18 (10.182s)&#xA;&gt; Enter [AfterEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:37.18&#xA;&lt; Exit [AfterEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:37.392 (212ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* canary affinity behavior always routes traffic to canary if first request was affinitized to canary (explicit sticky behavior)" classname="nginx-ingress-controller e2e suite" status="passed" time="38.759102087">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:37.392&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:44.321 (6.929s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:15:44.321&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:15:50.372 (6.051s)&#xA;&gt; Enter [It] always routes traffic to canary if first request was affinitized to canary (explicit sticky behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:1000 @ 04/04/23 18:15:50.372&#xA;&lt; Exit [It] always routes traffic to canary if first request was affinitized to canary (explicit sticky behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:1000 @ 04/04/23 18:16:15.956 (25.584s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:15.956&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:16.151 (195ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] rewrite-target use-regex enable-rewrite-log should write rewrite logs" classname="nginx-ingress-controller e2e suite" status="passed" time="26.937169082">
              <system-err>&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:16.152&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:25.575 (9.424s)&#xA;&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 04/04/23 18:16:25.576&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 04/04/23 18:16:29.621 (4.045s)&#xA;&gt; Enter [It] should write rewrite logs - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:37 @ 04/04/23 18:16:29.621&#xA;STEP: setting enable-rewrite-log annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:38 @ 04/04/23 18:16:29.621&#xA;&lt; Exit [It] should write rewrite logs - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:37 @ 04/04/23 18:16:42.864 (13.243s)&#xA;&gt; Enter [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:42.864&#xA;&lt; Exit [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:43.089 (224ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should set sslClientCertificate, sslVerifyClient and sslVerifyDepth with auth-tls-secret" classname="nginx-ingress-controller e2e suite" status="passed" time="26.69218604">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:43.089&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:50.483 (7.394s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 04/04/23 18:16:50.483&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 04/04/23 18:16:54.502 (4.019s)&#xA;&gt; Enter [It] should set sslClientCertificate, sslVerifyClient and sslVerifyDepth with auth-tls-secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:36 @ 04/04/23 18:16:54.502&#xA;&lt; Exit [It] should set sslClientCertificate, sslVerifyClient and sslVerifyDepth with auth-tls-secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:36 @ 04/04/23 18:17:09.564 (15.063s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:09.564&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:09.781 (217ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should propagate the w3c header when configured with jaeger" classname="nginx-ingress-controller e2e suite" status="passed" time="41.394943239">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:09.782&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:16.68 (6.899s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:17:16.68&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:17:20.71 (4.03s)&#xA;&gt; Enter [It] should propagate the w3c header when configured with jaeger - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:197 @ 04/04/23 18:17:20.71&#xA;&lt; Exit [It] should propagate the w3c header when configured with jaeger - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:197 @ 04/04/23 18:17:50.976 (30.266s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:50.976&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:51.176 (200ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:17:51.176&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:17:51.176 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic configuration when only backends change handles endpoints only changes" classname="nginx-ingress-controller e2e suite" status="passed" time="32.627892918">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:51.177&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:59.072 (7.895s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 04/04/23 18:17:59.072&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 04/04/23 18:18:13.271 (14.199s)&#xA;&gt; Enter [It] handles endpoints only changes - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:62 @ 04/04/23 18:18:13.271&#xA;&lt; Exit [It] handles endpoints only changes - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:62 @ 04/04/23 18:18:23.585 (10.314s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:23.585&#xA;&lt; Exit [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:23.805 (219ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [SSL] secret update should not appear references to secret updates not used in ingress rules" classname="nginx-ingress-controller e2e suite" status="passed" time="34.389384875">
              <system-err>&gt; Enter [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:23.805&#xA;&lt; Exit [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:30.696 (6.891s)&#xA;&gt; Enter [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:36 @ 04/04/23 18:18:30.696&#xA;&lt; Exit [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:36 @ 04/04/23 18:18:34.717 (4.021s)&#xA;&gt; Enter [It] should not appear references to secret updates not used in ingress rules - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:40 @ 04/04/23 18:18:34.717&#xA;&lt; Exit [It] should not appear references to secret updates not used in ingress rules - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:40 @ 04/04/23 18:18:57.987 (23.27s)&#xA;&gt; Enter [AfterEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:57.987&#xA;&lt; Exit [AfterEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:58.194 (208ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure Opentelemetry should include opentelemetry_trust_incoming_spans on directive when enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="31.804972504">
              <system-err>&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:58.195&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:08.072 (9.877s)&#xA;&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 04/04/23 18:19:08.072&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 04/04/23 18:19:12.096 (4.024s)&#xA;&gt; Enter [It] should include opentelemetry_trust_incoming_spans on directive when enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:74 @ 04/04/23 18:19:12.096&#xA;&lt; Exit [It] should include opentelemetry_trust_incoming_spans on directive when enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:74 @ 04/04/23 18:19:29.486 (17.39s)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:29.486&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:30 (514ms)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 04/04/23 18:19:30&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 04/04/23 18:19:30 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] from-to-www-redirect should redirect from www HTTP to HTTP" classname="nginx-ingress-controller e2e suite" status="passed" time="22.301605707">
              <system-err>&gt; Enter [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:30.007&#xA;&lt; Exit [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:37.929 (7.922s)&#xA;&gt; Enter [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:34 @ 04/04/23 18:19:37.929&#xA;&lt; Exit [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:34 @ 04/04/23 18:19:41.957 (4.027s)&#xA;&gt; Enter [It] should redirect from www HTTP to HTTP - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:38 @ 04/04/23 18:19:41.957&#xA;STEP: setting up server for redirect from www - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:39 @ 04/04/23 18:19:41.957&#xA;STEP: sending request to www.fromtowwwredirect.bar.com - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:55 @ 04/04/23 18:19:52.111&#xA;&lt; Exit [It] should redirect from www HTTP to HTTP - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:38 @ 04/04/23 18:19:52.114 (10.157s)&#xA;&gt; Enter [AfterEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:52.114&#xA;&lt; Exit [AfterEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:52.309 (195ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Debug CLI should produce valid JSON for /dbg general" classname="nginx-ingress-controller e2e suite" status="passed" time="19.236570056">
              <system-err>&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:52.309&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:59.222 (6.912s)&#xA;&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 04/04/23 18:19:59.222&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 04/04/23 18:20:03.271 (4.049s)&#xA;&gt; Enter [It] should produce valid JSON for /dbg general - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:85 @ 04/04/23 18:20:03.271&#xA;&lt; Exit [It] should produce valid JSON for /dbg general - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:85 @ 04/04/23 18:20:10.739 (7.468s)&#xA;&gt; Enter [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:10.739&#xA;&lt; Exit [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:11.546 (807ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by weight should route requests split between mainline and canary if canary weight is 50" classname="nginx-ingress-controller e2e suite" status="passed" time="72.6402812">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:11.548&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:20.355 (8.808s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:20:20.355&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:20:28.54 (8.185s)&#xA;&gt; Enter [It] should route requests split between mainline and canary if canary weight is 50 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:808 @ 04/04/23 18:20:28.54&#xA;&lt; Exit [It] should route requests split between mainline and canary if canary weight is 50 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:808 @ 04/04/23 18:21:23.965 (55.425s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:23.965&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:24.188 (223ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] custom-http-errors configures Nginx correctly" classname="nginx-ingress-controller e2e suite" status="passed" time="44.923714382">
              <system-err>&gt; Enter [BeforeEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:24.188&#xA;&lt; Exit [BeforeEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:32.093 (7.904s)&#xA;&gt; Enter [BeforeEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:37 @ 04/04/23 18:21:32.093&#xA;&lt; Exit [BeforeEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:37 @ 04/04/23 18:21:36.116 (4.023s)&#xA;&gt; Enter [It] configures Nginx correctly - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:41 @ 04/04/23 18:21:36.116&#xA;STEP: turning on proxy_intercept_errors directive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:59 @ 04/04/23 18:21:46.348&#xA;STEP: configuring error_page directive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:62 @ 04/04/23 18:21:46.348&#xA;STEP: creating error locations - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:67 @ 04/04/23 18:21:46.348&#xA;STEP: updating configuration when only custom-http-error value changes - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:72 @ 04/04/23 18:21:46.349&#xA;STEP: ignoring duplicate values (503 in this case) per server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:90 @ 04/04/23 18:21:50.55&#xA;STEP: using the custom default-backend from annotation for upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:102 @ 04/04/23 18:22:00.715&#xA;&lt; Exit [It] configures Nginx correctly - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:41 @ 04/04/23 18:22:08.9 (32.784s)&#xA;&gt; Enter [AfterEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:08.9&#xA;&lt; Exit [AfterEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:09.112 (212ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] connection-proxy-header set connection header to keep-alive" classname="nginx-ingress-controller e2e suite" status="passed" time="22.252976907">
              <system-err>&gt; Enter [BeforeEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:09.112&#xA;&lt; Exit [BeforeEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:17.003 (7.891s)&#xA;&gt; Enter [BeforeEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/connection.go:32 @ 04/04/23 18:22:17.003&#xA;&lt; Exit [BeforeEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/connection.go:32 @ 04/04/23 18:22:21.032 (4.029s)&#xA;&gt; Enter [It] set connection header to keep-alive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/connection.go:36 @ 04/04/23 18:22:21.032&#xA;&lt; Exit [It] set connection header to keep-alive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/connection.go:36 @ 04/04/23 18:22:31.159 (10.126s)&#xA;&gt; Enter [AfterEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:31.159&#xA;&lt; Exit [AfterEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:31.365 (206ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should return 200 for service type=ExternalName using FQDN with trailing dot" classname="nginx-ingress-controller e2e suite" status="passed" time="17.384809737">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:31.366&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:38.253 (6.887s)&#xA;&gt; Enter [It] should return 200 for service type=ExternalName using FQDN with trailing dot - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:217 @ 04/04/23 18:22:38.253&#xA;&lt; Exit [It] should return 200 for service type=ExternalName using FQDN with trailing dot - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:217 @ 04/04/23 18:22:48.533 (10.28s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:48.533&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:48.75 (218ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) should configure TLS protocol setting cipher suite" classname="nginx-ingress-controller e2e suite" status="passed" time="30.336386338">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:48.751&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:55.631 (6.88s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 04/04/23 18:22:55.631&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 04/04/23 18:22:59.653 (4.022s)&#xA;&gt; Enter [BeforeEach] should configure TLS protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:47 @ 04/04/23 18:22:59.653&#xA;&lt; Exit [BeforeEach] should configure TLS protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:47 @ 04/04/23 18:23:08.743 (9.09s)&#xA;&gt; Enter [It] setting cipher suite - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:65 @ 04/04/23 18:23:08.743&#xA;&lt; Exit [It] setting cipher suite - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:65 @ 04/04/23 18:23:18.9 (10.157s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:18.9&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:19.087 (187ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should not set client_body_buffer_size to invalid 1b" classname="nginx-ingress-controller e2e suite" status="passed" time="22.345381233">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:19.087&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:27.019 (7.931s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 04/04/23 18:23:27.019&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 04/04/23 18:23:31.042 (4.023s)&#xA;&gt; Enter [It] should not set client_body_buffer_size to invalid 1b - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:145 @ 04/04/23 18:23:31.042&#xA;&lt; Exit [It] should not set client_body_buffer_size to invalid 1b - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:145 @ 04/04/23 18:23:41.252 (10.21s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:41.252&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:41.433 (181ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* cookie set by external authentication server user with annotated ingress retains cookie if upstream returns error status code" classname="nginx-ingress-controller e2e suite" status="passed" time="35.862466475">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:41.433&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:48.317 (6.884s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:23:48.317&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:23:52.34 (4.023s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 04/04/23 18:23:52.34&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 04/04/23 18:24:11.665 (19.325s)&#xA;&gt; Enter [It] user with annotated ingress retains cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:433 @ 04/04/23 18:24:11.665&#xA;&lt; Exit [It] user with annotated ingress retains cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:433 @ 04/04/23 18:24:16.916 (5.251s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:16.916&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:17.295 (379ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should accept both Ingresses with default IngressClassName and IngressClass annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="28.849373163">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:17.296&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:24.725 (7.429s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:24:24.725&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:24:28.761 (4.036s)&#xA;&gt; Enter [It] should accept both Ingresses with default IngressClassName and IngressClass annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:132 @ 04/04/23 18:24:28.761&#xA;&lt; Exit [It] should accept both Ingresses with default IngressClassName and IngressClass annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:132 @ 04/04/23 18:24:45.952 (17.19s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:45.952&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:46.145 (194ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication with caching is configured should redirect to signin url when not signed in" classname="nginx-ingress-controller e2e suite" status="passed" time="62.989242552">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:46.146&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:54.048 (7.903s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:24:54.048&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:24:58.076 (4.028s)&#xA;&gt; Enter [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 04/04/23 18:24:58.076&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 04/04/23 18:25:03.11&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 04/04/23 18:25:13.321&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 04/04/23 18:25:23.483&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 04/04/23 18:25:33.694&#xA;&lt; Exit [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 04/04/23 18:25:48.897 (50.821s)&#xA;&gt; Enter [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:849 @ 04/04/23 18:25:48.897&#xA;&lt; Exit [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:849 @ 04/04/23 18:25:48.908 (11ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:48.908&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:49.135 (227ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-escape-json and log-format-escape-none should enable the log-format-escape-none" classname="nginx-ingress-controller e2e suite" status="passed" time="29.279224113">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:49.135&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:56.988 (7.853s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 04/04/23 18:25:56.988&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 04/04/23 18:26:08.04 (11.052s)&#xA;&gt; Enter [It] should enable the log-format-escape-none - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:63 @ 04/04/23 18:26:08.04&#xA;&lt; Exit [It] should enable the log-format-escape-none - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:63 @ 04/04/23 18:26:18.223 (10.184s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:18.223&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:18.414 (191ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log disable-access-log set access_log off" classname="nginx-ingress-controller e2e suite" status="passed" time="28.389158726">
              <system-err>&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:18.415&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:25.316 (6.901s)&#xA;&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 04/04/23 18:26:25.316&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 04/04/23 18:26:29.352 (4.036s)&#xA;&gt; Enter [It] disable-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:35 @ 04/04/23 18:26:29.352&#xA;&lt; Exit [It] disable-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:35 @ 04/04/23 18:26:46.584 (17.231s)&#xA;&gt; Enter [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:46.584&#xA;&lt; Exit [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:46.805 (221ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] backend status code 503 should return 503 when backend service does not exist" classname="nginx-ingress-controller e2e suite" status="passed" time="17.252661988">
              <system-err>&gt; Enter [BeforeEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:46.805&#xA;&lt; Exit [BeforeEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:53.714 (6.909s)&#xA;&gt; Enter [It] should return 503 when backend service does not exist - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_backend.go:36 @ 04/04/23 18:26:53.714&#xA;&lt; Exit [It] should return 503 when backend service does not exist - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_backend.go:36 @ 04/04/23 18:27:03.859 (10.145s)&#xA;&gt; Enter [AfterEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:03.859&#xA;&lt; Exit [AfterEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:04.058 (199ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should not create additional upstream block when host part of auth-url contains a variable" classname="nginx-ingress-controller e2e suite" status="passed" time="180.073180671">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:04.058&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:22.496 (2m18.438s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:29:22.496&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:29:26.527 (4.032s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:29:26.527&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:29:40.697 (14.169s)&#xA;&gt; Enter [It] should not create additional upstream block when host part of auth-url contains a variable - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:570 @ 04/04/23 18:29:40.697&#xA;&lt; Exit [It] should not create additional upstream block when host part of auth-url contains a variable - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:570 @ 04/04/23 18:30:03.916 (23.219s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:03.916&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:04.131 (215ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should return 403 using auth-tls-match-cn with no matching CN from client" classname="nginx-ingress-controller e2e suite" status="passed" time="22.572106725">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:04.131&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:12.003 (7.871s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 04/04/23 18:30:12.003&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 04/04/23 18:30:16.028 (4.025s)&#xA;&gt; Enter [It] should return 403 using auth-tls-match-cn with no matching CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:266 @ 04/04/23 18:30:16.028&#xA;&lt; Exit [It] should return 403 using auth-tls-match-cn with no matching CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:266 @ 04/04/23 18:30:26.487 (10.459s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:26.487&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:26.704 (217ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check the variable hash size should set variables-hash-max-size" classname="nginx-ingress-controller e2e suite" status="passed" time="28.267138211">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:26.704&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:33.592 (6.888s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 04/04/23 18:30:33.592&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 04/04/23 18:30:44.636 (11.044s)&#xA;&gt; Enter [It] should set variables-hash-max-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:88 @ 04/04/23 18:30:44.636&#xA;&lt; Exit [It] should set variables-hash-max-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:88 @ 04/04/23 18:30:54.792 (10.156s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:54.792&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:54.971 (179ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] nginx-configuration fails when using alias directive" classname="nginx-ingress-controller e2e suite" status="passed" time="62.037787772">
              <system-err>&gt; Enter [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 04/04/23 18:30:54.971&#xA;&lt; Exit [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 04/04/23 18:30:56.98 (2.008s)&#xA;&gt; Enter [It] fails when using alias directive - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:115 @ 04/04/23 18:30:56.98&#xA;&lt; Exit [It] fails when using alias directive - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:115 @ 04/04/23 18:31:57.006 (1m0.027s)&#xA;&gt; Enter [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 04/04/23 18:31:57.006&#xA;&lt; Exit [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 04/04/23 18:31:57.009 (3ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] stream-snippet should add value of stream-snippet to nginx config" classname="nginx-ingress-controller e2e suite" status="passed" time="26.324702674">
              <system-err>&gt; Enter [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:31:57.009&#xA;&lt; Exit [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:03.889 (6.88s)&#xA;&gt; Enter [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:37 @ 04/04/23 18:32:03.889&#xA;&lt; Exit [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:37 @ 04/04/23 18:32:07.917 (4.028s)&#xA;&gt; Enter [It] should add value of stream-snippet to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:41 @ 04/04/23 18:32:07.917&#xA;&lt; Exit [It] should add value of stream-snippet to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:41 @ 04/04/23 18:32:23.139 (15.222s)&#xA;&gt; Enter [AfterEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:23.139&#xA;&lt; Exit [AfterEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:23.334 (195ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] force-ssl-redirect should redirect to https" classname="nginx-ingress-controller e2e suite" status="passed" time="18.161892976">
              <system-err>&gt; Enter [BeforeEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:23.334&#xA;&lt; Exit [BeforeEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:30.222 (6.888s)&#xA;&gt; Enter [BeforeEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/forcesslredirect.go:30 @ 04/04/23 18:32:30.222&#xA;&lt; Exit [BeforeEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/forcesslredirect.go:30 @ 04/04/23 18:32:34.249 (4.027s)&#xA;&gt; Enter [It] should redirect to https - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/forcesslredirect.go:34 @ 04/04/23 18:32:34.249&#xA;&lt; Exit [It] should redirect to https - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/forcesslredirect.go:34 @ 04/04/23 18:32:41.274 (7.025s)&#xA;&gt; Enter [AfterEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:41.274&#xA;&lt; Exit [AfterEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:41.496 (222ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With specific ingress-class flags should ignore Ingress with no class and accept the correctly configured Ingresses" classname="nginx-ingress-controller e2e suite" status="passed" time="43.376544604">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:41.497&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:48.376 (6.879s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:32:48.376&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:32:52.403 (4.027s)&#xA;&gt; Enter [BeforeEach] With specific ingress-class flags - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:392 @ 04/04/23 18:32:52.403&#xA;&lt; Exit [BeforeEach] With specific ingress-class flags - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:392 @ 04/04/23 18:33:00.451 (8.048s)&#xA;&gt; Enter [It] should ignore Ingress with no class and accept the correctly configured Ingresses - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:413 @ 04/04/23 18:33:00.451&#xA;&lt; Exit [It] should ignore Ingress with no class and accept the correctly configured Ingresses - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:413 @ 04/04/23 18:33:24.697 (24.246s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:24.697&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:24.873 (176ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by weight should route requests only to canary if canary weight is 100" classname="nginx-ingress-controller e2e suite" status="passed" time="34.835880563">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:24.873&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:32.238 (7.364s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:33:32.238&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:33:42.291 (10.053s)&#xA;&gt; Enter [It] should route requests only to canary if canary weight is 100 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:743 @ 04/04/23 18:33:42.291&#xA;&lt; Exit [It] should route requests only to canary if canary weight is 100 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:743 @ 04/04/23 18:33:59.526 (17.235s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:59.526&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:59.709 (183ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] plugins should exist a x-hello-world header" classname="nginx-ingress-controller e2e suite" status="passed" time="28.296985312">
              <system-err>&gt; Enter [BeforeEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:59.71&#xA;&lt; Exit [BeforeEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:06.602 (6.893s)&#xA;&gt; Enter [BeforeEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/settings/plugins.go:31 @ 04/04/23 18:34:06.602&#xA;&lt; Exit [BeforeEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/settings/plugins.go:31 @ 04/04/23 18:34:10.627 (4.025s)&#xA;&gt; Enter [It] should exist a x-hello-world header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/plugins.go:35 @ 04/04/23 18:34:10.627&#xA;&lt; Exit [It] should exist a x-hello-world header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/plugins.go:35 @ 04/04/23 18:34:27.807 (17.179s)&#xA;&gt; Enter [AfterEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:27.807&#xA;&lt; Exit [AfterEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:28.007 (200ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates given an ingress with TLS correctly configured falls back to using default certificate when secret gets deleted without reloading" classname="nginx-ingress-controller e2e suite" status="passed" time="42.494257699">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:28.007&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:35.896 (7.889s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 04/04/23 18:34:35.896&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 04/04/23 18:34:39.916 (4.02s)&#xA;&gt; Enter [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 04/04/23 18:34:39.916&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:128 @ 04/04/23 18:34:57.039&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:136 @ 04/04/23 18:35:05.187&#xA;&lt; Exit [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 04/04/23 18:35:05.197 (25.281s)&#xA;&gt; Enter [It] falls back to using default certificate when secret gets deleted without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:185 @ 04/04/23 18:35:05.197&#xA;STEP: serving the default certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:204 @ 04/04/23 18:35:10.227&#xA;STEP: skipping Nginx reload - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:214 @ 04/04/23 18:35:10.293&#xA;&lt; Exit [It] falls back to using default certificate when secret gets deleted without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:185 @ 04/04/23 18:35:10.293 (5.095s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:10.293&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:10.501 (209ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* cookie set by external authentication server user retains cookie by default" classname="nginx-ingress-controller e2e suite" status="passed" time="32.330381109">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:10.502&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:17.387 (6.885s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:35:17.387&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:35:21.413 (4.026s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 04/04/23 18:35:21.413&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 04/04/23 18:35:42.607 (21.195s)&#xA;&gt; Enter [It] user retains cookie by default - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:411 @ 04/04/23 18:35:42.607&#xA;&lt; Exit [It] user retains cookie by default - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:411 @ 04/04/23 18:35:42.616 (9ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:42.616&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:42.832 (216ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - FastCGI should use fastcgi_pass in the configuration file" classname="nginx-ingress-controller e2e suite" status="passed" time="22.329056924">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:42.832&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:49.737 (6.905s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 04/04/23 18:35:49.737&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 04/04/23 18:35:54.76 (5.023s)&#xA;&gt; Enter [It] should use fastcgi_pass in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:37 @ 04/04/23 18:35:54.76&#xA;&lt; Exit [It] should use fastcgi_pass in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:37 @ 04/04/23 18:36:04.978 (10.218s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:04.978&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:05.161 (183ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates given an ingress with TLS correctly configured picks up the updated certificate without reloading" classname="nginx-ingress-controller e2e suite" status="passed" time="48.818003036">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:05.162&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:13.068 (7.906s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 04/04/23 18:36:13.068&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 04/04/23 18:36:17.096 (4.027s)&#xA;&gt; Enter [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 04/04/23 18:36:17.096&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:128 @ 04/04/23 18:36:34.288&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:136 @ 04/04/23 18:36:42.473&#xA;&lt; Exit [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 04/04/23 18:36:42.5 (25.405s)&#xA;&gt; Enter [It] picks up the updated certificate without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:149 @ 04/04/23 18:36:42.5&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:163 @ 04/04/23 18:36:47.607&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:169 @ 04/04/23 18:36:50.731&#xA;STEP: skipping Nginx reload - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:180 @ 04/04/23 18:36:53.763&#xA;&lt; Exit [It] picks up the updated certificate without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:149 @ 04/04/23 18:36:53.763 (11.263s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:53.763&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:53.98 (217ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-upstream with log-format-escape-json and log-format-escape-none log-format default escape" classname="nginx-ingress-controller e2e suite" status="passed" time="33.273225638">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:53.981&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:00.852 (6.872s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 04/04/23 18:37:00.852&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 04/04/23 18:37:13.899 (13.046s)&#xA;&gt; Enter [It] log-format default escape - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:105 @ 04/04/23 18:37:13.899&#xA;&lt; Exit [It] log-format default escape - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:105 @ 04/04/23 18:37:27.067 (13.169s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:27.067&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:27.254 (186ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] brotli should only compress responses that meet the `brotli-min-length` condition" classname="nginx-ingress-controller e2e suite" status="passed" time="43.280934967">
              <system-err>&gt; Enter [BeforeEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:27.254&#xA;&lt; Exit [BeforeEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:35.134 (7.88s)&#xA;&gt; Enter [BeforeEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/settings/brotli.go:35 @ 04/04/23 18:37:35.134&#xA;&lt; Exit [BeforeEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/settings/brotli.go:35 @ 04/04/23 18:37:39.153 (4.019s)&#xA;&gt; Enter [It] should only compress responses that meet the `brotli-min-length` condition - /go/src/k8s.io/ingress-nginx/test/e2e/settings/brotli.go:39 @ 04/04/23 18:37:39.153&#xA;&lt; Exit [It] should only compress responses that meet the `brotli-min-length` condition - /go/src/k8s.io/ingress-nginx/test/e2e/settings/brotli.go:39 @ 04/04/23 18:38:10.344 (31.191s)&#xA;&gt; Enter [AfterEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:10.344&#xA;&lt; Exit [AfterEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:10.535 (191ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log disable-http-access-log set access_log off" classname="nginx-ingress-controller e2e suite" status="passed" time="28.299680714">
              <system-err>&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:10.535&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:17.414 (6.879s)&#xA;&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 04/04/23 18:38:17.414&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 04/04/23 18:38:21.437 (4.023s)&#xA;&gt; Enter [It] disable-http-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:53 @ 04/04/23 18:38:21.437&#xA;&lt; Exit [It] disable-http-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:53 @ 04/04/23 18:38:38.614 (17.177s)&#xA;&gt; Enter [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:38.614&#xA;&lt; Exit [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:38.835 (221ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] enable-access-log enable-rewrite-log set access_log off" classname="nginx-ingress-controller e2e suite" status="passed" time="21.343128764">
              <system-err>&gt; Enter [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:38.836&#xA;&lt; Exit [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:45.698 (6.862s)&#xA;&gt; Enter [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:30 @ 04/04/23 18:38:45.698&#xA;&lt; Exit [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:30 @ 04/04/23 18:38:49.734 (4.036s)&#xA;&gt; Enter [It] set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:34 @ 04/04/23 18:38:49.734&#xA;&lt; Exit [It] set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:34 @ 04/04/23 18:38:59.959 (10.225s)&#xA;&gt; Enter [AfterEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:59.959&#xA;&lt; Exit [AfterEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:00.179 (220ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] Geoip2 should only allow requests from specific countries" classname="nginx-ingress-controller e2e suite" status="skipped" time="12.683479458">
              <skipped message="skipped - GeoIP test are temporarily disabled"></skipped>
              <system-err>&gt; Enter [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:00.179&#xA;&lt; Exit [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:08.619 (8.44s)&#xA;&gt; Enter [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:42 @ 04/04/23 18:39:08.619&#xA;&lt; Exit [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:42 @ 04/04/23 18:39:12.644 (4.025s)&#xA;&gt; Enter [It] should only allow requests from specific countries - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:70 @ 04/04/23 18:39:12.644&#xA;[SKIPPED] GeoIP test are temporarily disabled&#xA;In [It] at: /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:71 @ 04/04/23 18:39:12.645&#xA;&lt; Exit [It] should only allow requests from specific countries - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:70 @ 04/04/23 18:39:12.645 (1ms)&#xA;&gt; Enter [AfterEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:12.645&#xA;&lt; Exit [AfterEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:12.862 (217ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) should configure HSTS policy header setting includeSubDomains parameter" classname="nginx-ingress-controller e2e suite" status="passed" time="30.581404926">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:12.863&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:19.76 (6.897s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 04/04/23 18:39:19.76&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 04/04/23 18:39:23.829 (4.069s)&#xA;&gt; Enter [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 04/04/23 18:39:23.829&#xA;&lt; Exit [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 04/04/23 18:39:33.03 (9.2s)&#xA;&gt; Enter [It] setting includeSubDomains parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:127 @ 04/04/23 18:39:33.03&#xA;&lt; Exit [It] setting includeSubDomains parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:127 @ 04/04/23 18:39:43.259 (10.229s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:43.259&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:43.444 (186ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should add auth headers when global-auth-response-headers is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="55.890075182">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:43.445&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:50.328 (6.883s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:39:50.328&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:39:58.361 (8.034s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:39:58.361&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 04/04/23 18:39:58.361&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 04/04/23 18:40:08.534&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 04/04/23 18:40:18.725&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:40:28.928 (30.567s)&#xA;&gt; Enter [It] should add auth headers when global-auth-response-headers is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:223 @ 04/04/23 18:40:28.928&#xA;STEP: Adding a global-auth-response-headers to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:228 @ 04/04/23 18:40:28.928&#xA;&lt; Exit [It] should add auth headers when global-auth-response-headers is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:223 @ 04/04/23 18:40:39.119 (10.19s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:39.119&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:39.335 (216ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-read-timeout should not set invalid proxy read timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="26.343140938">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:40:39.335&#xA;&lt; Exit [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:40:46.231 (6.896s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:32 @ 04/04/23 18:40:46.231&#xA;&lt; Exit [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:32 @ 04/04/23 18:40:48.266 (2.035s)&#xA;&gt; Enter [It] should not set invalid proxy read timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:52 @ 04/04/23 18:40:48.266&#xA;&lt; Exit [It] should not set invalid proxy read timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:52 @ 04/04/23 18:41:05.463 (17.198s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:41:05.463&#xA;&lt; Exit [AfterEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:41:05.678 (215ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should not return an error if the Ingress V1 definition is valid with IngressClass annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="43.931079725000004">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:41:24.95&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:41:57.132 (32.182s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 18:41:57.132&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 18:42:05.196 (8.064s)&#xA;&gt; Enter [It] should not return an error if the Ingress V1 definition is valid with IngressClass annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:180 @ 04/04/23 18:42:05.196&#xA;&lt; Exit [It] should not return an error if the Ingress V1 definition is valid with IngressClass annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:180 @ 04/04/23 18:42:08.558 (3.362s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:42:08.558&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:42:08.881 (323ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should return an error if the Ingress V1 definition contains invalid annotations" classname="nginx-ingress-controller e2e suite" status="passed" time="26.799712273">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:42:08.881&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:42:27.269 (18.388s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 18:42:27.269&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 18:42:35.33 (8.061s)&#xA;&gt; Enter [It] should return an error if the Ingress V1 definition contains invalid annotations - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:196 @ 04/04/23 18:42:35.33&#xA;&lt; Exit [It] should return an error if the Ingress V1 definition contains invalid annotations - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:196 @ 04/04/23 18:42:35.482 (152ms)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:42:35.482&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:42:35.681 (199ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should not allow overlaps of host and paths without canary annotations" classname="nginx-ingress-controller e2e suite" status="passed" time="32.195691651">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:42:35.681&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:42:54.33 (18.649s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 18:42:54.33&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 21:18:55.121 (10.056s)&#xA;&gt; Enter [It] should not allow overlaps of host and paths without canary annotations - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:70 @ 04/04/23 21:18:55.121&#xA;&lt; Exit [It] should not allow overlaps of host and paths without canary annotations - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:70 @ 04/04/23 21:18:58.366 (3.245s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 21:18:58.367&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 21:18:58.612 (246ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [TopologyHints] topology aware routing should return 200 when service has topology hints" classname="nginx-ingress-controller e2e suite" status="passed" time="21.448473937">
              <system-err>&gt; Enter [BeforeEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 21:18:58.613&#xA;&lt; Exit [BeforeEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 21:19:05.487 (6.875s)&#xA;&gt; Enter [BeforeEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/topology.go:39 @ 04/04/23 21:19:05.487&#xA;&lt; Exit [BeforeEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/topology.go:39 @ 04/04/23 21:19:09.523 (4.036s)&#xA;&gt; Enter [It] should return 200 when service has topology hints - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/topology.go:43 @ 04/04/23 21:19:09.523&#xA;STEP: checking if the service is reached - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/topology.go:53 @ 04/04/23 21:19:19.701&#xA;&lt; Exit [It] should return 200 when service has topology hints - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/topology.go:43 @ 04/04/23 21:19:19.839 (10.316s)&#xA;&gt; Enter [AfterEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 21:19:19.839&#xA;&lt; Exit [AfterEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 21:19:20.061 (222ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should block ingress with invalid path" classname="nginx-ingress-controller e2e suite" status="passed" time="42.332684214">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 21:19:20.061&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 22:17:57.17 (30.737s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 22:17:57.17&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 22:18:05.234 (8.065s)&#xA;&gt; Enter [It] should block ingress with invalid path - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:108 @ 04/04/23 22:18:05.234&#xA;&lt; Exit [It] should block ingress with invalid path - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:108 @ 04/04/23 22:18:08.53 (3.296s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:18:08.53&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:18:08.765 (235ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] watch namespace selector With specific watch-namespace-selector flags should ingore Ingress of namespace without label foo=bar and accept those of namespace with label foo=bar" classname="nginx-ingress-controller e2e suite" status="passed" time="46.527358158">
              <system-err>&gt; Enter [BeforeEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 22:18:08.766&#xA;&lt; Exit [BeforeEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 22:18:22.642 (13.877s)&#xA;&gt; Enter [BeforeEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:51 @ 04/04/23 22:18:22.642&#xA;&lt; Exit [BeforeEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:51 @ 04/04/23 22:18:48.76 (26.118s)&#xA;&gt; Enter [It] should ingore Ingress of namespace without label foo=bar and accept those of namespace with label foo=bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:63 @ 04/04/23 22:18:48.76&#xA;&lt; Exit [It] should ingore Ingress of namespace without label foo=bar and accept those of namespace with label foo=bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:63 @ 04/04/23 22:18:55.044 (6.284s)&#xA;&gt; Enter [AfterEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:18:55.044&#xA;&lt; Exit [AfterEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:18:55.29 (246ms)&#xA;&gt; Enter [AfterEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:56 @ 04/04/23 22:18:55.29&#xA;&lt; Exit [AfterEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:56 @ 04/04/23 22:18:55.293 (3ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should not return an error for an invalid Ingress when it has unknown class" classname="nginx-ingress-controller e2e suite" status="passed" time="26.083527499">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 22:18:55.294&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 22:19:12.977 (17.683s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 22:19:12.977&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 22:19:21.048 (8.072s)&#xA;&gt; Enter [It] should not return an error for an invalid Ingress when it has unknown class - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:207 @ 04/04/23 22:19:21.048&#xA;&lt; Exit [It] should not return an error for an invalid Ingress when it has unknown class - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:207 @ 04/04/23 22:19:21.18 (132ms)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:19:21.18&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:19:21.377 (197ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller reject ingress with global-rate-limit annotations when memcached is not configured" classname="nginx-ingress-controller e2e suite" status="passed" time="49.765265582">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 22:19:21.377&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 22:19:52.511 (31.134s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 22:19:52.511&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 22:20:00.575 (8.064s)&#xA;&gt; Enter [It] reject ingress with global-rate-limit annotations when memcached is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:43 @ 04/04/23 22:20:00.575&#xA;STEP: rejects ingress when memcached is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:52 @ 04/04/23 22:20:00.575&#xA;STEP: accepts ingress when memcached is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:57 @ 04/04/23 22:20:00.587&#xA;&lt; Exit [It] reject ingress with global-rate-limit annotations when memcached is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:43 @ 04/04/23 22:20:10.885 (10.31s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:20:10.885&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:20:11.143 (257ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should return an error if there is an invalid value in some annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="33.755788426">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 22:20:11.143&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 22:20:29.584 (18.441s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 22:20:29.584&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 22:20:37.66 (8.076s)&#xA;&gt; Enter [It] should return an error if there is an invalid value in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:136 @ 04/04/23 22:20:37.66&#xA;&lt; Exit [It] should return an error if there is an invalid value in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:136 @ 04/04/23 22:20:44.7 (7.04s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:20:44.7&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:20:44.899 (199ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should return an error if there is a forbidden value in some annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="34.438337938">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 22:20:44.899&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 22:21:03.976 (19.078s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 22:21:03.976&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 22:21:12.046 (8.07s)&#xA;&gt; Enter [It] should return an error if there is a forbidden value in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:150 @ 04/04/23 22:21:12.046&#xA;&lt; Exit [It] should return an error if there is a forbidden value in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:150 @ 04/04/23 22:21:19.079 (7.033s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:21:19.079&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:21:19.337 (258ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should return an error if there is an error validating the ingress definition" classname="nginx-ingress-controller e2e suite" status="passed" time="26.71968897">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 22:21:19.337&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 22:21:37.731 (18.394s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 22:21:37.731&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 22:21:45.791 (8.06s)&#xA;&gt; Enter [It] should return an error if there is an error validating the ingress definition - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:125 @ 04/04/23 22:21:45.791&#xA;&lt; Exit [It] should return an error if there is an error validating the ingress definition - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:125 @ 04/04/23 22:21:45.852 (61ms)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:21:45.852&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:21:46.057 (205ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should not return an error if the Ingress V1 definition is valid with Ingress Class" classname="nginx-ingress-controller e2e suite" status="passed" time="32.534925031">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 22:21:46.057&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 22:22:04.907 (18.85s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 22:22:04.907&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 22:22:12.968 (8.061s)&#xA;&gt; Enter [It] should not return an error if the Ingress V1 definition is valid with Ingress Class - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:164 @ 04/04/23 22:22:12.968&#xA;&lt; Exit [It] should not return an error if the Ingress V1 definition is valid with Ingress Class - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:164 @ 04/04/23 22:22:18.358 (5.39s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:22:18.358&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:22:18.592 (234ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should allow overlaps of host and paths with canary annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="40.047809217">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 22:22:18.592&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 22:22:47.015 (28.422s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 22:22:47.015&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 04/04/23 22:22:55.073 (8.059s)&#xA;&gt; Enter [It] should allow overlaps of host and paths with canary annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:87 @ 04/04/23 22:22:55.073&#xA;&lt; Exit [It] should allow overlaps of host and paths with canary annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:87 @ 04/04/23 22:22:58.439 (3.366s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:22:58.439&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 22:22:58.64 (201ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates given an ingress with TLS correctly configured supports requests with domain with trailing dot" classname="nginx-ingress-controller e2e suite" status="passed" time="45.156808474">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:04:19.251&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:04:26.76 (7.509s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 04/04/23 18:04:26.76&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 04/04/23 18:04:38.808 (12.048s)&#xA;&gt; Enter [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 04/04/23 18:04:38.808&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:128 @ 04/04/23 18:04:55.931&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:136 @ 04/04/23 18:05:04.12&#xA;&lt; Exit [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 04/04/23 18:05:04.15 (25.342s)&#xA;&gt; Enter [It] supports requests with domain with trailing dot - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:145 @ 04/04/23 18:05:04.15&#xA;&lt; Exit [It] supports requests with domain with trailing dot - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:145 @ 04/04/23 18:05:04.174 (24ms)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:04.174&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:04.407 (234ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] preserve-trailing-slash should allow preservation of trailing slashes" classname="nginx-ingress-controller e2e suite" status="passed" time="18.218254728">
              <system-err>&gt; Enter [BeforeEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:04.408&#xA;&lt; Exit [BeforeEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:11.385 (6.978s)&#xA;&gt; Enter [BeforeEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/preservetrailingslash.go:30 @ 04/04/23 18:05:11.385&#xA;&lt; Exit [BeforeEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/preservetrailingslash.go:30 @ 04/04/23 18:05:15.42 (4.034s)&#xA;&gt; Enter [It] should allow preservation of trailing slashes - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/preservetrailingslash.go:34 @ 04/04/23 18:05:15.42&#xA;&lt; Exit [It] should allow preservation of trailing slashes - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/preservetrailingslash.go:34 @ 04/04/23 18:05:22.428 (7.008s)&#xA;&gt; Enter [AfterEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:22.428&#xA;&lt; Exit [AfterEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:22.626 (198ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should set valid proxy timeouts" classname="nginx-ingress-controller e2e suite" status="passed" time="21.290348562">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:22.626&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:29.568 (6.942s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:05:29.568&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:05:33.606 (4.037s)&#xA;&gt; Enter [It] should set valid proxy timeouts - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:115 @ 04/04/23 18:05:33.606&#xA;&lt; Exit [It] should set valid proxy timeouts - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:115 @ 04/04/23 18:05:43.732 (10.127s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:43.732&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:43.917 (184ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Dynamic $proxy_host should exist a proxy_host using the upstream-vhost annotation value" classname="nginx-ingress-controller e2e suite" status="passed" time="22.27109412">
              <system-err>&gt; Enter [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:43.917&#xA;&lt; Exit [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:51.802 (7.885s)&#xA;&gt; Enter [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:32 @ 04/04/23 18:05:51.802&#xA;&lt; Exit [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:32 @ 04/04/23 18:05:55.831 (4.029s)&#xA;&gt; Enter [It] should exist a proxy_host using the upstream-vhost annotation value - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:57 @ 04/04/23 18:05:55.831&#xA;&lt; Exit [It] should exist a proxy_host using the upstream-vhost annotation value - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:57 @ 04/04/23 18:06:05.978 (10.147s)&#xA;&gt; Enter [AfterEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:05.978&#xA;&lt; Exit [AfterEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:06.188 (210ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] server-tokens should not exists Server header in the response" classname="nginx-ingress-controller e2e suite" status="passed" time="29.448501298">
              <system-err>&gt; Enter [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:06.189&#xA;&lt; Exit [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:14.133 (7.945s)&#xA;&gt; Enter [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:34 @ 04/04/23 18:06:14.133&#xA;&lt; Exit [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:34 @ 04/04/23 18:06:18.165 (4.031s)&#xA;&gt; Enter [It] should not exists Server header in the response - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:38 @ 04/04/23 18:06:18.165&#xA;&lt; Exit [It] should not exists Server header in the response - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:38 @ 04/04/23 18:06:35.378 (17.213s)&#xA;&gt; Enter [AfterEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:35.378&#xA;&lt; Exit [AfterEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:35.637 (259ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] Configmap - limit-rate Check limit-rate config" classname="nginx-ingress-controller e2e suite" status="passed" time="41.582520724">
              <system-err>&gt; Enter [BeforeEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:35.637&#xA;&lt; Exit [BeforeEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:42.521 (6.884s)&#xA;&gt; Enter [BeforeEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/limit_rate.go:32 @ 04/04/23 18:06:42.521&#xA;&lt; Exit [BeforeEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/limit_rate.go:32 @ 04/04/23 18:06:46.54 (4.019s)&#xA;&gt; Enter [It] Check limit-rate config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/limit_rate.go:36 @ 04/04/23 18:06:46.54&#xA;&lt; Exit [It] Check limit-rate config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/limit_rate.go:36 @ 04/04/23 18:07:17.039 (30.499s)&#xA;&gt; Enter [AfterEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:17.039&#xA;&lt; Exit [AfterEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:17.22 (180ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name does not set the path to / on the generated cookie if there&#39;s more than one rule referring to the same backend" classname="nginx-ingress-controller e2e suite" status="passed" time="19.412775362">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:17.22&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:24.225 (7.005s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:07:24.225&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:07:26.256 (2.031s)&#xA;&gt; Enter [It] does not set the path to / on the generated cookie if there&#39;s more than one rule referring to the same backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:121 @ 04/04/23 18:07:26.256&#xA;&lt; Exit [It] does not set the path to / on the generated cookie if there&#39;s more than one rule referring to the same backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:121 @ 04/04/23 18:07:36.45 (10.194s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:36.45&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:36.633 (183ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canary is created should response with a 200 status from the mainline upstream when requests are made to the mainline ingress" classname="nginx-ingress-controller e2e suite" status="passed" time="32.429318493">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:36.633&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:43.537 (6.903s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:07:43.537&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:07:51.596 (8.059s)&#xA;&gt; Enter [It] should response with a 200 status from the mainline upstream when requests are made to the mainline ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:48 @ 04/04/23 18:07:51.596&#xA;&lt; Exit [It] should response with a 200 status from the mainline upstream when requests are made to the mainline ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:48 @ 04/04/23 18:08:08.813 (17.217s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:08:08.813&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:08:09.063 (249ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should still return status code 200 after auth backend is deleted using cache" classname="nginx-ingress-controller e2e suite" status="passed" time="63.851336918">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:08:09.063&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:08:16.959 (7.896s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:08:16.959&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:08:25.017 (8.058s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:08:25.017&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 04/04/23 18:08:25.017&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 04/04/23 18:08:35.191&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 04/04/23 18:08:45.372&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:08:55.507 (30.491s)&#xA;&gt; Enter [It] should still return status code 200 after auth backend is deleted using cache - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:155 @ 04/04/23 18:08:55.507&#xA;STEP: Adding a global-auth-cache-key to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:163 @ 04/04/23 18:08:55.507&#xA;&lt; Exit [It] should still return status code 200 after auth backend is deleted using cache - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:155 @ 04/04/23 18:09:12.69 (17.183s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:12.69&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:12.914 (224ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] DeepInspection should drop whole ingress if one path matches invalid regex" classname="nginx-ingress-controller e2e suite" status="passed" time="28.383842502">
              <system-err>&gt; Enter [BeforeEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:12.915&#xA;&lt; Exit [BeforeEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:19.799 (6.884s)&#xA;&gt; Enter [BeforeEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/deep_inspection.go:30 @ 04/04/23 18:09:19.799&#xA;&lt; Exit [BeforeEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/deep_inspection.go:30 @ 04/04/23 18:09:23.825 (4.026s)&#xA;&gt; Enter [It] should drop whole ingress if one path matches invalid regex - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/deep_inspection.go:34 @ 04/04/23 18:09:23.825&#xA;&lt; Exit [It] should drop whole ingress if one path matches invalid regex - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/deep_inspection.go:34 @ 04/04/23 18:09:41.065 (17.24s)&#xA;&gt; Enter [AfterEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:41.065&#xA;&lt; Exit [AfterEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:41.299 (233ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Lua] lua-shared-dicts configures lua shared dicts" classname="nginx-ingress-controller e2e suite" status="passed" time="20.303048947">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Lua] lua-shared-dicts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:41.299&#xA;&lt; Exit [BeforeEach] [Setting] [Lua] lua-shared-dicts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:49.196 (7.896s)&#xA;&gt; Enter [It] configures lua shared dicts - /go/src/k8s.io/ingress-nginx/test/e2e/settings/lua_shared_dicts.go:29 @ 04/04/23 18:09:49.196&#xA;&lt; Exit [It] configures lua shared dicts - /go/src/k8s.io/ingress-nginx/test/e2e/settings/lua_shared_dicts.go:29 @ 04/04/23 18:10:01.416 (12.22s)&#xA;&gt; Enter [AfterEach] [Setting] [Lua] lua-shared-dicts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:01.416&#xA;&lt; Exit [AfterEach] [Setting] [Lua] lua-shared-dicts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:01.602 (187ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] rewrite-target use-regex enable-rewrite-log should use correct longest path match" classname="nginx-ingress-controller e2e suite" status="passed" time="31.437264514">
              <system-err>&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:01.603&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:08.48 (6.877s)&#xA;&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 04/04/23 18:10:08.48&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 04/04/23 18:10:12.502 (4.022s)&#xA;&gt; Enter [It] should use correct longest path match - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:66 @ 04/04/23 18:10:12.502&#xA;STEP: creating a regular ingress definition - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:69 @ 04/04/23 18:10:12.502&#xA;STEP: making a request to the non-rewritten location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:78 @ 04/04/23 18:10:22.752&#xA;STEP: creating an ingress definition with the rewrite-target annotation set on the &#34;/&#34; location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:88 @ 04/04/23 18:10:22.759&#xA;STEP: making a second request to the non-rewritten location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:102 @ 04/04/23 18:10:32.852&#xA;&lt; Exit [It] should use correct longest path match - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:66 @ 04/04/23 18:10:32.86 (20.358s)&#xA;&gt; Enter [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:32.86&#xA;&lt; Exit [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:33.04 (180ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) should configure HSTS policy header setting max-age parameter" classname="nginx-ingress-controller e2e suite" status="passed" time="33.487300099">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:33.04&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:40.925 (7.885s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 04/04/23 18:10:40.925&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 04/04/23 18:10:44.945 (4.02s)&#xA;&gt; Enter [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 04/04/23 18:10:44.945&#xA;Apr  4 18:10:54.109: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not settings-tls&#xA;&lt; Exit [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 04/04/23 18:10:56.109 (11.164s)&#xA;&gt; Enter [It] setting max-age parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:111 @ 04/04/23 18:10:56.109&#xA;&lt; Exit [It] setting max-age parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:111 @ 04/04/23 18:11:06.315 (10.206s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:06.315&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:06.527 (212ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url cookie set by external authentication server user with global-auth-always-set-cookie key in configmap retains cookie if upstream returns error status code" classname="nginx-ingress-controller e2e suite" status="passed" time="50.397964041">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:06.528&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:13.431 (6.904s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:11:13.431&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:11:21.479 (8.048s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 04/04/23 18:11:21.479&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 04/04/23 18:11:49.732 (28.253s)&#xA;&gt; Enter [It] user with global-auth-always-set-cookie key in configmap retains cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:348 @ 04/04/23 18:11:49.732&#xA;&lt; Exit [It] user with global-auth-always-set-cookie key in configmap retains cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:348 @ 04/04/23 18:11:56.743 (7.011s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:56.743&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:56.926 (183ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url cookie set by external authentication server user retains cookie by default" classname="nginx-ingress-controller e2e suite" status="passed" time="43.408433493">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:56.926&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:03.815 (6.889s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:12:03.815&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:12:11.862 (8.047s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 04/04/23 18:12:11.862&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 04/04/23 18:12:40.103 (28.241s)&#xA;&gt; Enter [It] user retains cookie by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:326 @ 04/04/23 18:12:40.103&#xA;&lt; Exit [It] user retains cookie by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:326 @ 04/04/23 18:12:40.112 (9ms)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:40.112&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:40.334 (222ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not allow - portless origin with wildcard origin" classname="nginx-ingress-controller e2e suite" status="passed" time="18.100951563">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:40.335&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:47.184 (6.849s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:12:47.184&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:12:51.214 (4.031s)&#xA;&gt; Enter [It] should not allow - portless origin with wildcard origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:515 @ 04/04/23 18:12:51.214&#xA;&lt; Exit [It] should not allow - portless origin with wildcard origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:515 @ 04/04/23 18:12:58.232 (7.018s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:58.232&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:58.436 (203ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 200 when authentication is configured with a map and Authorization header is sent" classname="nginx-ingress-controller e2e suite" status="passed" time="23.202917116">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:58.436&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:05.332 (6.896s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:13:05.332&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:13:09.361 (4.029s)&#xA;&gt; Enter [It] should return status code 200 when authentication is configured with a map and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:199 @ 04/04/23 18:13:09.361&#xA;&lt; Exit [It] should return status code 200 when authentication is configured with a map and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:199 @ 04/04/23 18:13:21.468 (12.107s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:21.468&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:21.639 (171ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should pass URL-encoded certificate to upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="25.893054261">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:21.639&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:29.514 (7.875s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 04/04/23 18:13:29.514&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 04/04/23 18:13:33.537 (4.023s)&#xA;&gt; Enter [It] should pass URL-encoded certificate to upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:161 @ 04/04/23 18:13:33.537&#xA;&lt; Exit [It] should pass URL-encoded certificate to upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:161 @ 04/04/23 18:13:47.331 (13.794s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:47.331&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:47.532 (202ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] custom service uses custom default backend that returns 200 as status code" classname="nginx-ingress-controller e2e suite" status="passed" time="23.264944049">
              <system-err>&gt; Enter [BeforeEach] [Default Backend] custom service - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:47.533&#xA;&lt; Exit [BeforeEach] [Default Backend] custom service - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:54.43 (6.897s)&#xA;&gt; Enter [It] uses custom default backend that returns 200 as status code - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/custom_default_backend.go:36 @ 04/04/23 18:13:54.43&#xA;&lt; Exit [It] uses custom default backend that returns 200 as status code - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/custom_default_backend.go:36 @ 04/04/23 18:14:10.603 (16.173s)&#xA;&gt; Enter [AfterEach] [Default Backend] custom service - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:10.603&#xA;&lt; Exit [AfterEach] [Default Backend] custom service - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:10.797 (195ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] whitelist-source-range should set valid ip whitelist range" classname="nginx-ingress-controller e2e suite" status="passed" time="21.327163771">
              <system-err>&gt; Enter [BeforeEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:10.798&#xA;&lt; Exit [BeforeEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:17.742 (6.944s)&#xA;&gt; Enter [BeforeEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipwhitelist.go:30 @ 04/04/23 18:14:17.742&#xA;&lt; Exit [BeforeEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipwhitelist.go:30 @ 04/04/23 18:14:21.766 (4.024s)&#xA;&gt; Enter [It] should set valid ip whitelist range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipwhitelist.go:34 @ 04/04/23 18:14:21.766&#xA;&lt; Exit [It] should set valid ip whitelist range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipwhitelist.go:34 @ 04/04/23 18:14:31.914 (10.148s)&#xA;&gt; Enter [AfterEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:31.914&#xA;&lt; Exit [AfterEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:32.125 (211ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should return 200 for service type=ExternalName using a port name" classname="nginx-ingress-controller e2e suite" status="passed" time="18.535847693">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:32.125&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:40.045 (7.92s)&#xA;&gt; Enter [It] should return 200 for service type=ExternalName using a port name - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:184 @ 04/04/23 18:14:40.045&#xA;&lt; Exit [It] should return 200 for service type=ExternalName using a port name - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:184 @ 04/04/23 18:14:50.345 (10.299s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:50.345&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:50.661 (317ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should not create additional upstream block when auth-keepalive is not set" classname="nginx-ingress-controller e2e suite" status="passed" time="48.861086206">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:50.662&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:57.86 (7.198s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:14:57.86&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:15:01.901 (4.041s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:15:01.901&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:15:16.075 (14.174s)&#xA;&gt; Enter [It] should not create additional upstream block when auth-keepalive is not set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:552 @ 04/04/23 18:15:16.075&#xA;&lt; Exit [It] should not create additional upstream block when auth-keepalive is not set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:552 @ 04/04/23 18:15:39.289 (23.214s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:39.289&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:39.523 (234ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] no-auth-locations should return status code 401 when accessing &#39;/&#39; unauthentication" classname="nginx-ingress-controller e2e suite" status="passed" time="29.175448236">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:39.523&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:46.413 (6.89s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 04/04/23 18:15:46.413&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 04/04/23 18:16:05.358 (18.945s)&#xA;&gt; Enter [It] should return status code 401 when accessing &#39;/&#39; unauthentication - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:54 @ 04/04/23 18:16:05.358&#xA;&lt; Exit [It] should return status code 401 when accessing &#39;/&#39; unauthentication - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:54 @ 04/04/23 18:16:08.518 (3.16s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:08.518&#xA;&lt; Exit [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:08.699 (180ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-proxy-protocol should enable PROXY Protocol for HTTPS" classname="nginx-ingress-controller e2e suite" status="passed" time="110.571232421">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:08.699&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:15.641 (6.942s)&#xA;&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 04/04/23 18:16:15.641&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 04/04/23 18:16:26.725 (11.084s)&#xA;&gt; Enter [It] should enable PROXY Protocol for HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:112 @ 04/04/23 18:16:26.725&#xA;&lt; Exit [It] should enable PROXY Protocol for HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:112 @ 04/04/23 18:17:59.041 (1m32.316s)&#xA;&gt; Enter [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:59.041&#xA;&lt; Exit [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:59.27 (229ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-catch-all should ignore catch all Ingress with backend" classname="nginx-ingress-controller e2e suite" status="passed" time="40.559995342">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:59.27&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:07.156 (7.885s)&#xA;&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 04/04/23 18:18:07.156&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 04/04/23 18:18:19.212 (12.057s)&#xA;&gt; Enter [It] should ignore catch all Ingress with backend - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:50 @ 04/04/23 18:18:19.212&#xA;&lt; Exit [It] should ignore catch all Ingress with backend - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:50 @ 04/04/23 18:18:39.618 (20.406s)&#xA;&gt; Enter [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:39.618&#xA;&lt; Exit [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:39.83 (212ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow headers for cors" classname="nginx-ingress-controller e2e suite" status="passed" time="21.260866655">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:39.831&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:46.716 (6.885s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:18:46.716&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:18:50.744 (4.028s)&#xA;&gt; Enter [It] should allow headers for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:137 @ 04/04/23 18:18:50.744&#xA;&lt; Exit [It] should allow headers for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:137 @ 04/04/23 18:19:00.902 (10.159s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:00.902&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:01.091 (189ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canary is created should return 404 status for requests to the canary if no matching ingress is found" classname="nginx-ingress-controller e2e suite" status="passed" time="23.296431448">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:01.092&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:09.007 (7.915s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:19:09.007&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:19:17.081 (8.074s)&#xA;&gt; Enter [It] should return 404 status for requests to the canary if no matching ingress is found - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:80 @ 04/04/23 18:19:17.081&#xA;&lt; Exit [It] should return 404 status for requests to the canary if no matching ingress is found - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:80 @ 04/04/23 18:19:24.105 (7.024s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:24.105&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:24.388 (283ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic configuration when only backends change handles endpoints only changes (down scaling of replicas)" classname="nginx-ingress-controller e2e suite" status="passed" time="176.113366498">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:24.389&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:43.748 (2m19.359s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 04/04/23 18:21:43.748&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 04/04/23 18:21:57.954 (14.206s)&#xA;&gt; Enter [It] handles endpoints only changes (down scaling of replicas) - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:87 @ 04/04/23 18:21:57.954&#xA;&lt; Exit [It] handles endpoints only changes (down scaling of replicas) - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:87 @ 04/04/23 18:22:20.304 (22.351s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:20.304&#xA;&lt; Exit [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:20.502 (198ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should not set proxy client-max-body-size to incorrect value" classname="nginx-ingress-controller e2e suite" status="passed" time="21.245320565">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:20.503&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:27.369 (6.866s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:22:27.369&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:22:31.399 (4.03s)&#xA;&gt; Enter [It] should not set proxy client-max-body-size to incorrect value - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:100 @ 04/04/23 18:22:31.399&#xA;&lt; Exit [It] should not set proxy client-max-body-size to incorrect value - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:100 @ 04/04/23 18:22:41.545 (10.146s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:41.545&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:41.748 (203ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] reuse-port reuse port should be disabled" classname="nginx-ingress-controller e2e suite" status="passed" time="155.972323059">
              <system-err>&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:41.748&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:58.304 (2m16.556s)&#xA;&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 04/04/23 18:24:58.304&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 04/04/23 18:25:07.351 (9.047s)&#xA;&gt; Enter [It] reuse port should be disabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:44 @ 04/04/23 18:25:07.351&#xA;&lt; Exit [It] reuse port should be disabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:44 @ 04/04/23 18:25:17.463 (10.112s)&#xA;&gt; Enter [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:17.463&#xA;&lt; Exit [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:17.721 (257ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="152.692429605">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:17.721&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:36 (2m18.279s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:27:36&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:27:40.022 (4.023s)&#xA;&gt; Enter [It] should set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:266 @ 04/04/23 18:27:40.022&#xA;&lt; Exit [It] should set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:266 @ 04/04/23 18:27:50.223 (10.201s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:50.224&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:50.413 (190ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] custom HTTP and HTTPS ports with a TLS enabled ingress when external authentication is configured should set the X-Forwarded-Port header to 443" classname="nginx-ingress-controller e2e suite" status="passed" time="39.615463078">
              <system-err>&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:50.414&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:04.312 (13.898s)&#xA;&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 04/04/23 18:28:04.312&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 04/04/23 18:28:11.43 (7.118s)&#xA;&gt; Enter [It] should set the X-Forwarded-Port header to 443 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:100 @ 04/04/23 18:28:11.43&#xA;Apr  4 18:28:24.664: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not forwarded-headers&#xA;&lt; Exit [It] should set the X-Forwarded-Port header to 443 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:100 @ 04/04/23 18:28:29.799 (18.368s)&#xA;&gt; Enter [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:29.799&#xA;&lt; Exit [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:30.029 (230ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] configuration-snippet set snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations&#34;" classname="nginx-ingress-controller e2e suite" status="passed" time="21.243303661">
              <system-err>&gt; Enter [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:30.03&#xA;&lt; Exit [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:36.888 (6.859s)&#xA;&gt; Enter [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:31 @ 04/04/23 18:28:36.888&#xA;&lt; Exit [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:31 @ 04/04/23 18:28:40.919 (4.03s)&#xA;&gt; Enter [It] set snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations&#34; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:35 @ 04/04/23 18:28:40.919&#xA;&lt; Exit [It] set snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations&#34; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:35 @ 04/04/23 18:28:51.095 (10.176s)&#xA;&gt; Enter [AfterEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:51.095&#xA;&lt; Exit [AfterEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:51.273 (178ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canary is created should route requests to the correct upstream if the canary ingress is modified" classname="nginx-ingress-controller e2e suite" status="passed" time="41.082860994">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:51.273&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:59.672 (8.399s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:28:59.672&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:29:07.713 (8.041s)&#xA;&gt; Enter [It] should route requests to the correct upstream if the canary ingress is modified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:307 @ 04/04/23 18:29:07.713&#xA;STEP: routing requests destined for the mainline ingress to the mainline upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:351 @ 04/04/23 18:29:32.166&#xA;STEP: routing requests destined for the canary ingress to the canary upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:360 @ 04/04/23 18:29:32.169&#xA;&lt; Exit [It] should route requests to the correct upstream if the canary ingress is modified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:307 @ 04/04/23 18:29:32.172 (24.459s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:32.172&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:32.356 (184ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should not create additional upstream block when auth-keepalive is negative" classname="nginx-ingress-controller e2e suite" status="passed" time="48.516222384">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:32.356&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:39.249 (6.892s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:29:39.249&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:29:43.271 (4.022s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:29:43.271&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:29:57.423 (14.152s)&#xA;&gt; Enter [It] should not create additional upstream block when auth-keepalive is negative - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:590 @ 04/04/23 18:29:57.423&#xA;&lt; Exit [It] should not create additional upstream block when auth-keepalive is negative - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:590 @ 04/04/23 18:30:20.684 (23.26s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:20.684&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:20.873 (189ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-sync-events should create sync events" classname="nginx-ingress-controller e2e suite" status="passed" time="28.393909326">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:20.873&#xA;&lt; Exit [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:27.823 (6.95s)&#xA;&gt; Enter [It] should create sync events - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:53 @ 04/04/23 18:30:27.823&#xA;&lt; Exit [It] should create sync events - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:53 @ 04/04/23 18:30:49.071 (21.248s)&#xA;&gt; Enter [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:49.071&#xA;&lt; Exit [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:49.267 (196ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should set client_body_buffer_size to 1K" classname="nginx-ingress-controller e2e suite" status="passed" time="21.295000977">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:49.267&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:56.179 (6.912s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 04/04/23 18:30:56.179&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 04/04/23 18:31:00.207 (4.028s)&#xA;&gt; Enter [It] should set client_body_buffer_size to 1K - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:57 @ 04/04/23 18:31:00.207&#xA;&lt; Exit [It] should set client_body_buffer_size to 1K - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:57 @ 04/04/23 18:31:10.334 (10.127s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:31:10.334&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:31:10.562 (228ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured keeps processing new ingresses even if one of the existing ingresses is misconfigured" classname="nginx-ingress-controller e2e suite" status="passed" time="36.595408248">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:31:10.562&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:31:17.468 (6.905s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:31:17.468&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:31:21.488 (4.02s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:31:21.488&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:31:35.745 (14.257s)&#xA;&gt; Enter [It] keeps processing new ingresses even if one of the existing ingresses is misconfigured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:505 @ 04/04/23 18:31:35.745&#xA;&lt; Exit [It] keeps processing new ingresses even if one of the existing ingresses is misconfigured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:505 @ 04/04/23 18:31:46.949 (11.204s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:31:46.949&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:31:47.158 (209ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow origin for cors" classname="nginx-ingress-controller e2e suite" status="passed" time="19.176493735">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:31:47.158&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:31:55.054 (7.895s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:31:55.054&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:31:59.086 (4.032s)&#xA;&gt; Enter [It] should allow origin for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:110 @ 04/04/23 18:31:59.086&#xA;&lt; Exit [It] should allow origin for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:110 @ 04/04/23 18:32:06.117 (7.031s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:06.117&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:06.335 (217ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] no-auth-locations should return status code 200 when accessing &#39;/&#39;  authentication" classname="nginx-ingress-controller e2e suite" status="passed" time="27.949951743">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:06.335&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:13.216 (6.881s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 04/04/23 18:32:13.216&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 04/04/23 18:32:30.126 (16.91s)&#xA;&gt; Enter [It] should return status code 200 when accessing &#39;/&#39;  authentication - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:68 @ 04/04/23 18:32:30.126&#xA;&lt; Exit [It] should return status code 200 when accessing &#39;/&#39;  authentication - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:68 @ 04/04/23 18:32:34.111 (3.985s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:34.111&#xA;&lt; Exit [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:34.285 (174ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not allow - single origin without port and origin with required port" classname="nginx-ingress-controller e2e suite" status="passed" time="19.142361956">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:34.285&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:42.164 (7.878s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:32:42.164&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:32:46.19 (4.026s)&#xA;&gt; Enter [It] should not allow - single origin without port and origin with required port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:405 @ 04/04/23 18:32:46.19&#xA;&lt; Exit [It] should not allow - single origin without port and origin with required port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:405 @ 04/04/23 18:32:53.221 (7.031s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:53.221&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:53.428 (207ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should set gzip_min_length to 100" classname="nginx-ingress-controller e2e suite" status="passed" time="24.269620195999998">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:53.428&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:00.295 (6.867s)&#xA;&gt; Enter [It] should set gzip_min_length to 100 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:78 @ 04/04/23 18:33:00.295&#xA;&lt; Exit [It] should set gzip_min_length to 100 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:78 @ 04/04/23 18:33:17.519 (17.224s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:17.519&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:17.698 (178ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] global-options should have worker_rlimit_nofile option and be independent on amount of worker processes" classname="nginx-ingress-controller e2e suite" status="passed" time="17.207554955">
              <system-err>&gt; Enter [BeforeEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:17.698&#xA;&lt; Exit [BeforeEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:24.578 (6.881s)&#xA;&gt; Enter [It] should have worker_rlimit_nofile option and be independent on amount of worker processes - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_options.go:38 @ 04/04/23 18:33:24.578&#xA;&lt; Exit [It] should have worker_rlimit_nofile option and be independent on amount of worker processes - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_options.go:38 @ 04/04/23 18:33:34.73 (10.152s)&#xA;&gt; Enter [AfterEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:34.73&#xA;&lt; Exit [AfterEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:34.905 (175ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the upstream keep alive should set keepalive time to upstream server" classname="nginx-ingress-controller e2e suite" status="passed" time="31.352569677">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:34.906&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:44.808 (9.902s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 04/04/23 18:33:44.808&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 04/04/23 18:33:55.842 (11.034s)&#xA;&gt; Enter [It] should set keepalive time to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:77 @ 04/04/23 18:33:55.842&#xA;&lt; Exit [It] should set keepalive time to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:77 @ 04/04/23 18:34:05.994 (10.152s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:05.994&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:06.258 (264ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Memory Leak] Dynamic Certificates should not leak memory from ingress SSL certificates or configuration updates" classname="nginx-ingress-controller e2e suite" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [Shutdown] ingress controller should shutdown in less than 60 secons without pending connections" classname="nginx-ingress-controller e2e suite" status="passed" time="30.340601041">
              <system-err>&gt; Enter [BeforeEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:06.259&#xA;&lt; Exit [BeforeEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:14.168 (7.909s)&#xA;&gt; Enter [BeforeEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/shutdown.go:35 @ 04/04/23 18:34:14.168&#xA;&lt; Exit [BeforeEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/shutdown.go:35 @ 04/04/23 18:34:25.207 (11.04s)&#xA;&gt; Enter [It] should shutdown in less than 60 secons without pending connections - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/shutdown.go:40 @ 04/04/23 18:34:25.207&#xA;&lt; Exit [It] should shutdown in less than 60 secons without pending connections - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/shutdown.go:40 @ 04/04/23 18:34:36.4 (11.193s)&#xA;&gt; Enter [AfterEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:36.4&#xA;&lt; Exit [AfterEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:36.599 (199ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured with a custom redirect param should return status code 200 when signed in" classname="nginx-ingress-controller e2e suite" status="passed" time="26.351221493">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:36.6&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:44.48 (7.88s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:34:44.48&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:34:48.503 (4.024s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 04/04/23 18:34:48.503&#xA;&lt; Exit [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 04/04/23 18:35:02.728 (14.224s)&#xA;&gt; Enter [It] should return status code 200 when signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:678 @ 04/04/23 18:35:02.728&#xA;&lt; Exit [It] should return status code 200 when signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:678 @ 04/04/23 18:35:02.742 (15ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:02.742&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:02.951 (209ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should sync ingress on external name service addition/deletion" classname="nginx-ingress-controller e2e suite" status="passed" time="27.600345816">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:02.951&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:09.829 (6.877s)&#xA;&gt; Enter [It] should sync ingress on external name service addition/deletion - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:311 @ 04/04/23 18:35:09.829&#xA;&lt; Exit [It] should sync ingress on external name service addition/deletion - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:311 @ 04/04/23 18:35:30.35 (20.521s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:30.35&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:30.552 (202ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] enable-ssl-passthrough With enable-ssl-passthrough enabled should pass unknown traffic to default backend and handle known traffic" classname="nginx-ingress-controller e2e suite" status="passed" time="47.050402902">
              <system-err>&gt; Enter [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:30.552&#xA;&lt; Exit [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:37.481 (6.929s)&#xA;&gt; Enter [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:39 @ 04/04/23 18:35:37.481&#xA;&lt; Exit [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:39 @ 04/04/23 18:35:48.587 (11.106s)&#xA;&gt; Enter [It] should pass unknown traffic to default backend and handle known traffic - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:79 @ 04/04/23 18:35:48.587&#xA;&lt; Exit [It] should pass unknown traffic to default backend and handle known traffic - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:79 @ 04/04/23 18:36:17.402 (28.814s)&#xA;&gt; Enter [AfterEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:17.402&#xA;&lt; Exit [AfterEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:17.602 (201ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-escape-json and log-format-escape-none should enable the log-format-escape-json" classname="nginx-ingress-controller e2e suite" status="passed" time="28.304476097">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:17.603&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:24.47 (6.867s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 04/04/23 18:36:24.47&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 04/04/23 18:36:35.523 (11.052s)&#xA;&gt; Enter [It] should enable the log-format-escape-json - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:47 @ 04/04/23 18:36:35.523&#xA;&lt; Exit [It] should enable the log-format-escape-json - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:47 @ 04/04/23 18:36:45.69 (10.167s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:45.69&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:45.908 (218ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should 302 redirect to error page instead of 400 when auth-tls-error-page is set" classname="nginx-ingress-controller e2e suite" status="passed" time="25.063507751">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:45.908&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:52.807 (6.899s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 04/04/23 18:36:52.807&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 04/04/23 18:36:56.83 (4.024s)&#xA;&gt; Enter [It] should 302 redirect to error page instead of 400 when auth-tls-error-page is set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:114 @ 04/04/23 18:36:56.83&#xA;&lt; Exit [It] should 302 redirect to error page instead of 400 when auth-tls-error-page is set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:114 @ 04/04/23 18:37:10.803 (13.972s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:10.803&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:10.971 (169ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* cookie set by external authentication server user does not retain cookie if upstream returns error status code" classname="nginx-ingress-controller e2e suite" status="passed" time="32.349310786">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:10.972&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:17.855 (6.884s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:37:17.855&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:37:21.879 (4.023s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 04/04/23 18:37:21.879&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 04/04/23 18:37:43.087 (21.209s)&#xA;&gt; Enter [It] user does not retain cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:422 @ 04/04/23 18:37:43.087&#xA;&lt; Exit [It] user does not retain cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:422 @ 04/04/23 18:37:43.095 (8ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:43.095&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:43.321 (225ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* Single canary Ingress should not use canary as a catch-all server" classname="nginx-ingress-controller e2e suite" status="passed" time="32.401910534">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:43.321&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:50.242 (6.92s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:37:50.242&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:37:58.297 (8.055s)&#xA;&gt; Enter [It] should not use canary as a catch-all server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:863 @ 04/04/23 18:37:58.297&#xA;&lt; Exit [It] should not use canary as a catch-all server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:863 @ 04/04/23 18:38:15.503 (17.206s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:15.503&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:15.723 (220ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] should return 404 sending requests when only a default backend is running" classname="nginx-ingress-controller e2e suite" status="passed" time="16.552121031">
              <system-err>&gt; Enter [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:15.724&#xA;&lt; Exit [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:22.643 (6.92s)&#xA;&gt; Enter [It] should return 404 sending requests when only a default backend is running - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:33 @ 04/04/23 18:38:22.643&#xA;STEP: basic HTTP GET request without host to path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 04/04/23 18:38:27.644&#xA;STEP: basic HTTP GET request without host to path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 04/04/23 18:38:27.657&#xA;STEP: basic HTTPS GET request without host to path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 04/04/23 18:38:27.667&#xA;STEP: basic HTTPS GET request without host to path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 04/04/23 18:38:27.695&#xA;STEP: basic HTTP POST request without host to path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 04/04/23 18:38:27.708&#xA;STEP: basic HTTP POST request without host to path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 04/04/23 18:38:27.712&#xA;STEP: basic HTTPS POST request without host to path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 04/04/23 18:38:28.052&#xA;STEP: basic HTTPS POST request without host to path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 04/04/23 18:38:28.468&#xA;STEP: basic HTTP GET request to host foo.bar.com and path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 04/04/23 18:38:28.852&#xA;STEP: basic HTTP GET request to host foo.bar.com and path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 04/04/23 18:38:29.25&#xA;STEP: basic HTTPS GET request to host foo.bar.com and path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 04/04/23 18:38:29.647&#xA;STEP: basic HTTPS GET request to host foo.bar.com and path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 04/04/23 18:38:30.07&#xA;STEP: basic HTTP POST request to host foo.bar.com and path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 04/04/23 18:38:30.469&#xA;STEP: basic HTTP POST request to host foo.bar.com and path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 04/04/23 18:38:30.847&#xA;STEP: basic HTTPS POST request to host foo.bar.com and path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 04/04/23 18:38:31.252&#xA;STEP: basic HTTPS POST request to host foo.bar.com and path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 04/04/23 18:38:31.65&#xA;&lt; Exit [It] should return 404 sending requests when only a default backend is running - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:33 @ 04/04/23 18:38:32.067 (9.424s)&#xA;&gt; Enter [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:32.067&#xA;&lt; Exit [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:32.276 (208ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should return status code 200 when request whitelisted (via no-auth-locations) service and 401 when request protected service" classname="nginx-ingress-controller e2e suite" status="passed" time="56.980816149">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:32.276&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:40.184 (7.908s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:38:40.184&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:38:48.25 (8.066s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:38:48.25&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 04/04/23 18:38:48.25&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 04/04/23 18:38:58.421&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 04/04/23 18:39:08.584&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:39:18.813 (30.563s)&#xA;&gt; Enter [It] should return status code 200 when request whitelisted (via no-auth-locations) service and 401 when request protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:102 @ 04/04/23 18:39:18.813&#xA;STEP: Adding a no-auth-locations for /bar to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:104 @ 04/04/23 18:39:18.813&#xA;STEP: Sending a request to protected service /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:111 @ 04/04/23 18:39:29.026&#xA;STEP: Sending a request to whitelisted service /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:118 @ 04/04/23 18:39:29.042&#xA;&lt; Exit [It] should return status code 200 when request whitelisted (via no-auth-locations) service and 401 when request protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:102 @ 04/04/23 18:39:29.049 (10.236s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:29.049&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:29.257 (208ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] server-alias should return status code 200 for hosts defined in two ingresses, different path with one alias" classname="nginx-ingress-controller e2e suite" status="passed" time="27.220788713">
              <system-err>&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:29.257&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:37.143 (7.885s)&#xA;&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 04/04/23 18:39:37.143&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 04/04/23 18:39:39.168 (2.025s)&#xA;&gt; Enter [It] should return status code 200 for hosts defined in two ingresses, different path with one alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:87 @ 04/04/23 18:39:39.168&#xA;&lt; Exit [It] should return status code 200 for hosts defined in two ingresses, different path with one alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:87 @ 04/04/23 18:39:56.292 (17.124s)&#xA;&gt; Enter [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:56.292&#xA;&lt; Exit [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:56.478 (186ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the keep alive should set keepalive_timeout" classname="nginx-ingress-controller e2e suite" status="passed" time="28.340439622">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:56.478&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:40:03.36 (6.881s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 04/04/23 18:40:03.36&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 04/04/23 18:40:14.407 (11.047s)&#xA;&gt; Enter [It] should set keepalive_timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:40 @ 04/04/23 18:40:14.407&#xA;&lt; Exit [It] should set keepalive_timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:40 @ 04/04/23 18:40:24.598 (10.191s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:24.598&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:24.819 (221ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] custom HTTP and HTTPS ports with a plain HTTP ingress should set X-Forwarded-Port headers accordingly when listening on a non-default HTTP port" classname="nginx-ingress-controller e2e suite" status="passed" time="32.033196945">
              <system-err>&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:40:24.819&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:40:39.201 (14.382s)&#xA;&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 04/04/23 18:40:39.201&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 04/04/23 18:40:46.467 (7.266s)&#xA;&gt; Enter [It] should set X-Forwarded-Port headers accordingly when listening on a non-default HTTP port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:48 @ 04/04/23 18:40:46.467&#xA;&lt; Exit [It] should set X-Forwarded-Port headers accordingly when listening on a non-default HTTP port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:48 @ 04/04/23 18:40:56.662 (10.195s)&#xA;&gt; Enter [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:56.662&#xA;&lt; Exit [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:56.852 (191ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to grpc:// and use grpc_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="30.964751532">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:04:19.258&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:04:27.76 (8.502s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 04/04/23 18:04:27.76&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 04/04/23 18:04:39.782 (12.022s)&#xA;&gt; Enter [It] should set backend protocol to grpc:// and use grpc_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:64 @ 04/04/23 18:04:39.782&#xA;&lt; Exit [It] should set backend protocol to grpc:// and use grpc_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:64 @ 04/04/23 18:04:49.993 (10.211s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:04:49.993&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:04:50.223 (229ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity without using &#39;modsecurity on;&#39;" classname="nginx-ingress-controller e2e suite" status="passed" time="29.40122161">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:04:50.223&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:04:58.145 (7.922s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:04:58.145&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:05:02.17 (4.025s)&#xA;&gt; Enter [It] should enable modsecurity without using &#39;modsecurity on;&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:110 @ 04/04/23 18:05:02.17&#xA;&lt; Exit [It] should enable modsecurity without using &#39;modsecurity on;&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:110 @ 04/04/23 18:05:19.394 (17.225s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:19.394&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:19.624 (230ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should create additional upstream block when auth-keepalive is set with HTTP/1.x" classname="nginx-ingress-controller e2e suite" status="passed" time="62.641572065">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:19.625&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:26.544 (6.92s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:05:26.544&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:05:30.589 (4.045s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:05:30.589&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:05:58.841 (28.251s)&#xA;&gt; Enter [It] should create additional upstream block when auth-keepalive is set with HTTP/1.x - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:623 @ 04/04/23 18:05:58.841&#xA;&lt; Exit [It] should create additional upstream block when auth-keepalive is set with HTTP/1.x - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:623 @ 04/04/23 18:06:22.065 (23.224s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:22.065&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:22.266 (201ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] block-* should block User-Agents defined in the ConfigMap" classname="nginx-ingress-controller e2e suite" status="passed" time="28.334554031">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:22.267&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:29.196 (6.929s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 04/04/23 18:06:29.196&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 04/04/23 18:06:40.24 (11.044s)&#xA;&gt; Enter [It] should block User-Agents defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:55 @ 04/04/23 18:06:40.24&#xA;&lt; Exit [It] should block User-Agents defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:55 @ 04/04/23 18:06:50.425 (10.185s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:50.425&#xA;&lt; Exit [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:50.601 (177ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] x-forwarded-prefix should set the X-Forwarded-Prefix to the annotation value" classname="nginx-ingress-controller e2e suite" status="passed" time="21.281567841">
              <system-err>&gt; Enter [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:50.602&#xA;&lt; Exit [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:57.545 (6.943s)&#xA;&gt; Enter [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:31 @ 04/04/23 18:06:57.545&#xA;&lt; Exit [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:31 @ 04/04/23 18:07:01.588 (4.043s)&#xA;&gt; Enter [It] should set the X-Forwarded-Prefix to the annotation value - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:35 @ 04/04/23 18:07:01.588&#xA;&lt; Exit [It] should set the X-Forwarded-Prefix to the annotation value - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:35 @ 04/04/23 18:07:11.685 (10.097s)&#xA;&gt; Enter [AfterEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:11.685&#xA;&lt; Exit [AfterEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:11.883 (198ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow correct origins - missing subdomain + origin with wildcard origin and correct origin" classname="nginx-ingress-controller e2e suite" status="passed" time="18.188442412">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:11.883&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:18.774 (6.89s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:07:18.774&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:07:22.815 (4.041s)&#xA;&gt; Enter [It] should allow correct origins - missing subdomain + origin with wildcard origin and correct origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:535 @ 04/04/23 18:07:22.815&#xA;&lt; Exit [It] should allow correct origins - missing subdomain + origin with wildcard origin and correct origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:535 @ 04/04/23 18:07:29.864 (7.049s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:29.864&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:30.072 (208ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] mirror-* should set mirror-target to http://localhost/mirror" classname="nginx-ingress-controller e2e suite" status="passed" time="153.373652478">
              <system-err>&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:30.072&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:48.992 (2m18.92s)&#xA;&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 04/04/23 18:09:48.992&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 04/04/23 18:09:53.047 (4.055s)&#xA;&gt; Enter [It] should set mirror-target to http://localhost/mirror - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:36 @ 04/04/23 18:09:53.047&#xA;&lt; Exit [It] should set mirror-target to http://localhost/mirror - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:36 @ 04/04/23 18:10:03.229 (10.182s)&#xA;&gt; Enter [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:03.229&#xA;&lt; Exit [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:03.446 (217ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 200 when no authentication is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="21.374323588">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:03.446&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:10.362 (6.916s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:10:10.362&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:10:14.4 (4.038s)&#xA;&gt; Enter [It] should return status code 200 when no authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:46 @ 04/04/23 18:10:14.4&#xA;&lt; Exit [It] should return status code 200 when no authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:46 @ 04/04/23 18:10:24.616 (10.216s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:24.616&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:24.82 (204ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-proxy-protocol should respect port passed by the PROXY Protocol" classname="nginx-ingress-controller e2e suite" status="passed" time="110.562959663">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:24.821&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:31.7 (6.879s)&#xA;&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 04/04/23 18:10:31.7&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 04/04/23 18:10:42.759 (11.059s)&#xA;&gt; Enter [It] should respect port passed by the PROXY Protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:46 @ 04/04/23 18:10:42.759&#xA;&lt; Exit [It] should respect port passed by the PROXY Protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:46 @ 04/04/23 18:12:14.993 (1m32.235s)&#xA;&gt; Enter [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:14.993&#xA;&lt; Exit [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:15.384 (390ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 503 when authentication is configured with an invalid secret" classname="nginx-ingress-controller e2e suite" status="passed" time="19.23986285">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:15.384&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:22.265 (6.881s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:12:22.265&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:12:24.285 (2.02s)&#xA;&gt; Enter [It] should return status code 503 when authentication is configured with an invalid secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:65 @ 04/04/23 18:12:24.285&#xA;&lt; Exit [It] should return status code 503 when authentication is configured with an invalid secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:65 @ 04/04/23 18:12:34.441 (10.156s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:34.441&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:34.624 (183ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] Add no tls redirect locations Check no tls redirect locations config" classname="nginx-ingress-controller e2e suite" status="passed" time="27.400615783">
              <system-err>&gt; Enter [BeforeEach] [Setting] Add no tls redirect locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:34.624&#xA;&lt; Exit [BeforeEach] [Setting] Add no tls redirect locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:41.556 (6.931s)&#xA;&gt; Enter [It] Check no tls redirect locations config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_tls_redirect_locations.go:31 @ 04/04/23 18:12:41.556&#xA;&lt; Exit [It] Check no tls redirect locations config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_tls_redirect_locations.go:31 @ 04/04/23 18:13:01.842 (20.286s)&#xA;&gt; Enter [AfterEach] [Setting] Add no tls redirect locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:01.842&#xA;&lt; Exit [AfterEach] [Setting] Add no tls redirect locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:02.025 (183ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not allow - single origin with port and origin without port" classname="nginx-ingress-controller e2e suite" status="passed" time="19.133441454">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:02.025&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:09.923 (7.898s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:13:09.923&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:13:13.962 (4.038s)&#xA;&gt; Enter [It] should not allow - single origin with port and origin without port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:386 @ 04/04/23 18:13:13.962&#xA;&lt; Exit [It] should not allow - single origin with port and origin without port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:386 @ 04/04/23 18:13:20.977 (7.016s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:20.977&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:21.159 (181ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-escape-json and log-format-escape-none should disable the log-format-escape-json" classname="nginx-ingress-controller e2e suite" status="passed" time="29.267500447">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:21.159&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:29.044 (7.885s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 04/04/23 18:13:29.044&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 04/04/23 18:13:40.088 (11.044s)&#xA;&gt; Enter [It] should disable the log-format-escape-json - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:55 @ 04/04/23 18:13:40.088&#xA;&lt; Exit [It] should disable the log-format-escape-json - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:55 @ 04/04/23 18:13:50.23 (10.141s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:50.23&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:50.426 (197ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication with caching is configured should deny login for different servers" classname="nginx-ingress-controller e2e suite" status="passed" time="128.935461321">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:50.427&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:57.36 (6.933s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:13:57.36&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:14:01.385 (4.026s)&#xA;&gt; Enter [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 04/04/23 18:14:01.385&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 04/04/23 18:14:06.428&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 04/04/23 18:14:16.618&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 04/04/23 18:14:26.768&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 04/04/23 18:14:36.897&#xA;&lt; Exit [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 04/04/23 18:14:52.087 (50.702s)&#xA;&gt; Enter [It] should deny login for different servers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:820 @ 04/04/23 18:14:52.087&#xA;STEP: logging into server thisHost /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:821 @ 04/04/23 18:14:52.087&#xA;STEP: receiving an internal server error without cache on thisHost location /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:833 @ 04/04/23 18:14:59.113&#xA;&lt; Exit [It] should deny login for different servers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:820 @ 04/04/23 18:15:59.128 (1m7.041s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:59.128&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:59.362 (234ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] definition without host should set ingress details variables for ingresses with host without IngressRuleValue, only Backend" classname="nginx-ingress-controller e2e suite" status="passed" time="22.396821642">
              <system-err>&gt; Enter [BeforeEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:59.363&#xA;&lt; Exit [BeforeEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:06.334 (6.971s)&#xA;&gt; Enter [It] should set ingress details variables for ingresses with host without IngressRuleValue, only Backend - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/without_host.go:55 @ 04/04/23 18:16:06.334&#xA;&lt; Exit [It] should set ingress details variables for ingresses with host without IngressRuleValue, only Backend - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/without_host.go:55 @ 04/04/23 18:16:20.803 (14.469s)&#xA;&gt; Enter [AfterEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:20.803&#xA;&lt; Exit [AfterEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:21.76 (957ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] permanent-redirect permanent-redirect-code should respond with a standard redirect code" classname="nginx-ingress-controller e2e suite" status="passed" time="19.639351578">
              <system-err>&gt; Enter [BeforeEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:21.77&#xA;&lt; Exit [BeforeEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:31.035 (9.266s)&#xA;&gt; Enter [It] should respond with a standard redirect code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:33 @ 04/04/23 18:16:31.035&#xA;STEP: setting permanent-redirect annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:34 @ 04/04/23 18:16:31.036&#xA;STEP: sending request to redirected URL path - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:52 @ 04/04/23 18:16:41.175&#xA;&lt; Exit [It] should respond with a standard redirect code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:33 @ 04/04/23 18:16:41.182 (10.147s)&#xA;&gt; Enter [AfterEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:41.182&#xA;&lt; Exit [AfterEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:41.409 (227ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-catch-all should allow Ingress with rules" classname="nginx-ingress-controller e2e suite" status="passed" time="159.265969917">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:41.409&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:57.856 (2m16.447s)&#xA;&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 04/04/23 18:18:57.856&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 04/04/23 18:19:09.919 (12.063s)&#xA;&gt; Enter [It] should allow Ingress with rules - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:123 @ 04/04/23 18:19:09.919&#xA;&lt; Exit [It] should allow Ingress with rules - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:123 @ 04/04/23 18:19:20.272 (10.353s)&#xA;&gt; Enter [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:20.272&#xA;&lt; Exit [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:20.675 (403ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should return 200 using auth-tls-match-cn where atleast one of the regex options matches CN from client" classname="nginx-ingress-controller e2e suite" status="passed" time="23.386440713">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:20.677&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:28.892 (8.215s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 04/04/23 18:19:28.892&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 04/04/23 18:19:32.924 (4.032s)&#xA;&gt; Enter [It] should return 200 using auth-tls-match-cn where atleast one of the regex options matches CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:324 @ 04/04/23 18:19:32.924&#xA;&lt; Exit [It] should return 200 using auth-tls-match-cn where atleast one of the regex options matches CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:324 @ 04/04/23 18:19:43.863 (10.939s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:43.863&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:44.064 (200ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure Opentelemetry should exists opentelemetry directive when is enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="29.635463259">
              <system-err>&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:44.064&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:53.434 (9.37s)&#xA;&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 04/04/23 18:19:53.434&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 04/04/23 18:19:55.451 (2.017s)&#xA;&gt; Enter [It] should exists opentelemetry directive when is enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:60 @ 04/04/23 18:19:55.451&#xA;&lt; Exit [It] should exists opentelemetry directive when is enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:60 @ 04/04/23 18:20:12.863 (17.412s)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:12.863&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:13.699 (836ms)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 04/04/23 18:20:13.699&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 04/04/23 18:20:13.699 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should not set invalid proxy timeouts" classname="nginx-ingress-controller e2e suite" status="passed" time="23.437314841">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:13.7&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:22.723 (9.023s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:20:22.723&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:20:26.762 (4.038s)&#xA;&gt; Enter [It] should not set invalid proxy timeouts - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:136 @ 04/04/23 18:20:26.762&#xA;&lt; Exit [It] should not set invalid proxy timeouts - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:136 @ 04/04/23 18:20:36.907 (10.146s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:36.907&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:37.137 (230ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure Opentelemetry should not exists opentelemetry directive" classname="nginx-ingress-controller e2e suite" status="passed" time="29.375459507">
              <system-err>&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:37.137&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:45.044 (7.907s)&#xA;&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 04/04/23 18:20:45.044&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 04/04/23 18:20:49.07 (4.026s)&#xA;&gt; Enter [It] should not exists opentelemetry directive - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:47 @ 04/04/23 18:20:49.07&#xA;&lt; Exit [It] should not exists opentelemetry directive - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:47 @ 04/04/23 18:21:06.287 (17.217s)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:06.287&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:06.513 (226ms)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 04/04/23 18:21:06.513&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 04/04/23 18:21:06.513 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 401 and cors headers when authentication and cors is configured but Authorization header is not configured" classname="nginx-ingress-controller e2e suite" status="passed" time="20.138129865">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:06.513&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:13.397 (6.884s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:21:13.397&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:21:15.42 (2.023s)&#xA;&gt; Enter [It] should return status code 401 and cors headers when authentication and cors is configured but Authorization header is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:144 @ 04/04/23 18:21:15.42&#xA;&lt; Exit [It] should return status code 401 and cors headers when authentication and cors is configured but Authorization header is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:144 @ 04/04/23 18:21:26.454 (11.034s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:26.454&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:26.651 (198ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] access-log http-access-log-path &amp; stream-access-log-path use the specified configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="17.272214647">
              <system-err>&gt; Enter [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:26.652&#xA;&lt; Exit [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:33.515 (6.863s)&#xA;&gt; Enter [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:80 @ 04/04/23 18:21:33.515&#xA;&lt; Exit [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:80 @ 04/04/23 18:21:43.707 (10.192s)&#xA;&gt; Enter [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:43.707&#xA;&lt; Exit [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:43.924 (216ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow - single origin for multiple cors values" classname="nginx-ingress-controller e2e suite" status="passed" time="18.136904986">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:43.924&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:50.816 (6.892s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:21:50.816&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:21:54.851 (4.035s)&#xA;&gt; Enter [It] should allow - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:169 @ 04/04/23 18:21:54.851&#xA;&lt; Exit [It] should allow - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:169 @ 04/04/23 18:22:01.873 (7.022s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:01.873&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:02.061 (188ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-upstream with log-format-escape-json and log-format-escape-none log-format-escape-json enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="32.345578464">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:02.061&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:09.943 (7.882s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 04/04/23 18:22:09.943&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 04/04/23 18:22:20.994 (11.051s)&#xA;&gt; Enter [It] log-format-escape-json enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:82 @ 04/04/23 18:22:20.994&#xA;&lt; Exit [It] log-format-escape-json enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:82 @ 04/04/23 18:22:34.191 (13.197s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:34.191&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:34.407 (216ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] [PathType] mix Exact and Prefix paths should choose the correct location" classname="nginx-ingress-controller e2e suite" status="passed" time="45.509310566">
              <system-err>&gt; Enter [BeforeEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:34.407&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:41.334 (6.927s)&#xA;&gt; Enter [BeforeEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:33 @ 04/04/23 18:22:41.334&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:33 @ 04/04/23 18:22:45.355 (4.021s)&#xA;&gt; Enter [It] should choose the correct location - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:39 @ 04/04/23 18:22:45.355&#xA;STEP: Checking exact request to / - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:63 @ 04/04/23 18:23:02.535&#xA;STEP: Checking prefix request to /bar - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:76 @ 04/04/23 18:23:02.543&#xA;STEP: Checking exact request to /foo - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:109 @ 04/04/23 18:23:19.72&#xA;STEP: Checking prefix request to /foo/bar - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:122 @ 04/04/23 18:23:19.723&#xA;STEP: Checking prefix request to /foobar - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:134 @ 04/04/23 18:23:19.724&#xA;&lt; Exit [It] should choose the correct location - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:39 @ 04/04/23 18:23:19.726 (34.371s)&#xA;&gt; Enter [AfterEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:19.726&#xA;&lt; Exit [AfterEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:19.917 (190ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should set client_body_buffer_size to 1m" classname="nginx-ingress-controller e2e suite" status="passed" time="22.336168959">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:19.917&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:27.858 (7.94s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 04/04/23 18:23:27.858&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 04/04/23 18:23:31.884 (4.027s)&#xA;&gt; Enter [It] should set client_body_buffer_size to 1m - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:101 @ 04/04/23 18:23:31.884&#xA;&lt; Exit [It] should set client_body_buffer_size to 1m - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:101 @ 04/04/23 18:23:42.035 (10.15s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:42.035&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:42.253 (218ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-forwarded-headers should not trust X-Forwarded headers when setting is false" classname="nginx-ingress-controller e2e suite" status="passed" time="34.740529941">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:42.254&#xA;&lt; Exit [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:50.152 (7.898s)&#xA;&gt; Enter [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:35 @ 04/04/23 18:23:50.152&#xA;&lt; Exit [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:35 @ 04/04/23 18:23:59.193 (9.041s)&#xA;&gt; Enter [It] should not trust X-Forwarded headers when setting is false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:92 @ 04/04/23 18:23:59.193&#xA;&lt; Exit [It] should not trust X-Forwarded headers when setting is false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:92 @ 04/04/23 18:24:16.594 (17.4s)&#xA;&gt; Enter [AfterEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:16.594&#xA;&lt; Exit [AfterEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:16.994 (401ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by weight should route requests split between mainline and canary if canary weight is 100 and weight total is 200" classname="nginx-ingress-controller e2e suite" status="passed" time="72.078446664">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:16.995&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:25.428 (8.433s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:24:25.428&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:24:33.475 (8.047s)&#xA;&gt; Enter [It] should route requests split between mainline and canary if canary weight is 100 and weight total is 200 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:834 @ 04/04/23 18:24:33.475&#xA;&lt; Exit [It] should route requests split between mainline and canary if canary weight is 100 and weight total is 200 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:834 @ 04/04/23 18:25:28.827 (55.352s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:28.827&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:29.073 (245ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] http2-push-preload enable the http2-push-preload directive" classname="nginx-ingress-controller e2e suite" status="passed" time="21.276652741">
              <system-err>&gt; Enter [BeforeEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:29.073&#xA;&lt; Exit [BeforeEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:35.955 (6.882s)&#xA;&gt; Enter [BeforeEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/http2pushpreload.go:30 @ 04/04/23 18:25:35.955&#xA;&lt; Exit [BeforeEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/http2pushpreload.go:30 @ 04/04/23 18:25:39.976 (4.021s)&#xA;&gt; Enter [It] enable the http2-push-preload directive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/http2pushpreload.go:34 @ 04/04/23 18:25:39.976&#xA;&lt; Exit [It] enable the http2-push-preload directive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/http2pushpreload.go:34 @ 04/04/23 18:25:50.116 (10.14s)&#xA;&gt; Enter [AfterEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:50.116&#xA;&lt; Exit [AfterEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:50.35 (233ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] enable-real-ip trusts X-Forwarded-For header only when setting is true" classname="nginx-ingress-controller e2e suite" status="passed" time="35.407310527">
              <system-err>&gt; Enter [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:50.35&#xA;&lt; Exit [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:57.262 (6.911s)&#xA;&gt; Enter [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:35 @ 04/04/23 18:25:57.262&#xA;&lt; Exit [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:35 @ 04/04/23 18:26:08.325 (11.063s)&#xA;&gt; Enter [It] trusts X-Forwarded-For header only when setting is true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:40 @ 04/04/23 18:26:08.325&#xA;STEP: ensuring single values are parsed correctly - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:54 @ 04/04/23 18:26:25.541&#xA;&lt; Exit [It] trusts X-Forwarded-For header only when setting is true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:40 @ 04/04/23 18:26:25.551 (17.226s)&#xA;&gt; Enter [AfterEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:25.551&#xA;&lt; Exit [AfterEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:25.758 (207ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should disable modsecurity" classname="nginx-ingress-controller e2e suite" status="passed" time="21.301340903">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:25.758&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:32.641 (6.883s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:26:32.641&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:26:36.668 (4.026s)&#xA;&gt; Enter [It] should disable modsecurity - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:74 @ 04/04/23 18:26:36.668&#xA;&lt; Exit [It] should disable modsecurity - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:74 @ 04/04/23 18:26:46.879 (10.212s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:46.879&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:47.059 (180ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity through the config map but ignore snippet as disabled by admin" classname="nginx-ingress-controller e2e suite" status="passed" time="40.382987384">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:47.06&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:53.958 (6.898s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:26:53.958&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:26:57.986 (4.028s)&#xA;&gt; Enter [It] should enable modsecurity through the config map but ignore snippet as disabled by admin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:305 @ 04/04/23 18:26:57.986&#xA;&lt; Exit [It] should enable modsecurity through the config map but ignore snippet as disabled by admin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:305 @ 04/04/23 18:27:27.257 (29.271s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:27.257&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:27.443 (186ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] denylist-source-range only allow explicitly allowed IPs, deny all others" classname="nginx-ingress-controller e2e suite" status="passed" time="35.459281249">
              <system-err>&gt; Enter [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:27.443&#xA;&lt; Exit [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:34.37 (6.927s)&#xA;&gt; Enter [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:31 @ 04/04/23 18:27:34.37&#xA;&lt; Exit [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:31 @ 04/04/23 18:27:38.399 (4.029s)&#xA;&gt; Enter [It] only allow explicitly allowed IPs, deny all others - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:86 @ 04/04/23 18:27:38.399&#xA;STEP: sending request from an explicitly denied IP range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:115 @ 04/04/23 18:27:55.604&#xA;STEP: sending request from an implicitly denied IP - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:123 @ 04/04/23 18:27:55.61&#xA;STEP: sending request from an explicitly allowed IP range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:131 @ 04/04/23 18:27:55.616&#xA;STEP: sending request from an explicitly allowed IP range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:139 @ 04/04/23 18:27:55.623&#xA;&lt; Exit [It] only allow explicitly allowed IPs, deny all others - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:86 @ 04/04/23 18:28:02.653 (24.254s)&#xA;&gt; Enter [AfterEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:02.653&#xA;&lt; Exit [AfterEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:02.902 (249ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] enable-multi-accept should be disabled when set to false" classname="nginx-ingress-controller e2e suite" status="passed" time="17.373623456">
              <system-err>&gt; Enter [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:02.903&#xA;&lt; Exit [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:09.803 (6.9s)&#xA;&gt; Enter [It] should be disabled when set to false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:49 @ 04/04/23 18:28:09.803&#xA;&lt; Exit [It] should be disabled when set to false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:49 @ 04/04/23 18:28:20.04 (10.238s)&#xA;&gt; Enter [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:20.041&#xA;&lt; Exit [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:20.276 (236ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to grpcs:// and use grpc_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="20.243088476">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:20.277&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:28.169 (7.892s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 04/04/23 18:28:28.169&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 04/04/23 18:28:30.185 (2.016s)&#xA;&gt; Enter [It] should set backend protocol to grpcs:// and use grpc_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:79 @ 04/04/23 18:28:30.185&#xA;&lt; Exit [It] should set backend protocol to grpcs:// and use grpc_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:79 @ 04/04/23 18:28:40.334 (10.15s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:40.334&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:40.52 (185ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should redirect to signin url when not signed in" classname="nginx-ingress-controller e2e suite" status="passed" time="25.246171205">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:40.52&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:47.397 (6.877s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:28:47.397&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:28:51.425 (4.028s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:28:51.425&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:29:05.527 (14.103s)&#xA;&gt; Enter [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:494 @ 04/04/23 18:29:05.527&#xA;&lt; Exit [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:494 @ 04/04/23 18:29:05.539 (12ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:05.539&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:05.766 (227ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-connect-timeout should set valid proxy timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="28.356651539">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:05.767&#xA;&lt; Exit [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:12.664 (6.897s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:32 @ 04/04/23 18:29:12.664&#xA;&lt; Exit [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:32 @ 04/04/23 18:29:16.693 (4.029s)&#xA;&gt; Enter [It] should set valid proxy timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:36 @ 04/04/23 18:29:16.693&#xA;&lt; Exit [It] should set valid proxy timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:36 @ 04/04/23 18:29:33.899 (17.207s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:33.899&#xA;&lt; Exit [AfterEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:34.123 (224ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity with transaction ID and OWASP rules" classname="nginx-ingress-controller e2e suite" status="passed" time="22.251075828">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:34.124&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:42.012 (7.888s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:29:42.012&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:29:46.039 (4.027s)&#xA;&gt; Enter [It] should enable modsecurity with transaction ID and OWASP rules - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:53 @ 04/04/23 18:29:46.039&#xA;&lt; Exit [It] should enable modsecurity with transaction ID and OWASP rules - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:53 @ 04/04/23 18:29:56.186 (10.147s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:56.186&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:56.375 (189ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should change the default proxy HTTP version" classname="nginx-ingress-controller e2e suite" status="passed" time="21.310489423">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:56.375&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:03.267 (6.892s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:30:03.267&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:30:07.298 (4.031s)&#xA;&gt; Enter [It] should change the default proxy HTTP version - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:233 @ 04/04/23 18:30:07.298&#xA;&lt; Exit [It] should change the default proxy HTTP version - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:233 @ 04/04/23 18:30:17.47 (10.172s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:17.47&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:17.686 (215ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [SSL] secret update should return the fake SSL certificate if the secret is invalid" classname="nginx-ingress-controller e2e suite" status="passed" time="154.723842483">
              <system-err>&gt; Enter [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:17.686&#xA;&lt; Exit [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:35.008 (2m17.322s)&#xA;&gt; Enter [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:36 @ 04/04/23 18:32:35.008&#xA;&lt; Exit [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:36 @ 04/04/23 18:32:39.033 (4.025s)&#xA;&gt; Enter [It] should return the fake SSL certificate if the secret is invalid - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:82 @ 04/04/23 18:32:39.033&#xA;&lt; Exit [It] should return the fake SSL certificate if the secret is invalid - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:82 @ 04/04/23 18:32:52.207 (13.174s)&#xA;&gt; Enter [AfterEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:52.207&#xA;&lt; Exit [AfterEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:52.41 (203ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should set client_body_buffer_size to 1000" classname="nginx-ingress-controller e2e suite" status="passed" time="21.380029765">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:52.41&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:59.312 (6.902s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 04/04/23 18:32:59.312&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 04/04/23 18:33:03.343 (4.031s)&#xA;&gt; Enter [It] should set client_body_buffer_size to 1000 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:35 @ 04/04/23 18:33:03.343&#xA;&lt; Exit [It] should set client_body_buffer_size to 1000 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:35 @ 04/04/23 18:33:13.571 (10.227s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:13.571&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:13.79 (220ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] OCSP should enable OCSP and contain stapling information in the connection" classname="nginx-ingress-controller e2e suite" status="passed" time="52.538209784">
              <system-err>&gt; Enter [BeforeEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:13.791&#xA;&lt; Exit [BeforeEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:20.666 (6.876s)&#xA;&gt; Enter [BeforeEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:45 @ 04/04/23 18:33:20.666&#xA;&lt; Exit [BeforeEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:45 @ 04/04/23 18:33:24.686 (4.02s)&#xA;&gt; Enter [It] should enable OCSP and contain stapling information in the connection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:49 @ 04/04/23 18:33:24.686&#xA;STEP: running cfssl gencert -initca ca_csr.json | cfssljson -bare ca - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:216 @ 04/04/23 18:33:31.697&#xA;STEP: running cfssl gencert -ca ca.pem -ca-key ca-key.pem -config=cfssl_config.json -profile=intermediate intermediate_ca_csr.json | cfssljson -bare intermediate_ca - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:216 @ 04/04/23 18:33:32.042&#xA;STEP: running cfssl gencert -ca intermediate_ca.pem -ca-key intermediate_ca-key.pem -config=cfssl_config.json -profile=ocsp ocsp_csr.json | cfssljson -bare ocsp - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:216 @ 04/04/23 18:33:32.211&#xA;STEP: running cfssl serve -db-config=db-config.json -ca-key=intermediate_ca-key.pem -ca=intermediate_ca.pem -config=cfssl_config.json -responder=ocsp.pem -responder-key=ocsp-key.pem - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:228 @ 04/04/23 18:33:32.385&#xA;STEP: running cfssl gencert -remote=localhost -profile=server leaf_csr.json | cfssljson -bare leaf - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:238 @ 04/04/23 18:33:37.385&#xA;STEP: running cfssl ocsprefresh -ca intermediate_ca.pem -responder=ocsp.pem -responder-key=ocsp-key.pem -db-config=db-config.json - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:252 @ 04/04/23 18:33:37.548&#xA;&lt; Exit [It] should enable OCSP and contain stapling information in the connection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:49 @ 04/04/23 18:34:06.016 (41.33s)&#xA;&gt; Enter [AfterEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:06.016&#xA;&lt; Exit [AfterEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:06.329 (312ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] satisfy should allow multiple auth with satisfy any" classname="nginx-ingress-controller e2e suite" status="passed" time="27.083879161">
              <system-err>&gt; Enter [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:06.329&#xA;&lt; Exit [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:13.238 (6.909s)&#xA;&gt; Enter [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:38 @ 04/04/23 18:34:13.238&#xA;&lt; Exit [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:38 @ 04/04/23 18:34:17.265 (4.027s)&#xA;&gt; Enter [It] should allow multiple auth with satisfy any - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:84 @ 04/04/23 18:34:17.265&#xA;&lt; Exit [It] should allow multiple auth with satisfy any - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:84 @ 04/04/23 18:34:33.244 (15.979s)&#xA;&gt; Enter [AfterEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:33.244&#xA;&lt; Exit [AfterEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:33.413 (169ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should not set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is not configured" classname="nginx-ingress-controller e2e suite" status="passed" time="21.260634154999998">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:33.413&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:40.3 (6.887s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:34:40.3&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:34:44.318 (4.018s)&#xA;&gt; Enter [It] should not set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:284 @ 04/04/23 18:34:44.318&#xA;&lt; Exit [It] should not set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:284 @ 04/04/23 18:34:54.489 (10.171s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:54.489&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:54.674 (185ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic configuration when only backends change handles endpoints only changes consistently (down scaling of replicas vs. empty service)" classname="nginx-ingress-controller e2e suite" status="passed" time="47.623291228">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:54.674&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:01.542 (6.868s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 04/04/23 18:35:01.542&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 04/04/23 18:35:15.829 (14.287s)&#xA;&gt; Enter [It] handles endpoints only changes consistently (down scaling of replicas vs. empty service) - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:125 @ 04/04/23 18:35:15.829&#xA;&lt; Exit [It] handles endpoints only changes consistently (down scaling of replicas vs. empty service) - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:125 @ 04/04/23 18:35:42.1 (26.271s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:42.1&#xA;&lt; Exit [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:42.298 (198ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) should configure HSTS policy header setting preload parameter" classname="nginx-ingress-controller e2e suite" status="passed" time="33.446353768">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:42.298&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:50.176 (7.878s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 04/04/23 18:35:50.176&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 04/04/23 18:35:54.197 (4.021s)&#xA;&gt; Enter [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 04/04/23 18:35:54.197&#xA;Apr  4 18:36:03.338: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not settings-tls&#xA;&lt; Exit [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 04/04/23 18:36:05.327 (11.13s)&#xA;&gt; Enter [It] setting preload parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:146 @ 04/04/23 18:36:05.327&#xA;&lt; Exit [It] setting preload parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:146 @ 04/04/23 18:36:15.512 (10.185s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:15.512&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:15.744 (233ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Endpointslices] long service name should return 200 when service name has max allowed number of characters 63" classname="nginx-ingress-controller e2e suite" status="passed" time="22.305086">
              <system-err>&gt; Enter [BeforeEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:15.745&#xA;&lt; Exit [BeforeEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:23.617 (7.872s)&#xA;&gt; Enter [BeforeEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/longname.go:34 @ 04/04/23 18:36:23.617&#xA;&lt; Exit [BeforeEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/longname.go:34 @ 04/04/23 18:36:27.64 (4.023s)&#xA;&gt; Enter [It] should return 200 when service name has max allowed number of characters 63 - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/longname.go:38 @ 04/04/23 18:36:27.64&#xA;STEP: checking if the service is reached - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/longname.go:48 @ 04/04/23 18:36:37.807&#xA;&lt; Exit [It] should return 200 when service name has max allowed number of characters 63 - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/longname.go:38 @ 04/04/23 18:36:37.815 (10.175s)&#xA;&gt; Enter [AfterEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:37.815&#xA;&lt; Exit [AfterEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:38.05 (235ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - FastCGI should add fastcgi_index in the configuration file" classname="nginx-ingress-controller e2e suite" status="passed" time="20.255437009">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:38.05&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:45.936 (7.886s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 04/04/23 18:36:45.936&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 04/04/23 18:36:47.961 (2.026s)&#xA;&gt; Enter [It] should add fastcgi_index in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:54 @ 04/04/23 18:36:47.961&#xA;&lt; Exit [It] should add fastcgi_index in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:54 @ 04/04/23 18:36:58.079 (10.118s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:58.079&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:58.306 (226ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity globally and with modsecurity-snippet block requests" classname="nginx-ingress-controller e2e suite" status="passed" time="171.582212664">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:58.306&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:16.416 (2m18.11s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:39:16.416&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:39:20.463 (4.047s)&#xA;&gt; Enter [It] should enable modsecurity globally and with modsecurity-snippet block requests - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:189 @ 04/04/23 18:39:20.463&#xA;&lt; Exit [It] should enable modsecurity globally and with modsecurity-snippet block requests - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:189 @ 04/04/23 18:39:49.668 (29.205s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:49.668&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:49.888 (220ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) ports or X-Forwarded-Host check during HTTP tp HTTPS redirection should not use ports during the HTTP to HTTPS redirection" classname="nginx-ingress-controller e2e suite" status="passed" time="23.299518785">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:49.888&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:57.8 (7.912s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 04/04/23 18:39:57.8&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 04/04/23 18:40:01.823 (4.023s)&#xA;&gt; Enter [It] should not use ports during the HTTP to HTTPS redirection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:187 @ 04/04/23 18:40:01.823&#xA;Apr  4 18:40:10.971: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not settings-tls&#xA;&lt; Exit [It] should not use ports during the HTTP to HTTPS redirection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:187 @ 04/04/23 18:40:12.979 (11.155s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:12.979&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:13.188 (209ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should return 200 for service type=ExternalName with a port defined" classname="nginx-ingress-controller e2e suite" status="passed" time="18.584802653">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:40:13.188&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:40:21.087 (7.899s)&#xA;&gt; Enter [It] should return 200 for service type=ExternalName with a port defined - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:129 @ 04/04/23 18:40:21.087&#xA;&lt; Exit [It] should return 200 for service type=ExternalName with a port defined - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:129 @ 04/04/23 18:40:31.585 (10.498s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:31.585&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:31.773 (188ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured with a custom redirect param should redirect to signin url when not signed in" classname="nginx-ingress-controller e2e suite" status="passed" time="25.3240127">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:40:31.773&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:40:38.672 (6.898s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:40:38.672&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:40:42.706 (4.034s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 04/04/23 18:40:42.706&#xA;&lt; Exit [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 04/04/23 18:40:56.901 (14.195s)&#xA;&gt; Enter [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:687 @ 04/04/23 18:40:56.901&#xA;&lt; Exit [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:687 @ 04/04/23 18:40:56.912 (10ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:56.912&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:57.097 (186ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] Annotation - limit-connections should limit-connections" classname="nginx-ingress-controller e2e suite" status="passed" time="44.225945645">
              <system-out>I0404 18:04:54.427675      25 request.go:690] Waited for 1.19834838s due to client-side throttling, not priority and fairness, request: GET:https://10.96.0.1:443/api/v1/namespaces/e2e-tests-limit-connections-1680631459257336272-jn44f/services/nginx-ingress-controller&#xA;</system-out>
              <system-err>&gt; Enter [BeforeEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:04:19.256&#xA;&lt; Exit [BeforeEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:04:26.817 (7.56s)&#xA;&gt; Enter [BeforeEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitconnections.go:34 @ 04/04/23 18:04:26.817&#xA;&lt; Exit [BeforeEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitconnections.go:34 @ 04/04/23 18:04:38.845 (12.028s)&#xA;&gt; Enter [It] should limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitconnections.go:38 @ 04/04/23 18:04:38.845&#xA;&lt; Exit [It] should limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitconnections.go:38 @ 04/04/23 18:05:03.259 (24.414s)&#xA;&gt; Enter [AfterEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:03.259&#xA;&lt; Exit [AfterEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:03.482 (224ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] [PathType] exact should choose exact location for /exact" classname="nginx-ingress-controller e2e suite" status="passed" time="38.595312029">
              <system-err>&gt; Enter [BeforeEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:03.483&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:10.366 (6.883s)&#xA;&gt; Enter [BeforeEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_exact.go:33 @ 04/04/23 18:05:10.366&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_exact.go:33 @ 04/04/23 18:05:14.405 (4.039s)&#xA;&gt; Enter [It] should choose exact location for /exact - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_exact.go:37 @ 04/04/23 18:05:14.405&#xA;&lt; Exit [It] should choose exact location for /exact - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_exact.go:37 @ 04/04/23 18:05:41.807 (27.402s)&#xA;&gt; Enter [AfterEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:41.807&#xA;&lt; Exit [AfterEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:42.078 (271ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] Bad annotation values [BAD_ANNOTATIONS] should drop an ingress if there is an invalid character in some annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="39.725581056">
              <system-err>&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:42.079&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:50.08 (8.002s)&#xA;&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 04/04/23 18:05:50.08&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 04/04/23 18:05:54.108 (4.028s)&#xA;&gt; Enter [It] [BAD_ANNOTATIONS] should drop an ingress if there is an invalid character in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:36 @ 04/04/23 18:05:54.108&#xA;&lt; Exit [It] [BAD_ANNOTATIONS] should drop an ingress if there is an invalid character in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:36 @ 04/04/23 18:06:21.53 (27.422s)&#xA;&gt; Enter [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:21.53&#xA;&lt; Exit [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:21.804 (274ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not break functionality" classname="nginx-ingress-controller e2e suite" status="passed" time="18.152762201">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:21.804&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:28.705 (6.901s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:06:28.705&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:06:32.732 (4.027s)&#xA;&gt; Enter [It] should not break functionality - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:267 @ 04/04/23 18:06:32.732&#xA;&lt; Exit [It] should not break functionality - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:267 @ 04/04/23 18:06:39.756 (7.024s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:39.756&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:39.957 (201ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] app-root should redirect to /foo" classname="nginx-ingress-controller e2e suite" status="passed" time="22.339253677">
              <system-err>&gt; Enter [BeforeEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:39.958&#xA;&lt; Exit [BeforeEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:47.864 (7.907s)&#xA;&gt; Enter [BeforeEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/approot.go:31 @ 04/04/23 18:06:47.864&#xA;&lt; Exit [BeforeEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/approot.go:31 @ 04/04/23 18:06:51.912 (4.047s)&#xA;&gt; Enter [It] should redirect to /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/approot.go:35 @ 04/04/23 18:06:51.912&#xA;&lt; Exit [It] should redirect to /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/approot.go:35 @ 04/04/23 18:07:02.086 (10.175s)&#xA;&gt; Enter [AfterEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:02.086&#xA;&lt; Exit [AfterEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:02.297 (211ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should return 200 using auth-tls-match-cn with matching CN from client" classname="nginx-ingress-controller e2e suite" status="passed" time="22.922113641">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:02.297&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:10.188 (7.891s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 04/04/23 18:07:10.188&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 04/04/23 18:07:14.226 (4.037s)&#xA;&gt; Enter [It] should return 200 using auth-tls-match-cn with matching CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:295 @ 04/04/23 18:07:14.226&#xA;&lt; Exit [It] should return 200 using auth-tls-match-cn with matching CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:295 @ 04/04/23 18:07:25.018 (10.792s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:25.018&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:25.219 (201ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] denylist-source-range only deny explicitly denied IPs, allow all others" classname="nginx-ingress-controller e2e suite" status="passed" time="34.300425996">
              <system-err>&gt; Enter [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:25.22&#xA;&lt; Exit [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:33.104 (7.884s)&#xA;&gt; Enter [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:31 @ 04/04/23 18:07:33.104&#xA;&lt; Exit [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:31 @ 04/04/23 18:07:35.129 (2.025s)&#xA;&gt; Enter [It] only deny explicitly denied IPs, allow all others - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:35 @ 04/04/23 18:07:35.129&#xA;STEP: sending request from an explicitly denied IP range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:61 @ 04/04/23 18:07:52.29&#xA;STEP: sending request from an explicitly denied IP address - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:69 @ 04/04/23 18:07:52.298&#xA;STEP: sending request from an implicitly allowed IP range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:77 @ 04/04/23 18:07:52.304&#xA;&lt; Exit [It] only deny explicitly denied IPs, allow all others - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:35 @ 04/04/23 18:07:59.326 (24.197s)&#xA;&gt; Enter [AfterEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:59.326&#xA;&lt; Exit [AfterEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:59.52 (194ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* Single canary Ingress should not use canary with domain as a server" classname="nginx-ingress-controller e2e suite" status="passed" time="32.388431935">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:59.52&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:08:06.412 (6.892s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:08:06.412&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:08:14.461 (8.049s)&#xA;&gt; Enter [It] should not use canary with domain as a server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:891 @ 04/04/23 18:08:14.461&#xA;&lt; Exit [It] should not use canary with domain as a server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:891 @ 04/04/23 18:08:31.701 (17.24s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:08:31.701&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:08:31.909 (208ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should set &#34;proxy_set_header &#39;My-Custom-Header&#39; &#39;42&#39;;&#34; when auth-headers are set" classname="nginx-ingress-controller e2e suite" status="passed" time="22.408753285">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:08:31.909&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:08:39.801 (7.892s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:08:39.801&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:08:43.836 (4.035s)&#xA;&gt; Enter [It] should set &#34;proxy_set_header &#39;My-Custom-Header&#39; &#39;42&#39;;&#34; when auth-headers are set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:301 @ 04/04/23 18:08:43.836&#xA;&lt; Exit [It] should set &#34;proxy_set_header &#39;My-Custom-Header&#39; &#39;42&#39;;&#34; when auth-headers are set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:301 @ 04/04/23 18:08:54.106 (10.269s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:08:54.106&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:08:54.318 (212ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with value and pattern should routes to mainline upstream when the given Regex causes error" classname="nginx-ingress-controller e2e suite" status="passed" time="32.339918036">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:08:54.318&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:01.207 (6.889s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:09:01.207&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:09:09.264 (8.058s)&#xA;&gt; Enter [It] should routes to mainline upstream when the given Regex causes error - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:566 @ 04/04/23 18:09:09.264&#xA;STEP: routing requests to the mainline upstream when the given Regex causes error - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:591 @ 04/04/23 18:09:26.43&#xA;&lt; Exit [It] should routes to mainline upstream when the given Regex causes error - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:566 @ 04/04/23 18:09:26.434 (17.169s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:26.434&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:26.658 (224ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should delete Ingress when class is removed" classname="nginx-ingress-controller e2e suite" status="passed" time="36.529874252">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:26.658&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:33.593 (6.935s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:09:33.593&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:09:37.637 (4.044s)&#xA;&gt; Enter [It] should delete Ingress when class is removed - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:192 @ 04/04/23 18:09:37.637&#xA;&lt; Exit [It] should delete Ingress when class is removed - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:192 @ 04/04/23 18:10:02.989 (25.352s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:02.989&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:03.188 (199ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should proxy_method method when global-auth-method is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="56.864281316">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:03.189&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:11.089 (7.901s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:10:11.09&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:10:19.123 (8.033s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:10:19.123&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 04/04/23 18:10:19.123&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 04/04/23 18:10:29.295&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 04/04/23 18:10:39.491&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:10:49.631 (30.509s)&#xA;&gt; Enter [It] should proxy_method method when global-auth-method is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:197 @ 04/04/23 18:10:49.631&#xA;STEP: Adding a global-auth-method to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:202 @ 04/04/23 18:10:49.631&#xA;&lt; Exit [It] should proxy_method method when global-auth-method is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:197 @ 04/04/23 18:10:59.844 (10.213s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:59.844&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:00.053 (208ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-connect-timeout should not set invalid proxy timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="159.263240703">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:00.053&#xA;&lt; Exit [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:17.888 (2m17.835s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:32 @ 04/04/23 18:13:17.888&#xA;&lt; Exit [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:32 @ 04/04/23 18:13:21.926 (4.038s)&#xA;&gt; Enter [It] should not set invalid proxy timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:52 @ 04/04/23 18:13:21.926&#xA;&lt; Exit [It] should not set invalid proxy timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:52 @ 04/04/23 18:13:39.103 (17.177s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:39.103&#xA;&lt; Exit [AfterEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:39.316 (214ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - FastCGI should add fastcgi_param in the configuration file" classname="nginx-ingress-controller e2e suite" status="passed" time="22.255464666">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:39.317&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:46.2 (6.883s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 04/04/23 18:13:46.2&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 04/04/23 18:13:51.228 (5.028s)&#xA;&gt; Enter [It] should add fastcgi_param in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:71 @ 04/04/23 18:13:51.228&#xA;&lt; Exit [It] should add fastcgi_param in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:71 @ 04/04/23 18:14:01.351 (10.123s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:01.351&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:01.572 (222ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should enable cors" classname="nginx-ingress-controller e2e suite" status="passed" time="21.227042773">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:01.573&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:08.451 (6.878s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:14:08.451&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:14:12.484 (4.033s)&#xA;&gt; Enter [It] should enable cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:35 @ 04/04/23 18:14:12.484&#xA;&lt; Exit [It] should enable cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:35 @ 04/04/23 18:14:22.62 (10.136s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:22.62&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:22.8 (179ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) should configure HSTS policy header overriding what&#39;s set from the upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="27.764170353">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:22.8&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:29.697 (6.897s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 04/04/23 18:14:29.697&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 04/04/23 18:14:33.724 (4.026s)&#xA;&gt; Enter [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 04/04/23 18:14:33.724&#xA;&lt; Exit [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 04/04/23 18:14:43.071 (9.347s)&#xA;&gt; Enter [It] overriding what&#39;s set from the upstream - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:166 @ 04/04/23 18:14:43.071&#xA;&lt; Exit [It] overriding what&#39;s set from the upstream - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:166 @ 04/04/23 18:14:50.277 (7.207s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:50.277&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:50.564 (287ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates picks up the previously missing secret for a given ingress without reloading" classname="nginx-ingress-controller e2e suite" status="passed" time="31.607242139">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:50.566&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:57.791 (7.225s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 04/04/23 18:14:57.791&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 04/04/23 18:15:01.819 (4.028s)&#xA;&gt; Enter [It] picks up the previously missing secret for a given ingress without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:70 @ 04/04/23 18:15:01.819&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:94 @ 04/04/23 18:15:18.959&#xA;STEP: skipping Nginx reload - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:101 @ 04/04/23 18:15:21.991&#xA;&lt; Exit [It] picks up the previously missing secret for a given ingress without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:70 @ 04/04/23 18:15:22.003 (20.184s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:22.003&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:22.173 (170ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should disable cors allow credentials" classname="nginx-ingress-controller e2e suite" status="passed" time="20.359505705">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:22.173&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:30.052 (7.879s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:15:30.052&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:15:32.076 (2.024s)&#xA;&gt; Enter [It] should disable cors allow credentials - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:94 @ 04/04/23 18:15:32.076&#xA;&lt; Exit [It] should disable cors allow credentials - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:94 @ 04/04/23 18:15:42.292 (10.217s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:42.292&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:42.533 (240ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] no-auth-locations should return status code 200 when accessing &#39;/noauth&#39; unauthenticated" classname="nginx-ingress-controller e2e suite" status="passed" time="29.196807175">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:42.533&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:49.463 (6.93s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 04/04/23 18:15:49.463&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 04/04/23 18:16:08.363 (18.9s)&#xA;&gt; Enter [It] should return status code 200 when accessing &#39;/noauth&#39; unauthenticated - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:82 @ 04/04/23 18:16:08.363&#xA;&lt; Exit [It] should return status code 200 when accessing &#39;/noauth&#39; unauthenticated - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:82 @ 04/04/23 18:16:11.514 (3.151s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:11.514&#xA;&lt; Exit [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:11.73 (216ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should return status code 401 when request any protected service" classname="nginx-ingress-controller e2e suite" status="passed" time="47.840368216">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:11.73&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:18.612 (6.881s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:16:18.612&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:16:28.726 (10.115s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:16:28.726&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 04/04/23 18:16:28.726&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 04/04/23 18:16:38.887&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 04/04/23 18:16:49.114&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:16:59.322 (30.595s)&#xA;&gt; Enter [It] should return status code 401 when request any protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:85 @ 04/04/23 18:16:59.322&#xA;STEP: Sending a request to protected service /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:87 @ 04/04/23 18:16:59.322&#xA;STEP: Sending a request to protected service /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:94 @ 04/04/23 18:16:59.333&#xA;&lt; Exit [It] should return status code 401 when request any protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:85 @ 04/04/23 18:16:59.342 (20ms)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:59.342&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:59.57 (229ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-catch-all should ignore catch all Ingress with backend and rules" classname="nginx-ingress-controller e2e suite" status="passed" time="29.278878474">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:59.571&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:06.433 (6.862s)&#xA;&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 04/04/23 18:17:06.433&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 04/04/23 18:17:18.505 (12.072s)&#xA;&gt; Enter [It] should ignore catch all Ingress with backend and rules - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:69 @ 04/04/23 18:17:18.505&#xA;&lt; Exit [It] should ignore catch all Ingress with backend and rules - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:69 @ 04/04/23 18:17:28.675 (10.171s)&#xA;&gt; Enter [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:28.675&#xA;&lt; Exit [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:28.85 (174ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] global-options should have worker_rlimit_nofile option" classname="nginx-ingress-controller e2e suite" status="passed" time="12.275994764">
              <system-err>&gt; Enter [BeforeEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:28.85&#xA;&lt; Exit [BeforeEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:37.72 (8.87s)&#xA;&gt; Enter [It] should have worker_rlimit_nofile option - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_options.go:31 @ 04/04/23 18:17:37.72&#xA;&lt; Exit [It] should have worker_rlimit_nofile option - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_options.go:31 @ 04/04/23 18:17:40.919 (3.199s)&#xA;&gt; Enter [AfterEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:40.919&#xA;&lt; Exit [AfterEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:41.126 (207ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) ports or X-Forwarded-Host check during HTTP tp HTTPS redirection should not use ports or X-Forwarded-Host during the HTTP to HTTPS redirection" classname="nginx-ingress-controller e2e suite" status="passed" time="30.353652292">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:41.126&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:49.014 (7.887s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 04/04/23 18:17:49.014&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 04/04/23 18:17:53.032 (4.018s)&#xA;&gt; Enter [It] should not use ports or X-Forwarded-Host during the HTTP to HTTPS redirection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:205 @ 04/04/23 18:17:53.032&#xA;Apr  4 18:18:09.269: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not settings-tls&#xA;&lt; Exit [It] should not use ports or X-Forwarded-Host during the HTTP to HTTPS redirection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:205 @ 04/04/23 18:18:11.272 (18.241s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:11.272&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:11.48 (208ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should build proxy next upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="21.256053884">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:11.48&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:18.335 (6.854s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:18:18.335&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:18:22.355 (4.02s)&#xA;&gt; Enter [It] should build proxy next upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:194 @ 04/04/23 18:18:22.355&#xA;&lt; Exit [It] should build proxy next upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:194 @ 04/04/23 18:18:32.501 (10.146s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:32.501&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:32.736 (236ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-proxy-protocol should respect proto passed by the PROXY Protocol server port" classname="nginx-ingress-controller e2e suite" status="passed" time="110.539511063">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:32.737&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:39.632 (6.895s)&#xA;&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 04/04/23 18:18:39.632&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 04/04/23 18:18:50.669 (11.037s)&#xA;&gt; Enter [It] should respect proto passed by the PROXY Protocol server port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:79 @ 04/04/23 18:18:50.669&#xA;&lt; Exit [It] should respect proto passed by the PROXY Protocol server port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:79 @ 04/04/23 18:20:22.888 (1m32.219s)&#xA;&gt; Enter [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:22.888&#xA;&lt; Exit [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:23.276 (388ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] ssl-ciphers should change ssl ciphers" classname="nginx-ingress-controller e2e suite" status="passed" time="20.32621915">
              <system-err>&gt; Enter [BeforeEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:23.277&#xA;&lt; Exit [BeforeEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:31.164 (7.887s)&#xA;&gt; Enter [BeforeEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/sslciphers.go:31 @ 04/04/23 18:20:31.164&#xA;&lt; Exit [BeforeEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/sslciphers.go:31 @ 04/04/23 18:20:33.226 (2.062s)&#xA;&gt; Enter [It] should change ssl ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/sslciphers.go:35 @ 04/04/23 18:20:33.226&#xA;&lt; Exit [It] should change ssl ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/sslciphers.go:35 @ 04/04/23 18:20:43.402 (10.176s)&#xA;&gt; Enter [AfterEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:43.402&#xA;&lt; Exit [AfterEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:43.603 (201ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should set client_body_buffer_size to 1k" classname="nginx-ingress-controller e2e suite" status="passed" time="21.3434496">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:43.603&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:50.486 (6.883s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 04/04/23 18:20:50.486&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 04/04/23 18:20:54.514 (4.028s)&#xA;&gt; Enter [It] should set client_body_buffer_size to 1k - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:79 @ 04/04/23 18:20:54.514&#xA;&lt; Exit [It] should set client_body_buffer_size to 1k - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:79 @ 04/04/23 18:21:04.738 (10.224s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:04.738&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:04.947 (209ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should turn off proxy-request-buffering" classname="nginx-ingress-controller e2e suite" status="passed" time="21.279526094">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:04.947&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:11.835 (6.888s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:21:11.835&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:21:15.853 (4.017s)&#xA;&gt; Enter [It] should turn off proxy-request-buffering - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:179 @ 04/04/23 18:21:15.853&#xA;&lt; Exit [It] should turn off proxy-request-buffering - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:179 @ 04/04/23 18:21:26.03 (10.178s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:26.03&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:26.226 (196ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Debug CLI should get information for a specific backend server" classname="nginx-ingress-controller e2e suite" status="passed" time="22.566428383">
              <system-err>&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:26.227&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:34.123 (7.896s)&#xA;&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 04/04/23 18:21:34.123&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 04/04/23 18:21:38.158 (4.035s)&#xA;&gt; Enter [It] should get information for a specific backend server - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:56 @ 04/04/23 18:21:38.158&#xA;&lt; Exit [It] should get information for a specific backend server - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:56 @ 04/04/23 18:21:48.595 (10.437s)&#xA;&gt; Enter [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:48.595&#xA;&lt; Exit [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:48.793 (198ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] nginx-configuration start nginx with default configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="11.047475387">
              <system-err>&gt; Enter [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 04/04/23 18:21:48.794&#xA;&lt; Exit [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 04/04/23 18:21:50.797 (2.003s)&#xA;&gt; Enter [It] start nginx with default configuration - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:102 @ 04/04/23 18:21:50.797&#xA;&lt; Exit [It] start nginx with default configuration - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:102 @ 04/04/23 18:21:59.838 (9.042s)&#xA;&gt; Enter [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 04/04/23 18:21:59.839&#xA;&lt; Exit [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 04/04/23 18:21:59.841 (3ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should set cors max-age" classname="nginx-ingress-controller e2e suite" status="passed" time="21.882315298">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:59.842&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:07.232 (7.39s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:22:07.232&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:22:11.252 (4.02s)&#xA;&gt; Enter [It] should set cors max-age - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:78 @ 04/04/23 18:22:11.252&#xA;&lt; Exit [It] should set cors max-age - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:78 @ 04/04/23 18:22:21.435 (10.182s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:21.435&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:21.724 (289ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow - matching origin+port with wildcard origin" classname="nginx-ingress-controller e2e suite" status="passed" time="18.7769524">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:21.725&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:29.212 (7.488s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:22:29.212&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:22:33.245 (4.033s)&#xA;&gt; Enter [It] should allow - matching origin+port with wildcard origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:488 @ 04/04/23 18:22:33.245&#xA;&lt; Exit [It] should allow - matching origin+port with wildcard origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:488 @ 04/04/23 18:22:40.278 (7.032s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:40.278&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:40.502 (224ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should change cookie name on ingress definition change" classname="nginx-ingress-controller e2e suite" status="passed" time="26.301024226">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:40.502&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:47.367 (6.865s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:22:47.368&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:22:51.389 (4.021s)&#xA;&gt; Enter [It] should change cookie name on ingress definition change - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:64 @ 04/04/23 18:22:51.389&#xA;&lt; Exit [It] should change cookie name on ingress definition change - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:64 @ 04/04/23 18:23:06.598 (15.209s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:06.598&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:06.803 (205ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] configmap server-snippet should add value of server-snippet setting to all ingress config" classname="nginx-ingress-controller e2e suite" status="passed" time="43.5615642">
              <system-err>&gt; Enter [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:06.804&#xA;&lt; Exit [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:13.683 (6.879s)&#xA;&gt; Enter [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:31 @ 04/04/23 18:23:13.683&#xA;&lt; Exit [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:31 @ 04/04/23 18:23:17.702 (4.019s)&#xA;&gt; Enter [It] should add value of server-snippet setting to all ingress config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:35 @ 04/04/23 18:23:17.702&#xA;&lt; Exit [It] should add value of server-snippet setting to all ingress config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:35 @ 04/04/23 18:23:50.157 (32.455s)&#xA;&gt; Enter [AfterEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:50.157&#xA;&lt; Exit [AfterEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:50.365 (209ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] block-* should block Referers defined in the ConfigMap" classname="nginx-ingress-controller e2e suite" status="passed" time="26.650551683">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:50.366&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:57.248 (6.882s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 04/04/23 18:23:57.248&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 04/04/23 18:24:06.308 (9.06s)&#xA;&gt; Enter [It] should block Referers defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:88 @ 04/04/23 18:24:06.308&#xA;&lt; Exit [It] should block Referers defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:88 @ 04/04/23 18:24:16.602 (10.294s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:16.602&#xA;&lt; Exit [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:17.016 (414ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should set gzip_types to application/javascript" classname="nginx-ingress-controller e2e suite" status="passed" time="25.977355163">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:17.016&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:25.558 (8.541s)&#xA;&gt; Enter [It] should set gzip_types to application/javascript - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:89 @ 04/04/23 18:24:25.558&#xA;&lt; Exit [It] should set gzip_types to application/javascript - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:89 @ 04/04/23 18:24:42.749 (17.191s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:42.749&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:42.994 (245ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should exists opentracing_operation_name directive when is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="30.228533662">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:42.994&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:49.859 (6.865s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:24:49.859&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:24:55.885 (6.025s)&#xA;&gt; Enter [It] should exists opentracing_operation_name directive when is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:115 @ 04/04/23 18:24:55.885&#xA;&lt; Exit [It] should exists opentracing_operation_name directive when is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:115 @ 04/04/23 18:25:13.047 (17.162s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:13.047&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:13.223 (176ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:25:13.223&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:25:13.223 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not allow - single origin for multiple cors values" classname="nginx-ingress-controller e2e suite" status="passed" time="21.147688959">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:13.223&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:21.122 (7.899s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:25:21.122&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:25:27.151 (6.029s)&#xA;&gt; Enter [It] should not allow - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:196 @ 04/04/23 18:25:27.151&#xA;&lt; Exit [It] should not allow - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:196 @ 04/04/23 18:25:34.17 (7.019s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:34.17&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:34.371 (201ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should set snippet when global external auth is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="55.823887488">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:34.371&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:41.275 (6.904s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:25:41.275&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:25:49.318 (8.044s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:25:49.318&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 04/04/23 18:25:49.318&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 04/04/23 18:25:59.469&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 04/04/23 18:26:09.647&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:26:19.839 (30.521s)&#xA;&gt; Enter [It] should set snippet when global external auth is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:250 @ 04/04/23 18:26:19.839&#xA;STEP: Adding a global-auth-snippet to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:254 @ 04/04/23 18:26:19.839&#xA;&lt; Exit [It] should set snippet when global external auth is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:250 @ 04/04/23 18:26:29.995 (10.156s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:29.995&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:30.195 (200ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] server-snippet add valid directives to server via server snippet" classname="nginx-ingress-controller e2e suite" status="passed" time="21.25795177">
              <system-err>&gt; Enter [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:30.195&#xA;&lt; Exit [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:37.066 (6.871s)&#xA;&gt; Enter [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:31 @ 04/04/23 18:26:37.066&#xA;&lt; Exit [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:31 @ 04/04/23 18:26:41.082 (4.015s)&#xA;&gt; Enter [It] add valid directives to server via server snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:35 @ 04/04/23 18:26:41.082&#xA;&lt; Exit [It] add valid directives to server via server snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:35 @ 04/04/23 18:26:51.227 (10.145s)&#xA;&gt; Enter [AfterEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:51.227&#xA;&lt; Exit [AfterEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:51.453 (226ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication with caching is configured should deny login for different location on same server" classname="nginx-ingress-controller e2e suite" status="passed" time="128.860516385">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:51.453&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:58.324 (6.87s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:26:58.324&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:27:02.348 (4.024s)&#xA;&gt; Enter [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 04/04/23 18:27:02.348&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 04/04/23 18:27:07.377&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 04/04/23 18:27:17.563&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 04/04/23 18:27:27.77&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 04/04/23 18:27:37.89&#xA;&lt; Exit [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 04/04/23 18:27:53.085 (50.737s)&#xA;&gt; Enter [It] should deny login for different location on same server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:792 @ 04/04/23 18:27:53.085&#xA;STEP: receiving an internal server error without cache on location /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:811 @ 04/04/23 18:28:00.105&#xA;&lt; Exit [It] should deny login for different location on same server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:792 @ 04/04/23 18:29:00.109 (1m7.024s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:00.109&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:00.314 (205ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - FastCGI should return OK for service with backend protocol FastCGI" classname="nginx-ingress-controller e2e suite" status="passed" time="20.336008253">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:00.314&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:08.193 (7.878s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 04/04/23 18:29:08.193&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 04/04/23 18:29:10.222 (2.029s)&#xA;&gt; Enter [It] should return OK for service with backend protocol FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:102 @ 04/04/23 18:29:10.222&#xA;&lt; Exit [It] should return OK for service with backend protocol FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:102 @ 04/04/23 18:29:20.442 (10.22s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:20.442&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:20.65 (208ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by weight should route requests only to canary if canary weight is equal to canary weight total" classname="nginx-ingress-controller e2e suite" status="passed" time="32.449934124">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:20.651&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:27.592 (6.941s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:29:27.592&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:29:35.635 (8.044s)&#xA;&gt; Enter [It] should route requests only to canary if canary weight is equal to canary weight total - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:775 @ 04/04/23 18:29:35.635&#xA;&lt; Exit [It] should route requests only to canary if canary weight is equal to canary weight total - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:775 @ 04/04/23 18:29:52.866 (17.23s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:52.866&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:53.101 (235ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] modsecurity-snippet should add value of modsecurity-snippet setting to nginx config" classname="nginx-ingress-controller e2e suite" status="passed" time="18.334369723000002">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] modsecurity-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:53.101&#xA;&lt; Exit [BeforeEach] [Setting] [Security] modsecurity-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:00.998 (7.896s)&#xA;&gt; Enter [It] should add value of modsecurity-snippet setting to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/modsecurity/modsecurity_snippet.go:30 @ 04/04/23 18:30:00.998&#xA;&lt; Exit [It] should add value of modsecurity-snippet setting to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/modsecurity/modsecurity_snippet.go:30 @ 04/04/23 18:30:11.215 (10.217s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] modsecurity-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:11.215&#xA;&lt; Exit [AfterEach] [Setting] [Security] modsecurity-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:11.436 (221ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should exists opentracing directive when is enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="28.327005454">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:11.436&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:18.304 (6.868s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:30:18.304&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:30:22.331 (4.027s)&#xA;&gt; Enter [It] should exists opentracing directive when is enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:71 @ 04/04/23 18:30:22.331&#xA;&lt; Exit [It] should exists opentracing directive when is enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:71 @ 04/04/23 18:30:39.546 (17.216s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:39.546&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:39.763 (217ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:30:39.763&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:30:39.763 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinitymode Check persistent affinity mode" classname="nginx-ingress-controller e2e suite" status="passed" time="128.063623015">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:39.763&#xA;&lt; Exit [BeforeEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:47.146 (7.383s)&#xA;&gt; Enter [It] Check persistent affinity mode - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinitymode.go:67 @ 04/04/23 18:30:47.146&#xA;&lt; Exit [It] Check persistent affinity mode - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinitymode.go:67 @ 04/04/23 18:32:47.648 (2m0.502s)&#xA;&gt; Enter [AfterEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:47.648&#xA;&lt; Exit [AfterEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:47.827 (179ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should ignore Ingress with a different class annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="158.132598199">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:47.827&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:04.512 (2m16.685s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:35:04.512&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:35:08.555 (4.042s)&#xA;&gt; Enter [It] should ignore Ingress with a different class annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:68 @ 04/04/23 18:35:08.555&#xA;&lt; Exit [It] should ignore Ingress with a different class annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:68 @ 04/04/23 18:35:25.764 (17.209s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:25.764&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:25.96 (196ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should enable opentracing using jaeger" classname="nginx-ingress-controller e2e suite" status="passed" time="32.14322785">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:25.96&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:33.883 (7.923s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:35:33.883&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:35:37.911 (4.028s)&#xA;&gt; Enter [It] should enable opentracing using jaeger - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:172 @ 04/04/23 18:35:37.911&#xA;&lt; Exit [It] should enable opentracing using jaeger - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:172 @ 04/04/23 18:35:57.93 (20.019s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:57.93&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:58.103 (173ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:35:58.103&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:35:58.103 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should add custom error page when global-auth-signin url is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="56.818456066">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:58.104&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:05.96 (7.857s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:36:05.96&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:36:14.017 (8.056s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:36:14.017&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 04/04/23 18:36:14.017&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 04/04/23 18:36:24.203&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 04/04/23 18:36:34.361&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:36:44.521 (30.504s)&#xA;&gt; Enter [It] should add custom error page when global-auth-signin url is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:210 @ 04/04/23 18:36:44.521&#xA;STEP: Adding a global-auth-signin to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:215 @ 04/04/23 18:36:44.521&#xA;&lt; Exit [It] should add custom error page when global-auth-signin url is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:210 @ 04/04/23 18:36:54.694 (10.173s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:54.694&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:54.922 (228ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log disable-stream-access-log set access_log off" classname="nginx-ingress-controller e2e suite" status="passed" time="30.946117672">
              <system-err>&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:54.922&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:02.365 (7.443s)&#xA;&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 04/04/23 18:37:02.365&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 04/04/23 18:37:08.389 (6.023s)&#xA;&gt; Enter [It] disable-stream-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:71 @ 04/04/23 18:37:08.389&#xA;&lt; Exit [It] disable-stream-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:71 @ 04/04/23 18:37:25.61 (17.222s)&#xA;&gt; Enter [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:25.611&#xA;&lt; Exit [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:25.869 (258ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should enable opentracing using jaeger with sampler host" classname="nginx-ingress-controller e2e suite" status="passed" time="31.172411267">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:25.869&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:32.759 (6.89s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:37:32.759&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:37:36.785 (4.026s)&#xA;&gt; Enter [It] should enable opentracing using jaeger with sampler host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:184 @ 04/04/23 18:37:36.785&#xA;&lt; Exit [It] should enable opentracing using jaeger with sampler host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:184 @ 04/04/23 18:37:56.815 (20.03s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:56.815&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:57.041 (227ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:37:57.041&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:37:57.041 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] add-headers Add a custom header" classname="nginx-ingress-controller e2e suite" status="passed" time="29.429456981">
              <system-err>&gt; Enter [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:57.042&#xA;&lt; Exit [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:04.9 (7.858s)&#xA;&gt; Enter [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:34 @ 04/04/23 18:38:04.9&#xA;&lt; Exit [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:34 @ 04/04/23 18:38:15.932 (11.032s)&#xA;&gt; Enter [It] Add a custom header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:40 @ 04/04/23 18:38:15.932&#xA;&lt; Exit [It] Add a custom header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:40 @ 04/04/23 18:38:26.137 (10.204s)&#xA;&gt; Enter [AfterEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:26.137&#xA;&lt; Exit [AfterEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:26.471 (334ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should serve Ingress when class is updated between annotation and ingressClassName" classname="nginx-ingress-controller e2e suite" status="passed" time="36.546449498">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:26.471&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:33.322 (6.851s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:38:33.322&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:38:37.351 (4.029s)&#xA;&gt; Enter [It] should serve Ingress when class is updated between annotation and ingressClassName - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:323 @ 04/04/23 18:38:37.351&#xA;&lt; Exit [It] should serve Ingress when class is updated between annotation and ingressClassName - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:323 @ 04/04/23 18:39:02.787 (25.436s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:02.787&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:03.018 (231ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] backend status code 503 should return 503 when all backend service endpoints are unavailable" classname="nginx-ingress-controller e2e suite" status="passed" time="18.478587281">
              <system-err>&gt; Enter [BeforeEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:03.025&#xA;&lt; Exit [BeforeEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:11.02 (7.995s)&#xA;&gt; Enter [It] should return 503 when all backend service endpoints are unavailable - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_backend.go:54 @ 04/04/23 18:39:11.02&#xA;&lt; Exit [It] should return 503 when all backend service endpoints are unavailable - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_backend.go:54 @ 04/04/23 18:39:21.316 (10.296s)&#xA;&gt; Enter [AfterEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:21.316&#xA;&lt; Exit [AfterEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:21.504 (188ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should set gzip_disable to msie6" classname="nginx-ingress-controller e2e suite" status="passed" time="25.33065533">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:21.504&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:29.492 (7.988s)&#xA;&gt; Enter [It] should set gzip_disable to msie6 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:67 @ 04/04/23 18:39:29.492&#xA;&lt; Exit [It] should set gzip_disable to msie6 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:67 @ 04/04/23 18:39:46.643 (17.151s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:46.643&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:46.835 (192ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* canary affinity behavior routes traffic to either mainline or canary backend (legacy behavior)" classname="nginx-ingress-controller e2e suite" status="passed" time="70.69738704">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:46.835&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:53.72 (6.885s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:39:53.72&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:40:01.768 (8.048s)&#xA;&gt; Enter [It] routes traffic to either mainline or canary backend (legacy behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:1058 @ 04/04/23 18:40:01.768&#xA;&lt; Exit [It] routes traffic to either mainline or canary backend (legacy behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:1058 @ 04/04/23 18:40:57.335 (55.567s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:57.335&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:57.533 (198ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Status] status update should update status field after client-go reconnection" classname="nginx-ingress-controller e2e suite" status="passed" time="80.044380755">
              <system-err>&gt; Enter [BeforeEach] [Status] status update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:04:19.249&#xA;&lt; Exit [BeforeEach] [Status] status update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:04:26.794 (7.545s)&#xA;&gt; Enter [It] should update status field after client-go reconnection - /go/src/k8s.io/ingress-nginx/test/e2e/status/update.go:43 @ 04/04/23 18:04:26.794&#xA;Apr  4 18:04:26.794: INFO: Asynchronously running &#39;/bin/bash -c /usr/local/bin/kubectl proxy --accept-hosts=.* --address=0.0.0.0 --port=0&#39;&#xA;Apr  4 18:04:49.019: INFO: waiting for leader election and initial status update&#xA;Apr  4 18:05:29.033: INFO: Asynchronously running &#39;/bin/bash -c /usr/local/bin/kubectl proxy --accept-hosts=.* --address=0.0.0.0 --port=42431&#39;&#xA;&lt; Exit [It] should update status field after client-go reconnection - /go/src/k8s.io/ingress-nginx/test/e2e/status/update.go:43 @ 04/04/23 18:05:39.069 (1m12.275s)&#xA;&gt; Enter [AfterEach] [Status] status update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:39.069&#xA;&lt; Exit [AfterEach] [Status] status update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:39.293 (225ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should set client_body_buffer_size to 1M" classname="nginx-ingress-controller e2e suite" status="passed" time="21.355109571">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:39.294&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:46.218 (6.925s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 04/04/23 18:05:46.218&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 04/04/23 18:05:50.239 (4.02s)&#xA;&gt; Enter [It] should set client_body_buffer_size to 1M - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:123 @ 04/04/23 18:05:50.239&#xA;&lt; Exit [It] should set client_body_buffer_size to 1M - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:123 @ 04/04/23 18:06:00.422 (10.184s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:00.422&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:00.649 (227ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Dynamic $proxy_host should exist a proxy_host" classname="nginx-ingress-controller e2e suite" status="passed" time="21.314347362">
              <system-err>&gt; Enter [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:00.649&#xA;&lt; Exit [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:07.542 (6.893s)&#xA;&gt; Enter [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:32 @ 04/04/23 18:06:07.542&#xA;&lt; Exit [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:32 @ 04/04/23 18:06:11.569 (4.027s)&#xA;&gt; Enter [It] should exist a proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:36 @ 04/04/23 18:06:11.569&#xA;&lt; Exit [It] should exist a proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:36 @ 04/04/23 18:06:21.772 (10.203s)&#xA;&gt; Enter [AfterEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:21.772&#xA;&lt; Exit [AfterEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:21.963 (191ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] add-headers Add multiple custom headers" classname="nginx-ingress-controller e2e suite" status="passed" time="28.410685853">
              <system-err>&gt; Enter [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:21.964&#xA;&lt; Exit [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:28.888 (6.924s)&#xA;&gt; Enter [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:34 @ 04/04/23 18:06:28.888&#xA;&lt; Exit [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:34 @ 04/04/23 18:06:39.938 (11.05s)&#xA;&gt; Enter [It] Add multiple custom headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:65 @ 04/04/23 18:06:39.938&#xA;&lt; Exit [It] Add multiple custom headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:65 @ 04/04/23 18:06:50.151 (10.213s)&#xA;&gt; Enter [AfterEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:50.151&#xA;&lt; Exit [AfterEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:50.374 (223ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canary is created should route requests to the correct upstream if mainline ingress is created before the canary ingress" classname="nginx-ingress-controller e2e suite" status="passed" time="32.384106483">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:50.375&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:57.307 (6.932s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:06:57.307&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:07:05.355 (8.048s)&#xA;&gt; Enter [It] should route requests to the correct upstream if mainline ingress is created before the canary ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:161 @ 04/04/23 18:07:05.355&#xA;STEP: routing requests destined for the mainline ingress to the maineline upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:185 @ 04/04/23 18:07:22.519&#xA;STEP: routing requests destined for the canary ingress to the canary upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:195 @ 04/04/23 18:07:22.526&#xA;&lt; Exit [It] should route requests to the correct upstream if mainline ingress is created before the canary ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:161 @ 04/04/23 18:07:22.534 (17.179s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:22.534&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:22.759 (225ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check proxy header hash size should set proxy-headers-hash-max-size" classname="nginx-ingress-controller e2e suite" status="passed" time="28.404384502">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:22.759&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:29.671 (6.912s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 04/04/23 18:07:29.671&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 04/04/23 18:07:40.702 (11.031s)&#xA;&gt; Enter [It] should set proxy-headers-hash-max-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:68 @ 04/04/23 18:07:40.702&#xA;&lt; Exit [It] should set proxy-headers-hash-max-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:68 @ 04/04/23 18:07:50.922 (10.22s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:50.922&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:51.164 (242ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should ignore Ingress with different controller class" classname="nginx-ingress-controller e2e suite" status="passed" time="29.290705972">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:51.164&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:59.041 (7.877s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:07:59.041&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:08:03.067 (4.025s)&#xA;&gt; Enter [It] should ignore Ingress with different controller class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:104 @ 04/04/23 18:08:03.067&#xA;&lt; Exit [It] should ignore Ingress with different controller class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:104 @ 04/04/23 18:08:20.253 (17.187s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:08:20.253&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:08:20.455 (201ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-upstream with log-format-escape-json and log-format-escape-none log-format-escape-none enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="31.867930552">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:08:20.455&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:08:27.83 (7.375s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 04/04/23 18:08:27.83&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 04/04/23 18:08:38.87 (11.04s)&#xA;&gt; Enter [It] log-format-escape-none enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:128 @ 04/04/23 18:08:38.87&#xA;&lt; Exit [It] log-format-escape-none enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:128 @ 04/04/23 18:08:52.098 (13.228s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:08:52.098&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:08:52.323 (225ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should return status code 200 when signed in" classname="nginx-ingress-controller e2e suite" status="passed" time="25.339688675">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:08:52.323&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:08:59.233 (6.909s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:08:59.233&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:09:03.258 (4.025s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:09:03.258&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:09:17.471 (14.213s)&#xA;&gt; Enter [It] should return status code 200 when signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:485 @ 04/04/23 18:09:17.471&#xA;&lt; Exit [It] should return status code 200 when signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:485 @ 04/04/23 18:09:17.477 (6ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:17.477&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:17.663 (186ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [SSL] [Flag] default-ssl-certificate uses default ssl certificate for host based ingress when configured certificate does not match host" classname="nginx-ingress-controller e2e suite" status="passed" time="32.685166334">
              <system-err>&gt; Enter [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:17.664&#xA;&lt; Exit [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:24.618 (6.955s)&#xA;&gt; Enter [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:40 @ 04/04/23 18:09:24.618&#xA;&lt; Exit [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:40 @ 04/04/23 18:09:37.752 (13.134s)&#xA;&gt; Enter [It] uses default ssl certificate for host based ingress when configured certificate does not match host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:80 @ 04/04/23 18:09:37.752&#xA;STEP: making sure new ingress is deployed - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:90 @ 04/04/23 18:09:44.916&#xA;STEP: making sure the configured default ssl certificate is being used - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:96 @ 04/04/23 18:09:48.094&#xA;&lt; Exit [It] uses default ssl certificate for host based ingress when configured certificate does not match host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:80 @ 04/04/23 18:09:50.119 (12.367s)&#xA;&gt; Enter [AfterEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:50.119&#xA;&lt; Exit [AfterEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:50.349 (230ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - GRPC should return OK for service with backend protocol GRPC" classname="nginx-ingress-controller e2e suite" status="passed" time="21.305689365">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:50.349&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:57.22 (6.871s)&#xA;&gt; Enter [It] should return OK for service with backend protocol GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:68 @ 04/04/23 18:09:57.22&#xA;&lt; Exit [It] should return OK for service with backend protocol GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:68 @ 04/04/23 18:10:11.466 (14.247s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:11.466&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:11.655 (189ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should be enabled with default settings" classname="nginx-ingress-controller e2e suite" status="passed" time="17.220763513">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:11.655&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:18.528 (6.872s)&#xA;&gt; Enter [It] should be enabled with default settings - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:39 @ 04/04/23 18:10:18.528&#xA;&lt; Exit [It] should be enabled with default settings - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:39 @ 04/04/23 18:10:28.683 (10.155s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:28.683&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:28.876 (193ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should include opentracing_trust_incoming_span off directive when disabled" classname="nginx-ingress-controller e2e suite" status="passed" time="28.309530893">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:28.876&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:35.756 (6.88s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:10:35.756&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:10:39.781 (4.025s)&#xA;&gt; Enter [It] should include opentracing_trust_incoming_span off directive when disabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:85 @ 04/04/23 18:10:39.781&#xA;&lt; Exit [It] should include opentracing_trust_incoming_span off directive when disabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:85 @ 04/04/23 18:10:56.965 (17.184s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:56.965&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:57.186 (221ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:10:57.186&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:10:57.186 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should warn user when use-regex is true and session-cookie-path is not set" classname="nginx-ingress-controller e2e suite" status="passed" time="25.399109696">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:57.186&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:05.078 (7.892s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:11:05.078&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:11:09.104 (4.027s)&#xA;&gt; Enter [It] should warn user when use-regex is true and session-cookie-path is not set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:294 @ 04/04/23 18:11:09.104&#xA;&lt; Exit [It] should warn user when use-regex is true and session-cookie-path is not set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:294 @ 04/04/23 18:11:22.32 (13.216s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:22.32&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:22.585 (265ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to &#39;&#39; and use ajp_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="21.471021469">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:22.585&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:29.564 (6.979s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 04/04/23 18:11:29.564&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 04/04/23 18:11:33.585 (4.021s)&#xA;&gt; Enter [It] should set backend protocol to &#39;&#39; and use ajp_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:109 @ 04/04/23 18:11:33.585&#xA;&lt; Exit [It] should set backend protocol to &#39;&#39; and use ajp_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:109 @ 04/04/23 18:11:43.812 (10.227s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:43.812&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:44.056 (244ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] stream-snippet should add stream-snippet and drop annotations per admin config" classname="nginx-ingress-controller e2e suite" status="passed" time="39.472773565">
              <system-err>&gt; Enter [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:44.057&#xA;&lt; Exit [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:52.078 (8.021s)&#xA;&gt; Enter [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:37 @ 04/04/23 18:11:52.078&#xA;&lt; Exit [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:37 @ 04/04/23 18:11:54.141 (2.063s)&#xA;&gt; Enter [It] should add stream-snippet and drop annotations per admin config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:85 @ 04/04/23 18:11:54.141&#xA;&lt; Exit [It] should add stream-snippet and drop annotations per admin config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:85 @ 04/04/23 18:12:23.359 (29.218s)&#xA;&gt; Enter [AfterEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:23.359&#xA;&lt; Exit [AfterEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:23.53 (171ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should not set secure in cookie with provided false annotation on http" classname="nginx-ingress-controller e2e suite" status="passed" time="21.302342634">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:23.53&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:30.423 (6.893s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:12:30.423&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:12:34.455 (4.032s)&#xA;&gt; Enter [It] should not set secure in cookie with provided false annotation on http - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:435 @ 04/04/23 18:12:34.455&#xA;&lt; Exit [It] should not set secure in cookie with provided false annotation on http - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:435 @ 04/04/23 18:12:44.621 (10.166s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:44.621&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:44.832 (211ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [TCP] tcp-services should expose an ExternalName TCP service" classname="nginx-ingress-controller e2e suite" status="passed" time="11.0379693">
              <system-err>&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:44.833&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:52.267 (7.434s)&#xA;&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 04/04/23 18:12:52.267&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 04/04/23 18:12:52.272 (5ms)&#xA;&gt; Enter [It] should expose an ExternalName TCP service - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:80 @ 04/04/23 18:12:52.272&#xA;&lt; Exit [It] should expose an ExternalName TCP service - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:80 @ 04/04/23 18:12:55.617 (3.345s)&#xA;&gt; Enter [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:55.617&#xA;&lt; Exit [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:55.87 (253ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates given an ingress with TLS correctly configured removes HTTPS configuration when we delete TLS spec" classname="nginx-ingress-controller e2e suite" status="passed" time="41.41020715">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:55.871&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:02.782 (6.911s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 04/04/23 18:13:02.782&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 04/04/23 18:13:06.807 (4.025s)&#xA;&gt; Enter [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 04/04/23 18:13:06.807&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:128 @ 04/04/23 18:13:23.944&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:136 @ 04/04/23 18:13:32.097&#xA;&lt; Exit [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 04/04/23 18:13:32.106 (25.299s)&#xA;&gt; Enter [It] removes HTTPS configuration when we delete TLS spec - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:233 @ 04/04/23 18:13:32.106&#xA;&lt; Exit [It] removes HTTPS configuration when we delete TLS spec - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:233 @ 04/04/23 18:13:37.112 (5.005s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:37.112&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:37.281 (169ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should not exists opentracing_location_operation_name directive when is empty" classname="nginx-ingress-controller e2e suite" status="passed" time="29.339631623">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:37.281&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:45.19 (7.908s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:13:45.19&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:13:49.209 (4.019s)&#xA;&gt; Enter [It] should not exists opentracing_location_operation_name directive when is empty - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:130 @ 04/04/23 18:13:49.209&#xA;&lt; Exit [It] should not exists opentracing_location_operation_name directive when is empty - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:130 @ 04/04/23 18:14:06.443 (17.233s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:06.443&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:06.621 (178ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:14:06.621&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:14:06.621 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates picks up the certificate when we add TLS spec to existing ingress" classname="nginx-ingress-controller e2e suite" status="passed" time="26.612276222">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:06.621&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:13.543 (6.921s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 04/04/23 18:14:13.543&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 04/04/23 18:14:17.569 (4.026s)&#xA;&gt; Enter [It] picks up the certificate when we add TLS spec to existing ingress - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:45 @ 04/04/23 18:14:17.569&#xA;&lt; Exit [It] picks up the certificate when we add TLS spec to existing ingress - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:45 @ 04/04/23 18:14:33.037 (15.469s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:33.037&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:33.234 (196ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] nginx-configuration fails when using root directive" classname="nginx-ingress-controller e2e suite" status="passed" time="62.038566962">
              <system-err>&gt; Enter [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 04/04/23 18:14:33.234&#xA;&lt; Exit [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 04/04/23 18:14:35.237 (2.003s)&#xA;&gt; Enter [It] fails when using root directive - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:124 @ 04/04/23 18:14:35.237&#xA;&lt; Exit [It] fails when using root directive - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:124 @ 04/04/23 18:15:35.27 (1m0.034s)&#xA;&gt; Enter [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 04/04/23 18:15:35.27&#xA;&lt; Exit [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 04/04/23 18:15:35.272 (2ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] rewrite-target use-regex enable-rewrite-log should fail to use longest match for documented warning" classname="nginx-ingress-controller e2e suite" status="passed" time="27.307439756">
              <system-err>&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:35.273&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:43.177 (7.905s)&#xA;&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 04/04/23 18:15:43.177&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 04/04/23 18:15:45.196 (2.019s)&#xA;&gt; Enter [It] should fail to use longest match for documented warning - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:158 @ 04/04/23 18:15:45.196&#xA;STEP: creating a regular ingress definition - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:161 @ 04/04/23 18:15:45.196&#xA;STEP: creating an ingress definition with the use-regex annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:165 @ 04/04/23 18:15:52.212&#xA;STEP: check that &#39;/foo/bar/bar&#39; does not match the longest exact path - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:179 @ 04/04/23 18:16:02.371&#xA;&lt; Exit [It] should fail to use longest match for documented warning - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:158 @ 04/04/23 18:16:02.374 (17.178s)&#xA;&gt; Enter [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:02.374&#xA;&lt; Exit [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:02.58 (206ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure Opentelemetry should not exists opentelemetry_operation_name directive when is empty" classname="nginx-ingress-controller e2e suite" status="passed" time="32.017142107">
              <system-err>&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:02.581&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:12.465 (9.885s)&#xA;&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 04/04/23 18:16:12.465&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 04/04/23 18:16:16.495 (4.03s)&#xA;&gt; Enter [It] should not exists opentelemetry_operation_name directive when is empty - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:89 @ 04/04/23 18:16:16.495&#xA;&lt; Exit [It] should not exists opentelemetry_operation_name directive when is empty - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:89 @ 04/04/23 18:16:33.975 (17.48s)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:33.975&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:34.598 (623ms)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 04/04/23 18:16:34.598&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 04/04/23 18:16:34.598 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should disable modsecurity using &#39;modsecurity off;&#39;" classname="nginx-ingress-controller e2e suite" status="passed" time="26.218874638">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:34.603&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:41.474 (6.871s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:16:41.474&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:16:43.493 (2.019s)&#xA;&gt; Enter [It] should disable modsecurity using &#39;modsecurity off;&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:132 @ 04/04/23 18:16:43.493&#xA;&lt; Exit [It] should disable modsecurity using &#39;modsecurity off;&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:132 @ 04/04/23 18:17:00.623 (17.13s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:00.623&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:00.822 (199ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the upstream keep alive should set the request count to upstream server through one keep alive connection" classname="nginx-ingress-controller e2e suite" status="passed" time="28.371746836">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:00.823&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:07.712 (6.89s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 04/04/23 18:17:07.712&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 04/04/23 18:17:18.751 (11.038s)&#xA;&gt; Enter [It] should set the request count to upstream server through one keep alive connection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:86 @ 04/04/23 18:17:18.751&#xA;&lt; Exit [It] should set the request count to upstream server through one keep alive connection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:86 @ 04/04/23 18:17:28.957 (10.206s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:28.957&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:29.194 (237ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the keep alive should set keepalive_requests" classname="nginx-ingress-controller e2e suite" status="passed" time="31.301174976">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:29.195&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:39.14 (9.946s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 04/04/23 18:17:39.14&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 04/04/23 18:17:50.186 (11.045s)&#xA;&gt; Enter [It] should set keepalive_requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:48 @ 04/04/23 18:17:50.186&#xA;&lt; Exit [It] should set keepalive_requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:48 @ 04/04/23 18:18:00.312 (10.127s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:00.312&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:00.496 (184ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should set gzip_comp_level to 4" classname="nginx-ingress-controller e2e suite" status="passed" time="24.296191576">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:00.496&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:07.399 (6.903s)&#xA;&gt; Enter [It] should set gzip_comp_level to 4 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:56 @ 04/04/23 18:18:07.399&#xA;&lt; Exit [It] should set gzip_comp_level to 4 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:56 @ 04/04/23 18:18:24.593 (17.194s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:24.593&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:24.792 (199ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set sticky cookie SERVERID" classname="nginx-ingress-controller e2e suite" status="passed" time="21.367955213">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:24.793&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:31.73 (6.937s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:18:31.73&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:18:35.753 (4.023s)&#xA;&gt; Enter [It] should set sticky cookie SERVERID - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:42 @ 04/04/23 18:18:35.753&#xA;&lt; Exit [It] should set sticky cookie SERVERID - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:42 @ 04/04/23 18:18:45.94 (10.187s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:45.94&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:46.161 (221ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow - missing origins (should allow all origins)" classname="nginx-ingress-controller e2e suite" status="passed" time="19.125716488">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:46.161&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:54.022 (7.861s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:18:54.022&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:18:58.047 (4.025s)&#xA;&gt; Enter [It] should allow - missing origins (should allow all origins) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:571 @ 04/04/23 18:18:58.047&#xA;&lt; Exit [It] should allow - missing origins (should allow all origins) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:571 @ 04/04/23 18:19:05.106 (7.059s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:05.106&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:05.287 (181ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should not set affinity across all server locations when using separate ingresses" classname="nginx-ingress-controller e2e suite" status="passed" time="29.276973597">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:05.287&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:13.171 (7.884s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:19:13.171&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:19:17.198 (4.027s)&#xA;&gt; Enter [It] should not set affinity across all server locations when using separate ingresses - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:320 @ 04/04/23 18:19:17.198&#xA;&lt; Exit [It] should not set affinity across all server locations when using separate ingresses - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:320 @ 04/04/23 18:19:34.328 (17.129s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:34.328&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:34.564 (236ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should return 200 for service type=ExternalName without a port defined" classname="nginx-ingress-controller e2e suite" status="passed" time="18.63305273">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:34.564&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:42.455 (7.891s)&#xA;&gt; Enter [It] should return 200 for service type=ExternalName without a port defined - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:95 @ 04/04/23 18:19:42.455&#xA;&lt; Exit [It] should return 200 for service type=ExternalName without a port defined - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:95 @ 04/04/23 18:19:52.995 (10.54s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:52.995&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:53.197 (202ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] enables access logging for default backend" classname="nginx-ingress-controller e2e suite" status="skipped" time="7.568859087">
              <skipped message="skipped - enable-access-log-for-default-backend"></skipped>
              <system-err>&gt; Enter [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:53.198&#xA;&lt; Exit [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:00.144 (6.946s)&#xA;&gt; Enter [It] enables access logging for default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:88 @ 04/04/23 18:20:00.144&#xA;[SKIPPED] enable-access-log-for-default-backend&#xA;In [It] at: /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:90 @ 04/04/23 18:20:00.144&#xA;&lt; Exit [It] enables access logging for default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:88 @ 04/04/23 18:20:00.144 (0s)&#xA;&gt; Enter [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:00.144&#xA;&lt; Exit [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:00.767 (622ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should overwrite Foo header with auth response" classname="nginx-ingress-controller e2e suite" status="passed" time="31.890098966">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:00.767&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:09.884 (9.117s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:20:09.884&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:20:13.952 (4.068s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:20:13.952&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:20:28.231 (14.28s)&#xA;&gt; Enter [It] should overwrite Foo header with auth response - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:529 @ 04/04/23 18:20:28.231&#xA;&lt; Exit [It] should overwrite Foo header with auth response - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:529 @ 04/04/23 18:20:32.452 (4.22s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:32.452&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:32.657 (205ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] rewrite-target use-regex enable-rewrite-log should use ~* location modifier if regex annotation is present" classname="nginx-ingress-controller e2e suite" status="passed" time="31.515497703">
              <system-err>&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:32.657&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:39.572 (6.914s)&#xA;&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 04/04/23 18:20:39.572&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 04/04/23 18:20:43.594 (4.022s)&#xA;&gt; Enter [It] should use ~* location modifier if regex annotation is present - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:111 @ 04/04/23 18:20:43.594&#xA;STEP: creating a regular ingress definition - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:114 @ 04/04/23 18:20:43.594&#xA;STEP: creating an ingress definition with the use-regex amd rewrite-target annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:123 @ 04/04/23 18:20:53.786&#xA;STEP: ensuring &#39;/foo&#39; matches &#39;~* ^/foo&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:137 @ 04/04/23 18:21:03.945&#xA;STEP: ensuring &#39;/foo/bar&#39; matches &#39;~* ^/foo.+&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:147 @ 04/04/23 18:21:03.953&#xA;&lt; Exit [It] should use ~* location modifier if regex annotation is present - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:111 @ 04/04/23 18:21:03.959 (20.365s)&#xA;&gt; Enter [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:03.959&#xA;&lt; Exit [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:04.173 (214ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 401 when authentication is configured but Authorization header is not configured" classname="nginx-ingress-controller e2e suite" status="passed" time="23.147807317">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:04.173&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:12.085 (7.912s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:21:12.085&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:21:16.104 (4.019s)&#xA;&gt; Enter [It] should return status code 401 when authentication is configured but Authorization header is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:89 @ 04/04/23 18:21:16.104&#xA;&lt; Exit [It] should return status code 401 when authentication is configured but Authorization header is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:89 @ 04/04/23 18:21:27.134 (11.029s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:27.134&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:27.321 (187ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] mirror-* should disable mirror-request-body" classname="nginx-ingress-controller e2e suite" status="passed" time="21.355247118">
              <system-err>&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:27.321&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:34.238 (6.917s)&#xA;&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 04/04/23 18:21:34.238&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 04/04/23 18:21:38.265 (4.026s)&#xA;&gt; Enter [It] should disable mirror-request-body - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:67 @ 04/04/23 18:21:38.265&#xA;&lt; Exit [It] should disable mirror-request-body - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:67 @ 04/04/23 18:21:48.462 (10.197s)&#xA;&gt; Enter [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:48.462&#xA;&lt; Exit [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:48.677 (215ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* with invalid auth-url should deny whole location should return 503 (location was denied)" classname="nginx-ingress-controller e2e suite" status="passed" time="21.341137941">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:48.677&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:55.595 (6.918s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:21:55.595&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:21:59.616 (4.02s)&#xA;&gt; Enter [BeforeEach] with invalid auth-url should deny whole location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:866 @ 04/04/23 18:21:59.616&#xA;&lt; Exit [BeforeEach] with invalid auth-url should deny whole location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:866 @ 04/04/23 18:22:09.78 (10.165s)&#xA;&gt; Enter [It] should return 503 (location was denied) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:879 @ 04/04/23 18:22:09.78&#xA;&lt; Exit [It] should return 503 (location was denied) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:879 @ 04/04/23 18:22:09.787 (6ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:09.787&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:10.018 (231ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should setup proxy cookies" classname="nginx-ingress-controller e2e suite" status="passed" time="22.293403591">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:10.018&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:17.91 (7.892s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:22:17.91&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:22:21.937 (4.027s)&#xA;&gt; Enter [It] should setup proxy cookies - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:215 @ 04/04/23 18:22:21.937&#xA;&lt; Exit [It] should setup proxy cookies - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:215 @ 04/04/23 18:22:32.141 (10.205s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:32.141&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:32.312 (170ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class Without IngressClass Cluster scoped Permission should ignore Ingress with only IngressClassName" classname="nginx-ingress-controller e2e suite" status="passed" time="28.459532866">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:32.312&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:39.246 (6.934s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:22:39.246&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:22:43.274 (4.028s)&#xA;&gt; Enter [BeforeEach] Without IngressClass Cluster scoped Permission - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:587 @ 04/04/23 18:22:43.274&#xA;&lt; Exit [BeforeEach] Without IngressClass Cluster scoped Permission - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:587 @ 04/04/23 18:22:50.32 (7.047s)&#xA;&gt; Enter [It] should ignore Ingress with only IngressClassName - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:652 @ 04/04/23 18:22:50.32&#xA;&lt; Exit [It] should ignore Ingress with only IngressClassName - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:652 @ 04/04/23 18:23:00.536 (10.216s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:00.536&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:00.771 (235ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] enable-ssl-passthrough With enable-ssl-passthrough enabled should enable ssl-passthrough-proxy-port on a different port" classname="nginx-ingress-controller e2e suite" status="passed" time="29.495200538">
              <system-err>&gt; Enter [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:00.772&#xA;&lt; Exit [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:07.648 (6.876s)&#xA;&gt; Enter [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:39 @ 04/04/23 18:23:07.648&#xA;&lt; Exit [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:39 @ 04/04/23 18:23:18.858 (11.21s)&#xA;&gt; Enter [It] should enable ssl-passthrough-proxy-port on a different port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:56 @ 04/04/23 18:23:18.858&#xA;&lt; Exit [It] should enable ssl-passthrough-proxy-port on a different port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:56 @ 04/04/23 18:23:30.073 (11.215s)&#xA;&gt; Enter [AfterEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:30.073&#xA;&lt; Exit [AfterEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:30.267 (194ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] change default settings should apply the annotation to the default backend" classname="nginx-ingress-controller e2e suite" status="passed" time="21.28407974">
              <system-err>&gt; Enter [BeforeEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:30.267&#xA;&lt; Exit [BeforeEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:37.168 (6.901s)&#xA;&gt; Enter [BeforeEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/with_hosts.go:34 @ 04/04/23 18:23:37.168&#xA;&lt; Exit [BeforeEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/with_hosts.go:34 @ 04/04/23 18:23:41.193 (4.024s)&#xA;&gt; Enter [It] should apply the annotation to the default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/with_hosts.go:38 @ 04/04/23 18:23:41.193&#xA;&lt; Exit [It] should apply the annotation to the default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/with_hosts.go:38 @ 04/04/23 18:23:51.36 (10.167s)&#xA;&gt; Enter [AfterEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:51.36&#xA;&lt; Exit [AfterEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:51.551 (192ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] Geoip2 should include geoip2 line in config when enabled and db file exists" classname="nginx-ingress-controller e2e suite" status="passed" time="31.122649161">
              <system-err>&gt; Enter [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:51.552&#xA;&lt; Exit [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:58.412 (6.86s)&#xA;&gt; Enter [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:42 @ 04/04/23 18:23:58.412&#xA;&lt; Exit [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:42 @ 04/04/23 18:24:02.44 (4.027s)&#xA;&gt; Enter [It] should include geoip2 line in config when enabled and db file exists - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:46 @ 04/04/23 18:24:02.44&#xA;Apr  4 18:24:11.771: INFO: Connecting to github.com (140.82.113.4:443)&#xA;Connecting to github.com (140.82.113.4:443)&#xA;Connecting to raw.githubusercontent.com (185.199.108.133:443)&#xA;saving to &#39;/etc/nginx/geoip/GeoLite2-Country.mmdb&#39;&#xA;GeoLite2-Country.mmd 100%!|(MISSING)********************************| 17952  0:00:00 ETA&#xA;&#39;/etc/nginx/geoip/GeoLite2-Country.mmdb&#39; saved&#xA;&#xA;&lt; Exit [It] should include geoip2 line in config when enabled and db file exists - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:46 @ 04/04/23 18:24:22.088 (19.648s)&#xA;&gt; Enter [AfterEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:22.088&#xA;&lt; Exit [AfterEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:22.674 (586ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] rewrite-target use-regex enable-rewrite-log should allow for custom rewrite parameters" classname="nginx-ingress-controller e2e suite" status="passed" time="22.284349289">
              <system-err>&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:22.675&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:30.572 (7.897s)&#xA;&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 04/04/23 18:24:30.572&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 04/04/23 18:24:34.603 (4.031s)&#xA;&gt; Enter [It] should allow for custom rewrite parameters - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:190 @ 04/04/23 18:24:34.603&#xA;STEP: creating an ingress definition with the use-regex annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:193 @ 04/04/23 18:24:34.603&#xA;STEP: check that &#39;/foo/bar/bar&#39; redirects to custom rewrite - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:206 @ 04/04/23 18:24:44.755&#xA;&lt; Exit [It] should allow for custom rewrite parameters - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:190 @ 04/04/23 18:24:44.757 (10.154s)&#xA;&gt; Enter [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:44.757&#xA;&lt; Exit [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:44.959 (202ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check server names hash size should set server_names_hash_bucket_size" classname="nginx-ingress-controller e2e suite" status="passed" time="30.356197074">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:44.96&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:53.864 (8.905s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 04/04/23 18:24:53.864&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 04/04/23 18:25:04.899 (11.035s)&#xA;&gt; Enter [It] should set server_names_hash_bucket_size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:40 @ 04/04/23 18:25:04.899&#xA;&lt; Exit [It] should set server_names_hash_bucket_size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:40 @ 04/04/23 18:25:15.061 (10.162s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:15.061&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:15.316 (255ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] custom HTTP and HTTPS ports with a TLS enabled ingress should set X-Forwarded-Port header to 443" classname="nginx-ingress-controller e2e suite" status="passed" time="44.268466762">
              <system-err>&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:15.316&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:39.846 (24.53s)&#xA;&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 04/04/23 18:25:39.846&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 04/04/23 18:25:47.041 (7.195s)&#xA;&gt; Enter [It] should set X-Forwarded-Port header to 443 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:70 @ 04/04/23 18:25:47.041&#xA;&lt; Exit [It] should set X-Forwarded-Port header to 443 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:70 @ 04/04/23 18:25:59.374 (12.333s)&#xA;&gt; Enter [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:59.374&#xA;&lt; Exit [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:59.585 (211ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-sync-events should create sync events (default)" classname="nginx-ingress-controller e2e suite" status="passed" time="21.291606043">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:59.585&#xA;&lt; Exit [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:06.445 (6.86s)&#xA;&gt; Enter [It] should create sync events (default) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:35 @ 04/04/23 18:26:06.445&#xA;&lt; Exit [It] should create sync events (default) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:35 @ 04/04/23 18:26:20.681 (14.236s)&#xA;&gt; Enter [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:20.681&#xA;&lt; Exit [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:20.877 (196ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not allow - unmatching origin with wildcard origin (2 subdomains)" classname="nginx-ingress-controller e2e suite" status="passed" time="18.145584685">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:20.877&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:27.751 (6.874s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:26:27.751&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:26:31.787 (4.036s)&#xA;&gt; Enter [It] should not allow - unmatching origin with wildcard origin (2 subdomains) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:468 @ 04/04/23 18:26:31.787&#xA;&lt; Exit [It] should not allow - unmatching origin with wildcard origin (2 subdomains) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:468 @ 04/04/23 18:26:38.82 (7.032s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:38.82&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:39.022 (203ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-send-timeout should not set invalid proxy send timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="29.217298979">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:39.023&#xA;&lt; Exit [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:46.929 (7.906s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:32 @ 04/04/23 18:26:46.929&#xA;&lt; Exit [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:32 @ 04/04/23 18:26:50.949 (4.02s)&#xA;&gt; Enter [It] should not set invalid proxy send timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:52 @ 04/04/23 18:26:50.949&#xA;&lt; Exit [It] should not set invalid proxy send timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:52 @ 04/04/23 18:27:08.052 (17.103s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:08.052&#xA;&lt; Exit [AfterEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:08.24 (188ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check server names hash size should set server_names_hash_max_size" classname="nginx-ingress-controller e2e suite" status="passed" time="29.415884826">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:08.24&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:16.131 (7.891s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 04/04/23 18:27:16.131&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 04/04/23 18:27:27.187 (11.056s)&#xA;&gt; Enter [It] should set server_names_hash_max_size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:48 @ 04/04/23 18:27:27.187&#xA;&lt; Exit [It] should set server_names_hash_max_size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:48 @ 04/04/23 18:27:37.411 (10.224s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:37.411&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:37.656 (245ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should set proxy client-max-body-size to 8m" classname="nginx-ingress-controller e2e suite" status="passed" time="21.297633873">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:37.657&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:44.535 (6.879s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:27:44.535&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:27:48.555 (4.02s)&#xA;&gt; Enter [It] should set proxy client-max-body-size to 8m - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:85 @ 04/04/23 18:27:48.555&#xA;&lt; Exit [It] should set proxy client-max-body-size to 8m - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:85 @ 04/04/23 18:27:58.71 (10.155s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:58.71&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:58.954 (244ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not break functionality with extra domain" classname="nginx-ingress-controller e2e suite" status="passed" time="19.187139443">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:58.955&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:06.864 (7.909s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:28:06.864&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:28:10.897 (4.033s)&#xA;&gt; Enter [It] should not break functionality with extra domain - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:314 @ 04/04/23 18:28:10.897&#xA;&lt; Exit [It] should not break functionality with extra domain - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:314 @ 04/04/23 18:28:17.933 (7.036s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:17.933&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:18.142 (209ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-ssl-* proxy-ssl-location-only flag should change the nginx config server part" classname="nginx-ingress-controller e2e suite" status="passed" time="43.288812125">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:18.142&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:26.105 (7.963s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 04/04/23 18:28:26.105&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 04/04/23 18:28:28.133 (2.028s)&#xA;&gt; Enter [It] proxy-ssl-location-only flag should change the nginx config server part - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:150 @ 04/04/23 18:28:28.133&#xA;&lt; Exit [It] proxy-ssl-location-only flag should change the nginx config server part - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:150 @ 04/04/23 18:29:01.214 (33.081s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:01.214&#xA;&lt; Exit [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:01.431 (217ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* with invalid auth-url should deny whole location should add error to the config" classname="nginx-ingress-controller e2e suite" status="passed" time="155.376018795">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:01.431&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:31:19.232 (2m17.801s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:31:19.232&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:31:23.279 (4.047s)&#xA;&gt; Enter [BeforeEach] with invalid auth-url should deny whole location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:866 @ 04/04/23 18:31:23.279&#xA;&lt; Exit [BeforeEach] with invalid auth-url should deny whole location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:866 @ 04/04/23 18:31:33.459 (10.18s)&#xA;&gt; Enter [It] should add error to the config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:887 @ 04/04/23 18:31:33.459&#xA;&lt; Exit [It] should add error to the config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:887 @ 04/04/23 18:31:36.583 (3.124s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:31:36.583&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:31:36.807 (224ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] SSL should return a self generated SSL certificate" classname="nginx-ingress-controller e2e suite" status="passed" time="12.194301845">
              <system-err>&gt; Enter [BeforeEach] [Default Backend] SSL - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:31:36.808&#xA;&lt; Exit [BeforeEach] [Default Backend] SSL - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:31:43.735 (6.927s)&#xA;&gt; Enter [It] should return a self generated SSL certificate - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/ssl.go:29 @ 04/04/23 18:31:43.735&#xA;STEP: checking SSL Certificate using the NGINX IP address - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/ssl.go:30 @ 04/04/23 18:31:43.735&#xA;STEP: checking SSL Certificate using the NGINX catch all server - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/ssl.go:45 @ 04/04/23 18:31:48.771&#xA;&lt; Exit [It] should return a self generated SSL certificate - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/ssl.go:29 @ 04/04/23 18:31:48.798 (5.063s)&#xA;&gt; Enter [AfterEach] [Default Backend] SSL - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:31:48.798&#xA;&lt; Exit [AfterEach] [Default Backend] SSL - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:31:49.002 (204ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication with caching is configured should return status code 200 when signed in after auth backend is deleted" classname="nginx-ingress-controller e2e suite" status="passed" time="68.873387156">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:31:49.002&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:31:55.884 (6.881s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:31:55.884&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:31:59.898 (4.014s)&#xA;&gt; Enter [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 04/04/23 18:31:59.898&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 04/04/23 18:32:04.919&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 04/04/23 18:32:15.067&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 04/04/23 18:32:25.279&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 04/04/23 18:32:35.453&#xA;&lt; Exit [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 04/04/23 18:32:50.643 (50.746s)&#xA;&gt; Enter [It] should return status code 200 when signed in after auth backend is deleted  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:772 @ 04/04/23 18:32:50.643&#xA;&lt; Exit [It] should return status code 200 when signed in after auth backend is deleted  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:772 @ 04/04/23 18:32:57.666 (7.022s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:57.666&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:57.876 (210ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-ssl-* should set valid proxy-ssl-secret, proxy-ssl-protocols" classname="nginx-ingress-controller e2e suite" status="passed" time="21.67574864">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:57.876&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:04.793 (6.917s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 04/04/23 18:33:04.793&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 04/04/23 18:33:08.814 (4.021s)&#xA;&gt; Enter [It] should set valid proxy-ssl-secret, proxy-ssl-protocols - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:122 @ 04/04/23 18:33:08.814&#xA;&lt; Exit [It] should set valid proxy-ssl-secret, proxy-ssl-protocols - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:122 @ 04/04/23 18:33:19.338 (10.524s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:19.338&#xA;&lt; Exit [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:19.552 (213ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should be disabled by default" classname="nginx-ingress-controller e2e suite" status="passed" time="10.227903498">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:19.552&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:26.442 (6.89s)&#xA;&gt; Enter [It] should be disabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:32 @ 04/04/23 18:33:26.442&#xA;&lt; Exit [It] should be disabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:32 @ 04/04/23 18:33:29.606 (3.164s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:29.606&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:29.78 (174ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinitymode Balanced affinity mode should balance" classname="nginx-ingress-controller e2e suite" status="passed" time="25.347106236">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:29.78&#xA;&lt; Exit [BeforeEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:36.668 (6.887s)&#xA;&gt; Enter [It] Balanced affinity mode should balance - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinitymode.go:34 @ 04/04/23 18:33:36.668&#xA;&lt; Exit [It] Balanced affinity mode should balance - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinitymode.go:34 @ 04/04/23 18:33:54.927 (18.259s)&#xA;&gt; Enter [AfterEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:54.927&#xA;&lt; Exit [AfterEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:55.127 (200ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-next-upstream should build proxy next upstream using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="29.357042378">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:55.128&#xA;&lt; Exit [BeforeEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:03.016 (7.888s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_next_upstream.go:32 @ 04/04/23 18:34:03.016&#xA;&lt; Exit [BeforeEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_next_upstream.go:32 @ 04/04/23 18:34:07.036 (4.021s)&#xA;&gt; Enter [It] should build proxy next upstream using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_next_upstream.go:36 @ 04/04/23 18:34:07.036&#xA;&lt; Exit [It] should build proxy next upstream using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_next_upstream.go:36 @ 04/04/23 18:34:24.255 (17.219s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:24.255&#xA;&lt; Exit [AfterEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:24.485 (230ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should set proxy_redirect to off" classname="nginx-ingress-controller e2e suite" status="passed" time="21.295257079">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:24.485&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:31.385 (6.9s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:34:31.385&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:34:35.427 (4.042s)&#xA;&gt; Enter [It] should set proxy_redirect to off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:36 @ 04/04/23 18:34:35.427&#xA;&lt; Exit [It] should set proxy_redirect to off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:36 @ 04/04/23 18:34:45.603 (10.176s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:45.603&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:45.78 (178ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should not exists opentracing_operation_name directive when is empty" classname="nginx-ingress-controller e2e suite" status="passed" time="28.296945502">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:45.781&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:52.66 (6.879s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:34:52.66&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:34:56.689 (4.029s)&#xA;&gt; Enter [It] should not exists opentracing_operation_name directive when is empty - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:100 @ 04/04/23 18:34:56.689&#xA;&lt; Exit [It] should not exists opentracing_operation_name directive when is empty - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:100 @ 04/04/23 18:35:13.844 (17.155s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:13.844&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:14.078 (234ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:35:14.078&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:35:14.078 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] influxdb-* when influxdb is enabled should send the request metric to the influxdb server" classname="nginx-ingress-controller e2e suite" status="passed" time="45.55392001">
              <system-err>&gt; Enter [BeforeEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:14.078&#xA;&lt; Exit [BeforeEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:22.011 (7.933s)&#xA;&gt; Enter [BeforeEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/influxdb.go:42 @ 04/04/23 18:35:22.011&#xA;&lt; Exit [BeforeEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/influxdb.go:42 @ 04/04/23 18:35:38.056 (16.045s)&#xA;&gt; Enter [It] should send the request metric to the influxdb server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/influxdb.go:48 @ 04/04/23 18:35:38.056&#xA;&lt; Exit [It] should send the request metric to the influxdb server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/influxdb.go:48 @ 04/04/23 18:35:59.417 (21.362s)&#xA;&gt; Enter [AfterEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:59.417&#xA;&lt; Exit [AfterEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:59.632 (215ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should enable opentracing using datadog" classname="nginx-ingress-controller e2e suite" status="passed" time="31.178047596">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:59.632&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:06.509 (6.876s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:36:06.509&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:36:10.532 (4.023s)&#xA;&gt; Enter [It] should enable opentracing using datadog - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:241 @ 04/04/23 18:36:10.532&#xA;&lt; Exit [It] should enable opentracing using datadog - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:241 @ 04/04/23 18:36:30.574 (20.042s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:30.574&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:30.81 (237ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:36:30.81&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:36:30.81 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] definition without host should set ingress details variables for ingresses without a host" classname="nginx-ingress-controller e2e suite" status="passed" time="21.276931352">
              <system-err>&gt; Enter [BeforeEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:30.811&#xA;&lt; Exit [BeforeEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:37.689 (6.878s)&#xA;&gt; Enter [It] should set ingress details variables for ingresses without a host - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/without_host.go:34 @ 04/04/23 18:36:37.689&#xA;&lt; Exit [It] should set ingress details variables for ingresses without a host - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/without_host.go:34 @ 04/04/23 18:36:51.912 (14.223s)&#xA;&gt; Enter [AfterEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:51.912&#xA;&lt; Exit [AfterEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:52.088 (176ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] main-snippet should add value of main-snippet setting to nginx config" classname="nginx-ingress-controller e2e suite" status="passed" time="18.324672874">
              <system-err>&gt; Enter [BeforeEach] [Setting] main-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:52.088&#xA;&lt; Exit [BeforeEach] [Setting] main-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:59.999 (7.911s)&#xA;&gt; Enter [It] should add value of main-snippet setting to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/main_snippet.go:31 @ 04/04/23 18:36:59.999&#xA;&lt; Exit [It] should add value of main-snippet setting to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/main_snippet.go:31 @ 04/04/23 18:37:10.187 (10.188s)&#xA;&gt; Enter [AfterEach] [Setting] main-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:10.187&#xA;&lt; Exit [AfterEach] [Setting] main-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:10.413 (225ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with value and pattern should route requests to the correct upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="28.358772993">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:10.413&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:17.279 (6.866s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:37:17.279&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:37:21.337 (4.058s)&#xA;&gt; Enter [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:532 @ 04/04/23 18:37:21.337&#xA;STEP: routing requests to the mainline upstream when header is set to &#39;DoCananry&#39; and header-value is &#39;DoCanary&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:557 @ 04/04/23 18:37:38.545&#xA;&lt; Exit [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:532 @ 04/04/23 18:37:38.552 (17.215s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:38.552&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:38.772 (219ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should serve Ingress when class is added" classname="nginx-ingress-controller e2e suite" status="passed" time="36.494045555">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:38.772&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:45.664 (6.892s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:37:45.664&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:37:49.681 (4.017s)&#xA;&gt; Enter [It] should serve Ingress when class is added - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:257 @ 04/04/23 18:37:49.681&#xA;&lt; Exit [It] should serve Ingress when class is added - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:257 @ 04/04/23 18:38:15.087 (25.406s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:15.087&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:15.266 (179ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - GRPC should return OK for service with backend protocol GRPCS" classname="nginx-ingress-controller e2e suite" status="passed" time="24.346743802">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:15.266&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:23.144 (7.877s)&#xA;&gt; Enter [It] should return OK for service with backend protocol GRPCS - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:199 @ 04/04/23 18:38:23.144&#xA;&lt; Exit [It] should return OK for service with backend protocol GRPCS - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:199 @ 04/04/23 18:38:39.406 (16.262s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:39.406&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:39.613 (207ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] annotation-global-rate-limit generates correct configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="44.912006655">
              <system-err>&gt; Enter [BeforeEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:39.613&#xA;&lt; Exit [BeforeEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:46.507 (6.894s)&#xA;&gt; Enter [BeforeEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/globalratelimit.go:34 @ 04/04/23 18:38:46.507&#xA;&lt; Exit [BeforeEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/globalratelimit.go:34 @ 04/04/23 18:38:50.531 (4.023s)&#xA;&gt; Enter [It] generates correct configuration - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/globalratelimit.go:38 @ 04/04/23 18:38:50.531&#xA;STEP: regenerating the correct configuration after update - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/globalratelimit.go:65 @ 04/04/23 18:39:12.735&#xA;&lt; Exit [It] generates correct configuration - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/globalratelimit.go:38 @ 04/04/23 18:39:23.972 (33.441s)&#xA;&gt; Enter [AfterEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:23.972&#xA;&lt; Exit [AfterEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:24.525 (553ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] Bad annotation values [BAD_ANNOTATIONS] should drop an ingress if there is a forbidden word in some annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="44.961262468">
              <system-err>&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:24.526&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:32.928 (8.402s)&#xA;&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 04/04/23 18:39:32.928&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 04/04/23 18:39:36.954 (4.026s)&#xA;&gt; Enter [It] [BAD_ANNOTATIONS] should drop an ingress if there is a forbidden word in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:67 @ 04/04/23 18:39:36.954&#xA;&lt; Exit [It] [BAD_ANNOTATIONS] should drop an ingress if there is a forbidden word in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:67 @ 04/04/23 18:40:09.289 (32.335s)&#xA;&gt; Enter [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:09.289&#xA;&lt; Exit [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:09.487 (198ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] x-forwarded-prefix should not add X-Forwarded-Prefix if the annotation value is empty" classname="nginx-ingress-controller e2e suite" status="passed" time="21.334669278">
              <system-err>&gt; Enter [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:40:09.487&#xA;&lt; Exit [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:40:16.38 (6.893s)&#xA;&gt; Enter [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:31 @ 04/04/23 18:40:16.38&#xA;&lt; Exit [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:31 @ 04/04/23 18:40:20.419 (4.039s)&#xA;&gt; Enter [It] should not add X-Forwarded-Prefix if the annotation value is empty - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:57 @ 04/04/23 18:40:20.419&#xA;&lt; Exit [It] should not add X-Forwarded-Prefix if the annotation value is empty - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:57 @ 04/04/23 18:40:30.626 (10.207s)&#xA;&gt; Enter [AfterEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:30.626&#xA;&lt; Exit [AfterEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:30.822 (196ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should ignore Ingress without IngressClass configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="28.41523425">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:40:30.822&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:40:37.735 (6.913s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:40:37.735&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:40:41.759 (4.024s)&#xA;&gt; Enter [It] should ignore Ingress without IngressClass configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:164 @ 04/04/23 18:40:41.759&#xA;&lt; Exit [It] should ignore Ingress without IngressClass configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:164 @ 04/04/23 18:40:58.984 (17.225s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:58.984&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:59.238 (254ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set cookie with domain" classname="nginx-ingress-controller e2e suite" status="passed" time="29.966187459">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:04:19.257&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:04:26.759 (7.502s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:04:26.759&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:04:38.804 (12.045s)&#xA;&gt; Enter [It] should set cookie with domain - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:225 @ 04/04/23 18:04:38.804&#xA;&lt; Exit [It] should set cookie with domain - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:225 @ 04/04/23 18:04:49.017 (10.213s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:04:49.017&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:04:49.223 (207ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Nil Service Backend should return 404 when backend service is nil" classname="nginx-ingress-controller e2e suite" status="passed" time="29.349579291">
              <system-err>&gt; Enter [BeforeEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:04:49.225&#xA;&lt; Exit [BeforeEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:04:57.104 (7.879s)&#xA;&gt; Enter [BeforeEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_nil_backend.go:34 @ 04/04/23 18:04:57.104&#xA;&lt; Exit [BeforeEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_nil_backend.go:34 @ 04/04/23 18:05:01.132 (4.029s)&#xA;&gt; Enter [It] should return 404 when backend service is nil - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_nil_backend.go:38 @ 04/04/23 18:05:01.132&#xA;STEP: setting an ingress with a nil backend - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_nil_backend.go:39 @ 04/04/23 18:05:01.132&#xA;&lt; Exit [It] should return 404 when backend service is nil - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_nil_backend.go:38 @ 04/04/23 18:05:18.375 (17.242s)&#xA;&gt; Enter [AfterEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:18.375&#xA;&lt; Exit [AfterEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:18.574 (200ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set the path to /something on the generated cookie" classname="nginx-ingress-controller e2e suite" status="passed" time="21.311039096000002">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:18.575&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:25.47 (6.895s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:05:25.47&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:05:29.501 (4.031s)&#xA;&gt; Enter [It] should set the path to /something on the generated cookie - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:99 @ 04/04/23 18:05:29.501&#xA;&lt; Exit [It] should set the path to /something on the generated cookie - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:99 @ 04/04/23 18:05:39.685 (10.184s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:39.685&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:39.886 (201ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] block-* should block CIDRs defined in the ConfigMap" classname="nginx-ingress-controller e2e suite" status="passed" time="28.417865083">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:39.886&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:46.798 (6.912s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 04/04/23 18:05:46.798&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 04/04/23 18:05:57.853 (11.055s)&#xA;&gt; Enter [It] should block CIDRs defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:38 @ 04/04/23 18:05:57.853&#xA;&lt; Exit [It] should block CIDRs defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:38 @ 04/04/23 18:06:08.065 (10.213s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:08.065&#xA;&lt; Exit [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:08.304 (239ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-read-timeout should set valid proxy read timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="28.373125957">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:08.304&#xA;&lt; Exit [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:15.196 (6.891s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:32 @ 04/04/23 18:06:15.196&#xA;&lt; Exit [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:32 @ 04/04/23 18:06:19.22 (4.024s)&#xA;&gt; Enter [It] should set valid proxy read timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:36 @ 04/04/23 18:06:19.22&#xA;&lt; Exit [It] should set valid proxy read timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:36 @ 04/04/23 18:06:36.431 (17.211s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:36.431&#xA;&lt; Exit [AfterEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:36.678 (246ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-send-timeout should set valid proxy send timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="28.283099319">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:36.678&#xA;&lt; Exit [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:43.562 (6.884s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:32 @ 04/04/23 18:06:43.562&#xA;&lt; Exit [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:32 @ 04/04/23 18:06:47.588 (4.026s)&#xA;&gt; Enter [It] should set valid proxy send timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:36 @ 04/04/23 18:06:47.588&#xA;&lt; Exit [It] should set valid proxy send timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:36 @ 04/04/23 18:07:04.782 (17.194s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:04.782&#xA;&lt; Exit [AfterEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:04.961 (179ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with value should route requests to the correct upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="33.351072485">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:04.961&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:12.853 (7.892s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:07:12.853&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:07:20.912 (8.059s)&#xA;&gt; Enter [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:426 @ 04/04/23 18:07:20.912&#xA;STEP: routing requests to the canary upstream when header is set to &#39;DoCanary&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:451 @ 04/04/23 18:07:38.088&#xA;STEP: routing requests to the mainline upstream when header is set to &#39;always&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:460 @ 04/04/23 18:07:38.092&#xA;STEP: routing requests to the mainline upstream when header is set to &#39;never&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:469 @ 04/04/23 18:07:38.097&#xA;STEP: routing requests to the mainline upstream when header is set to anything else - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:478 @ 04/04/23 18:07:38.101&#xA;&lt; Exit [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:426 @ 04/04/23 18:07:38.105 (17.192s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:38.105&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:38.312 (208ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured with a custom redirect param keeps processing new ingresses even if one of the existing ingresses is misconfigured" classname="nginx-ingress-controller e2e suite" status="passed" time="50.940964633">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:38.313&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:45.57 (7.258s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:07:45.57&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:07:49.597 (4.027s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 04/04/23 18:07:49.597&#xA;&lt; Exit [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 04/04/23 18:08:17.835 (28.238s)&#xA;&gt; Enter [It] keeps processing new ingresses even if one of the existing ingresses is misconfigured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:698 @ 04/04/23 18:08:17.835&#xA;&lt; Exit [It] keeps processing new ingresses even if one of the existing ingresses is misconfigured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:698 @ 04/04/23 18:08:29.028 (11.193s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:08:29.028&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:08:29.254 (225ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canary is created should route requests to the correct upstream if mainline ingress is created after the canary ingress" classname="nginx-ingress-controller e2e suite" status="passed" time="33.290599437">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:08:29.254&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:08:37.146 (7.892s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:08:37.146&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:08:45.193 (8.047s)&#xA;&gt; Enter [It] should route requests to the correct upstream if mainline ingress is created after the canary ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:206 @ 04/04/23 18:08:45.193&#xA;STEP: routing requests destined for the mainline ingress to the mainelin upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:231 @ 04/04/23 18:09:02.324&#xA;STEP: routing requests destined for the canary ingress to the canary upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:240 @ 04/04/23 18:09:02.332&#xA;&lt; Exit [It] should route requests to the correct upstream if mainline ingress is created after the canary ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:206 @ 04/04/23 18:09:02.337 (17.144s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:02.337&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:02.545 (208ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity with snippet" classname="nginx-ingress-controller e2e suite" status="passed" time="21.322032369">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:02.545&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:09.432 (6.887s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:09:09.432&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:09:13.454 (4.022s)&#xA;&gt; Enter [It] should enable modsecurity with snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:91 @ 04/04/23 18:09:13.454&#xA;&lt; Exit [It] should enable modsecurity with snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:91 @ 04/04/23 18:09:23.682 (10.227s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:23.682&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:09:23.867 (185ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] settings-global-rate-limit generates correct NGINX configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="162.380955721">
              <system-err>&gt; Enter [BeforeEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:09:23.867&#xA;&lt; Exit [BeforeEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:41.632 (2m17.765s)&#xA;&gt; Enter [BeforeEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:34 @ 04/04/23 18:11:41.632&#xA;&lt; Exit [BeforeEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:34 @ 04/04/23 18:11:45.686 (4.054s)&#xA;&gt; Enter [It] generates correct NGINX configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:38 @ 04/04/23 18:11:45.686&#xA;STEP: generating correct defaults - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:43 @ 04/04/23 18:11:52.711&#xA;STEP: applying customizations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:61 @ 04/04/23 18:11:55.865&#xA;&lt; Exit [It] generates correct NGINX configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:38 @ 04/04/23 18:12:06.074 (20.388s)&#xA;&gt; Enter [AfterEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:06.074&#xA;&lt; Exit [AfterEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:06.248 (175ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Load Balancer] EWMA does not fail requests" classname="nginx-ingress-controller e2e suite" status="passed" time="33.046314908">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:06.248&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:13.645 (7.397s)&#xA;&gt; Enter [BeforeEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/ewma.go:34 @ 04/04/23 18:12:13.645&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/ewma.go:34 @ 04/04/23 18:12:24.689 (11.044s)&#xA;&gt; Enter [It] does not fail requests - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/ewma.go:42 @ 04/04/23 18:12:24.689&#xA;Apr  4 18:12:39.085: INFO: Request distribution: map[echo-7b6bf466cc-4gqhv:16 echo-7b6bf466cc-kbjqx:9 echo-7b6bf466cc-scqj9:5]&#xA;&lt; Exit [It] does not fail requests - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/ewma.go:42 @ 04/04/23 18:12:39.085 (14.396s)&#xA;&gt; Enter [AfterEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:39.085&#xA;&lt; Exit [AfterEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:39.295 (210ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should expose headers for cors" classname="nginx-ingress-controller e2e suite" status="passed" time="22.277341561">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:39.295&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:47.18 (7.884s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:12:47.18&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:12:51.204 (4.024s)&#xA;&gt; Enter [It] should expose headers for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:153 @ 04/04/23 18:12:51.204&#xA;&lt; Exit [It] should expose headers for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:153 @ 04/04/23 18:13:01.392 (10.189s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:01.392&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:01.572 (180ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* canary affinity behavior always routes traffic to canary if first request was affinitized to canary (default behavior)" classname="nginx-ingress-controller e2e suite" status="passed" time="40.738608182">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:01.573&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:08.45 (6.878s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:13:08.45&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:13:16.493 (8.042s)&#xA;&gt; Enter [It] always routes traffic to canary if first request was affinitized to canary (default behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:943 @ 04/04/23 18:13:16.493&#xA;&lt; Exit [It] always routes traffic to canary if first request was affinitized to canary (default behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:943 @ 04/04/23 18:13:42.089 (25.596s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:42.089&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:42.311 (222ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-escape-json and log-format-escape-none should disable the log-format-escape-none" classname="nginx-ingress-controller e2e suite" status="passed" time="28.271527881">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:42.312&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:49.227 (6.915s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 04/04/23 18:13:49.227&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 04/04/23 18:14:00.268 (11.041s)&#xA;&gt; Enter [It] should disable the log-format-escape-none - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:71 @ 04/04/23 18:14:00.268&#xA;&lt; Exit [It] should disable the log-format-escape-none - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:71 @ 04/04/23 18:14:10.406 (10.138s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:10.406&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:10.583 (177ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should set proxy_redirect to default" classname="nginx-ingress-controller e2e suite" status="passed" time="21.825938851">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:10.584&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:17.985 (7.402s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:14:17.985&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:14:22.015 (4.03s)&#xA;&gt; Enter [It] should set proxy_redirect to default - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:52 @ 04/04/23 18:14:22.015&#xA;&lt; Exit [It] should set proxy_redirect to default - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:52 @ 04/04/23 18:14:32.238 (10.222s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:32.238&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:32.409 (172ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the upstream keep alive should set keepalive connection to upstream server" classname="nginx-ingress-controller e2e suite" status="passed" time="29.30727806">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:32.41&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:40.329 (7.92s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 04/04/23 18:14:40.329&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 04/04/23 18:14:51.355 (11.026s)&#xA;&gt; Enter [It] should set keepalive connection to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:59 @ 04/04/23 18:14:51.356&#xA;&lt; Exit [It] should set keepalive connection to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:59 @ 04/04/23 18:15:01.513 (10.157s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:01.513&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:01.717 (204ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to https:// and use proxy_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="21.399584297">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:01.717&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:08.628 (6.911s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 04/04/23 18:15:08.628&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 04/04/23 18:15:12.654 (4.026s)&#xA;&gt; Enter [It] should set backend protocol to https:// and use proxy_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:34 @ 04/04/23 18:15:12.654&#xA;&lt; Exit [It] should set backend protocol to https:// and use proxy_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:34 @ 04/04/23 18:15:22.863 (10.21s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:22.863&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:23.117 (253ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with no value should route requests to the correct upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="29.309952801">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:23.117&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:31.017 (7.9s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:15:31.017&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:15:35.052 (4.035s)&#xA;&gt; Enter [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:372 @ 04/04/23 18:15:35.052&#xA;STEP: routing requests to the canary upstream when header is set to &#39;always&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:395 @ 04/04/23 18:15:52.235&#xA;STEP: routing requests to the mainline upstream when header is set to &#39;never&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:404 @ 04/04/23 18:15:52.237&#xA;STEP: routing requests to the mainline upstream when header is set to anything else - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:414 @ 04/04/23 18:15:52.239&#xA;&lt; Exit [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:372 @ 04/04/23 18:15:52.24 (17.188s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:52.24&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:52.427 (187ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should exists opentracing_location_operation_name directive when is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="29.742956364">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:52.428&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:59.303 (6.876s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:15:59.303&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:16:03.326 (4.022s)&#xA;&gt; Enter [It] should exists opentracing_location_operation_name directive when is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:145 @ 04/04/23 18:16:03.326&#xA;&lt; Exit [It] should exists opentracing_location_operation_name directive when is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:145 @ 04/04/23 18:16:20.959 (17.634s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:20.959&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:22.171 (1.211s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:16:22.171&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:16:22.171 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] limit-rate Check limit-rate annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="27.8652561">
              <system-err>&gt; Enter [BeforeEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:22.172&#xA;&lt; Exit [BeforeEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:31.372 (9.2s)&#xA;&gt; Enter [BeforeEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitrate.go:33 @ 04/04/23 18:16:31.372&#xA;&lt; Exit [BeforeEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitrate.go:33 @ 04/04/23 18:16:35.41 (4.038s)&#xA;&gt; Enter [It] Check limit-rate annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitrate.go:37 @ 04/04/23 18:16:35.41&#xA;&lt; Exit [It] Check limit-rate annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitrate.go:37 @ 04/04/23 18:16:49.822 (14.412s)&#xA;&gt; Enter [AfterEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:49.822&#xA;&lt; Exit [AfterEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:50.037 (215ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] configmap stream-snippet should add value of stream-snippet via config map to nginx config" classname="nginx-ingress-controller e2e suite" status="passed" time="34.311850272">
              <system-err>&gt; Enter [BeforeEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:50.037&#xA;&lt; Exit [BeforeEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:57.908 (7.87s)&#xA;&gt; Enter [BeforeEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/stream_snippet.go:38 @ 04/04/23 18:16:57.908&#xA;&lt; Exit [BeforeEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/stream_snippet.go:38 @ 04/04/23 18:17:01.931 (4.024s)&#xA;&gt; Enter [It] should add value of stream-snippet via config map to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/stream_snippet.go:42 @ 04/04/23 18:17:01.931&#xA;&lt; Exit [It] should add value of stream-snippet via config map to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/stream_snippet.go:42 @ 04/04/23 18:17:24.158 (22.227s)&#xA;&gt; Enter [AfterEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:24.158&#xA;&lt; Exit [AfterEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:24.349 (191ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] upstream-hash-by-* should connect to the same pod" classname="nginx-ingress-controller e2e suite" status="passed" time="45.553942925">
              <system-err>&gt; Enter [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:24.35&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:31.239 (6.889s)&#xA;&gt; Enter [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:79 @ 04/04/23 18:17:31.239&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:79 @ 04/04/23 18:17:39.264 (8.025s)&#xA;&gt; Enter [It] should connect to the same pod - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:83 @ 04/04/23 18:17:39.264&#xA;&lt; Exit [It] should connect to the same pod - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:83 @ 04/04/23 18:18:09.666 (30.402s)&#xA;&gt; Enter [AfterEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:09.666&#xA;&lt; Exit [AfterEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:09.903 (237ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should not create additional upstream block when auth-keepalive is set with HTTP/2" classname="nginx-ingress-controller e2e suite" status="passed" time="31.415945068">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:09.904&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:16.786 (6.882s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:18:16.786&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:18:20.804 (4.018s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:18:20.804&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 04/04/23 18:18:35.029 (14.226s)&#xA;&gt; Enter [It] should not create additional upstream block when auth-keepalive is set with HTTP/2 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:609 @ 04/04/23 18:18:35.029&#xA;&lt; Exit [It] should not create additional upstream block when auth-keepalive is set with HTTP/2 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:609 @ 04/04/23 18:18:41.107 (6.078s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:41.107&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:41.32 (212ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-ssl-* should set valid proxy-ssl-secret" classname="nginx-ingress-controller e2e suite" status="passed" time="22.937247348">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:41.32&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:49.195 (7.875s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 04/04/23 18:18:49.195&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 04/04/23 18:18:53.217 (4.022s)&#xA;&gt; Enter [It] should set valid proxy-ssl-secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:37 @ 04/04/23 18:18:53.217&#xA;&lt; Exit [It] should set valid proxy-ssl-secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:37 @ 04/04/23 18:19:04.077 (10.86s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:04.077&#xA;&lt; Exit [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:04.257 (181ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-ssl-* should set valid proxy-ssl-secret, proxy-ssl-ciphers to HIGH:!AES" classname="nginx-ingress-controller e2e suite" status="passed" time="23.410135069">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:04.258&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:12.153 (7.895s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 04/04/23 18:19:12.153&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 04/04/23 18:19:16.174 (4.021s)&#xA;&gt; Enter [It] should set valid proxy-ssl-secret, proxy-ssl-ciphers to HIGH:!AES - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:94 @ 04/04/23 18:19:16.174&#xA;&lt; Exit [It] should set valid proxy-ssl-secret, proxy-ssl-ciphers to HIGH:!AES - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:94 @ 04/04/23 18:19:27.319 (11.146s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:27.32&#xA;&lt; Exit [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:27.668 (348ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to &#39;&#39; and use fastcgi_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="21.643801846">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:27.668&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:34.827 (7.159s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 04/04/23 18:19:34.827&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 04/04/23 18:19:38.85 (4.023s)&#xA;&gt; Enter [It] should set backend protocol to &#39;&#39; and use fastcgi_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:94 @ 04/04/23 18:19:38.85&#xA;&lt; Exit [It] should set backend protocol to &#39;&#39; and use fastcgi_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:94 @ 04/04/23 18:19:49.066 (10.216s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:49.066&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:49.312 (246ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should return status 502 for service type=ExternalName with an invalid host" classname="nginx-ingress-controller e2e suite" status="passed" time="24.223123224">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:49.312&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:57.192 (7.879s)&#xA;&gt; Enter [It] should return status 502 for service type=ExternalName with an invalid host - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:153 @ 04/04/23 18:19:57.192&#xA;&lt; Exit [It] should return status 502 for service type=ExternalName with an invalid host - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:153 @ 04/04/23 18:20:12.695 (15.504s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:12.695&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:13.536 (840ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should set request-redirect when global-auth-request-redirect is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="56.08885726">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:13.536&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:20.628 (7.092s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:20:20.628&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:20:28.704 (8.077s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:20:28.704&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 04/04/23 18:20:28.704&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 04/04/23 18:20:38.882&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 04/04/23 18:20:49.057&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:20:59.272 (30.567s)&#xA;&gt; Enter [It] should set request-redirect when global-auth-request-redirect is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:237 @ 04/04/23 18:20:59.272&#xA;STEP: Adding a global-auth-request-redirect to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:242 @ 04/04/23 18:20:59.272&#xA;&lt; Exit [It] should set request-redirect when global-auth-request-redirect is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:237 @ 04/04/23 18:21:09.45 (10.178s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:09.45&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:09.625 (175ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] service-upstream when enabling in the configmap and disabling in the annotations should not use the Service Cluster IP and Port" classname="nginx-ingress-controller e2e suite" status="passed" time="28.500641833">
              <system-err>&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:09.625&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:16.495 (6.87s)&#xA;&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 04/04/23 18:21:16.495&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 04/04/23 18:21:20.516 (4.021s)&#xA;&gt; Enter [It] should not use the Service Cluster IP and Port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:99 @ 04/04/23 18:21:20.516&#xA;STEP: checking if the service is reached - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:113 @ 04/04/23 18:21:37.731&#xA;STEP: checking if the Service Cluster IP and Port are not used - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:120 @ 04/04/23 18:21:37.737&#xA;&lt; Exit [It] should not use the Service Cluster IP and Port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:99 @ 04/04/23 18:21:37.9 (17.384s)&#xA;&gt; Enter [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:37.9&#xA;&lt; Exit [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:21:38.126 (226ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] server-alias should return status code 200 for host &#39;foo&#39; and &#39;bar&#39;" classname="nginx-ingress-controller e2e suite" status="passed" time="22.287533212">
              <system-err>&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:38.126&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:21:46.024 (7.897s)&#xA;&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 04/04/23 18:21:46.024&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 04/04/23 18:21:50.044 (4.02s)&#xA;&gt; Enter [It] should return status code 200 for host &#39;foo&#39; and &#39;bar&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:62 @ 04/04/23 18:21:50.044&#xA;&lt; Exit [It] should return status code 200 for host &#39;foo&#39; and &#39;bar&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:62 @ 04/04/23 18:22:00.233 (10.189s)&#xA;&gt; Enter [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:00.233&#xA;&lt; Exit [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:00.414 (181ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-escape-json and log-format-escape-none should not configure log-format escape by default" classname="nginx-ingress-controller e2e suite" status="passed" time="21.319101474">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:00.414&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:07.306 (6.892s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 04/04/23 18:22:07.306&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 04/04/23 18:22:18.341 (11.035s)&#xA;&gt; Enter [It] should not configure log-format escape by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:40 @ 04/04/23 18:22:18.341&#xA;&lt; Exit [It] should not configure log-format escape by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:40 @ 04/04/23 18:22:21.446 (3.105s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:21.446&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:21.733 (287ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canary is created should route requests to the correct upstream if the mainline ingress is modified" classname="nginx-ingress-controller e2e suite" status="passed" time="168.05341063">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:21.733&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:39.876 (2m18.143s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:24:39.876&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:24:47.956 (8.08s)&#xA;&gt; Enter [It] should route requests to the correct upstream if the mainline ingress is modified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:250 @ 04/04/23 18:24:47.956&#xA;STEP: routing requests destined fro the mainline ingress to the mainline upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:288 @ 04/04/23 18:25:09.571&#xA;STEP: routing requests destined for the canary ingress to the canary upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:297 @ 04/04/23 18:25:09.578&#xA;&lt; Exit [It] should route requests to the correct upstream if the mainline ingress is modified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:250 @ 04/04/23 18:25:09.586 (21.629s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:09.586&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:09.787 (201ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] upstream-hash-by-* should connect to the same subset of pods" classname="nginx-ingress-controller e2e suite" status="passed" time="45.556284939">
              <system-err>&gt; Enter [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:09.787&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:16.668 (6.881s)&#xA;&gt; Enter [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:79 @ 04/04/23 18:25:16.668&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:79 @ 04/04/23 18:25:24.696 (8.028s)&#xA;&gt; Enter [It] should connect to the same subset of pods - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:92 @ 04/04/23 18:25:24.696&#xA;&lt; Exit [It] should connect to the same subset of pods - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:92 @ 04/04/23 18:25:55.101 (30.405s)&#xA;&gt; Enter [AfterEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:55.101&#xA;&lt; Exit [AfterEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:55.343 (242ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [SSL] redirect to HTTPS should redirect from HTTP to HTTPS when secret is missing" classname="nginx-ingress-controller e2e suite" status="passed" time="24.373667503">
              <system-err>&gt; Enter [BeforeEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:55.344&#xA;&lt; Exit [BeforeEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:02.277 (6.934s)&#xA;&gt; Enter [BeforeEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/http_redirect.go:32 @ 04/04/23 18:26:02.277&#xA;&lt; Exit [BeforeEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/http_redirect.go:32 @ 04/04/23 18:26:06.299 (4.021s)&#xA;&gt; Enter [It] should redirect from HTTP to HTTPS when secret is missing - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/http_redirect.go:36 @ 04/04/23 18:26:06.299&#xA;&lt; Exit [It] should redirect from HTTP to HTTPS when secret is missing - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/http_redirect.go:36 @ 04/04/23 18:26:19.516 (13.217s)&#xA;&gt; Enter [AfterEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:19.516&#xA;&lt; Exit [AfterEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:19.717 (201ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] configmap server-snippet should add global server-snippet and drop annotations per admin config" classname="nginx-ingress-controller e2e suite" status="passed" time="43.438812584">
              <system-err>&gt; Enter [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:19.718&#xA;&lt; Exit [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:26.668 (6.951s)&#xA;&gt; Enter [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:31 @ 04/04/23 18:26:26.668&#xA;&lt; Exit [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:31 @ 04/04/23 18:26:30.695 (4.027s)&#xA;&gt; Enter [It] should add global server-snippet and drop annotations per admin config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:92 @ 04/04/23 18:26:30.695&#xA;&lt; Exit [It] should add global server-snippet and drop annotations per admin config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:92 @ 04/04/23 18:27:02.982 (32.287s)&#xA;&gt; Enter [AfterEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:02.982&#xA;&lt; Exit [AfterEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:03.156 (175ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set cookie with expires" classname="nginx-ingress-controller e2e suite" status="passed" time="22.389477827">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:03.157&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:11.021 (7.864s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:27:11.021&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:27:15.049 (4.028s)&#xA;&gt; Enter [It] should set cookie with expires - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:194 @ 04/04/23 18:27:15.049&#xA;&lt; Exit [It] should set cookie with expires - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:194 @ 04/04/23 18:27:25.315 (10.266s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:25.315&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:25.546 (231ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow - matching origin with wildcard origin (2 subdomains)" classname="nginx-ingress-controller e2e suite" status="passed" time="18.14890018">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:25.547&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:32.464 (6.917s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:27:32.464&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:27:36.484 (4.02s)&#xA;&gt; Enter [It] should allow - matching origin with wildcard origin (2 subdomains) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:425 @ 04/04/23 18:27:36.484&#xA;&lt; Exit [It] should allow - matching origin with wildcard origin (2 subdomains) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:425 @ 04/04/23 18:27:43.52 (7.037s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:43.52&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:43.695 (175ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] enable-multi-accept should be enabled when set to true" classname="nginx-ingress-controller e2e suite" status="passed" time="17.346789678">
              <system-err>&gt; Enter [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:43.696&#xA;&lt; Exit [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:50.592 (6.896s)&#xA;&gt; Enter [It] should be enabled when set to true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:39 @ 04/04/23 18:27:50.592&#xA;&lt; Exit [It] should be enabled when set to true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:39 @ 04/04/23 18:28:00.821 (10.229s)&#xA;&gt; Enter [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:00.821&#xA;&lt; Exit [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:01.043 (221ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] Bad annotation values [BAD_ANNOTATIONS] should allow an ingress if there is a default blocklist config in place" classname="nginx-ingress-controller e2e suite" status="passed" time="30.46844143">
              <system-err>&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:01.043&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:08.918 (7.875s)&#xA;&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 04/04/23 18:28:08.918&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 04/04/23 18:28:12.942 (4.024s)&#xA;&gt; Enter [It] [BAD_ANNOTATIONS] should allow an ingress if there is a default blocklist config in place - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:102 @ 04/04/23 18:28:12.942&#xA;&lt; Exit [It] [BAD_ANNOTATIONS] should allow an ingress if there is a default blocklist config in place - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:102 @ 04/04/23 18:28:31.293 (18.352s)&#xA;&gt; Enter [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:31.293&#xA;&lt; Exit [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:31.512 (218ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should return status code 200 when request whitelisted (via ingress annotation) service and 401 when request protected service" classname="nginx-ingress-controller e2e suite" status="passed" time="49.899045109">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:31.512&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:38.394 (6.882s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:28:38.394&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:28:46.454 (8.06s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:28:46.454&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 04/04/23 18:28:46.454&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 04/04/23 18:28:56.618&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 04/04/23 18:29:06.764&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 04/04/23 18:29:16.991 (30.537s)&#xA;&gt; Enter [It] should return status code 200 when request whitelisted (via ingress annotation) service and 401 when request protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:126 @ 04/04/23 18:29:16.991&#xA;STEP: Adding an ingress rule for /bar with annotation enable-global-auth = false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:128 @ 04/04/23 18:29:16.991&#xA;STEP: Sending a request to protected service /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:140 @ 04/04/23 18:29:21.174&#xA;STEP: Sending a request to whitelisted service /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:147 @ 04/04/23 18:29:21.184&#xA;&lt; Exit [It] should return status code 200 when request whitelisted (via ingress annotation) service and 401 when request protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:126 @ 04/04/23 18:29:21.191 (4.2s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:21.191&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:21.411 (220ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic configuration when only backends change handles an annotation change" classname="nginx-ingress-controller e2e suite" status="passed" time="28.208007184">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:21.411&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:28.853 (7.441s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 04/04/23 18:29:28.853&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 04/04/23 18:29:43.082 (14.23s)&#xA;&gt; Enter [It] handles an annotation change - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:171 @ 04/04/23 18:29:43.082&#xA;&lt; Exit [It] handles an annotation change - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:171 @ 04/04/23 18:29:49.435 (6.352s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:49.435&#xA;&lt; Exit [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:49.619 (185ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] server-tokens should exists Server header in the response when is enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="28.239544805">
              <system-err>&gt; Enter [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:49.62&#xA;&lt; Exit [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:56.496 (6.875s)&#xA;&gt; Enter [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:34 @ 04/04/23 18:29:56.496&#xA;&lt; Exit [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:34 @ 04/04/23 18:30:00.515 (4.019s)&#xA;&gt; Enter [It] should exists Server header in the response when is enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:50 @ 04/04/23 18:30:00.515&#xA;&lt; Exit [It] should exists Server header in the response when is enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:50 @ 04/04/23 18:30:17.68 (17.166s)&#xA;&gt; Enter [AfterEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:17.68&#xA;&lt; Exit [AfterEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:17.86 (179ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName works with external name set to incomplete fqdn" classname="nginx-ingress-controller e2e suite" status="passed" time="21.343180997">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:17.86&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:24.767 (6.907s)&#xA;&gt; Enter [It] works with external name set to incomplete fqdn - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:62 @ 04/04/23 18:30:24.767&#xA;&lt; Exit [It] works with external name set to incomplete fqdn - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:62 @ 04/04/23 18:30:38.985 (14.218s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:38.985&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:39.203 (218ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Debug CLI should list the backend servers" classname="nginx-ingress-controller e2e suite" status="passed" time="22.378504517">
              <system-err>&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:39.204&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:47.098 (7.895s)&#xA;&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 04/04/23 18:30:47.098&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 04/04/23 18:30:51.122 (4.023s)&#xA;&gt; Enter [It] should list the backend servers - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:37 @ 04/04/23 18:30:51.122&#xA;&lt; Exit [It] should list the backend servers - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:37 @ 04/04/23 18:31:01.391 (10.269s)&#xA;&gt; Enter [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:31:01.391&#xA;&lt; Exit [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:31:01.582 (191ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* does not crash when canary ingress has multiple paths to the same non-matching backend" classname="nginx-ingress-controller e2e suite" status="passed" time="32.459393771">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:31:01.582&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:31:08.498 (6.915s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:31:08.498&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:31:16.564 (8.066s)&#xA;&gt; Enter [It] does not crash when canary ingress has multiple paths to the same non-matching backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:915 @ 04/04/23 18:31:16.564&#xA;&lt; Exit [It] does not crash when canary ingress has multiple paths to the same non-matching backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:915 @ 04/04/23 18:31:33.8 (17.236s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:31:33.8&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:31:34.042 (242ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] service-upstream when using the default value (false) and enabling in the annotations should use the Service Cluster IP and Port" classname="nginx-ingress-controller e2e suite" status="passed" time="21.449933338">
              <system-err>&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:31:34.042&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:31:40.946 (6.904s)&#xA;&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 04/04/23 18:31:40.946&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 04/04/23 18:31:44.981 (4.035s)&#xA;&gt; Enter [It] should use the Service Cluster IP and Port  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:41 @ 04/04/23 18:31:44.981&#xA;STEP: checking if the service is reached - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:53 @ 04/04/23 18:31:55.094&#xA;STEP: checking if the Service Cluster IP and Port are used - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:60 @ 04/04/23 18:31:55.098&#xA;&lt; Exit [It] should use the Service Cluster IP and Port  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:41 @ 04/04/23 18:31:55.252 (10.271s)&#xA;&gt; Enter [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:31:55.252&#xA;&lt; Exit [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:31:55.492 (240ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity when enable-owasp-modsecurity-crs is set to true" classname="nginx-ingress-controller e2e suite" status="passed" time="40.260077601">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:31:55.493&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:02.366 (6.874s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:32:02.366&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:32:06.394 (4.028s)&#xA;&gt; Enter [It] should enable modsecurity when enable-owasp-modsecurity-crs is set to true - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:225 @ 04/04/23 18:32:06.394&#xA;&lt; Exit [It] should enable modsecurity when enable-owasp-modsecurity-crs is set to true - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:225 @ 04/04/23 18:32:35.569 (29.175s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:35.569&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:35.753 (184ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Security] Pod Security Policies with volumes should be running with a Pod Security Policy" classname="nginx-ingress-controller e2e suite" status="skipped" time="7.104968031">
              <skipped message="skipped - PSP not supported in this version"></skipped>
              <system-err>&gt; Enter [BeforeEach] [Security] Pod Security Policies with volumes - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:35.753&#xA;&lt; Exit [BeforeEach] [Security] Pod Security Policies with volumes - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:42.66 (6.907s)&#xA;&gt; Enter [It] should be running with a Pod Security Policy - /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy_volumes.go:40 @ 04/04/23 18:32:42.66&#xA;[SKIPPED] PSP not supported in this version&#xA;In [It] at: /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy_volumes.go:53 @ 04/04/23 18:32:42.661&#xA;&lt; Exit [It] should be running with a Pod Security Policy - /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy_volumes.go:40 @ 04/04/23 18:32:42.661 (1ms)&#xA;&gt; Enter [AfterEach] [Security] Pod Security Policies with volumes - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:42.661&#xA;&lt; Exit [AfterEach] [Security] Pod Security Policies with volumes - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:42.858 (197ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] permanent-redirect permanent-redirect-code should respond with a custom redirect code" classname="nginx-ingress-controller e2e suite" status="passed" time="17.246524814">
              <system-err>&gt; Enter [BeforeEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:42.858&#xA;&lt; Exit [BeforeEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:32:49.722 (6.864s)&#xA;&gt; Enter [It] should respond with a custom redirect code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:61 @ 04/04/23 18:32:49.722&#xA;STEP: setting permanent-redirect-code annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:62 @ 04/04/23 18:32:49.722&#xA;STEP: sending request to redirected URL path - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:82 @ 04/04/23 18:32:59.899&#xA;&lt; Exit [It] should respond with a custom redirect code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:61 @ 04/04/23 18:32:59.901 (10.18s)&#xA;&gt; Enter [AfterEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:32:59.901&#xA;&lt; Exit [AfterEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:00.105 (203ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check proxy header hash size should set proxy-headers-hash-bucket-size" classname="nginx-ingress-controller e2e suite" status="passed" time="29.32779995">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:00.105&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:07.991 (7.886s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 04/04/23 18:33:07.991&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 04/04/23 18:33:19.06 (11.069s)&#xA;&gt; Enter [It] should set proxy-headers-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:60 @ 04/04/23 18:33:19.06&#xA;&lt; Exit [It] should set proxy-headers-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:60 @ 04/04/23 18:33:29.206 (10.146s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:29.206&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:29.433 (227ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow correct origins - single origin for multiple cors values" classname="nginx-ingress-controller e2e suite" status="passed" time="20.137438453">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:29.433&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:36.312 (6.878s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:33:36.312&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:33:42.335 (6.023s)&#xA;&gt; Enter [It] should allow correct origins - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:216 @ 04/04/23 18:33:42.335&#xA;&lt; Exit [It] should allow correct origins - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:216 @ 04/04/23 18:33:49.381 (7.046s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:49.381&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:33:49.571 (190ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should disable default modsecurity conf setting when modsecurity-snippet is specified" classname="nginx-ingress-controller e2e suite" status="passed" time="33.33883845">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:49.571&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:33:56.527 (6.956s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:33:56.527&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:34:00.557 (4.03s)&#xA;&gt; Enter [It] should disable default modsecurity conf setting when modsecurity-snippet is specified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:347 @ 04/04/23 18:34:00.557&#xA;&lt; Exit [It] should disable default modsecurity conf setting when modsecurity-snippet is specified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:347 @ 04/04/23 18:34:22.694 (22.137s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:22.694&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:22.91 (216ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [TCP] tcp-services should expose a TCP service" classname="nginx-ingress-controller e2e suite" status="passed" time="14.259355858">
              <system-err>&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:22.91&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:29.807 (6.897s)&#xA;&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 04/04/23 18:34:29.807&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 04/04/23 18:34:29.814 (6ms)&#xA;&gt; Enter [It] should expose a TCP service - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:46 @ 04/04/23 18:34:29.814&#xA;&lt; Exit [It] should expose a TCP service - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:46 @ 04/04/23 18:34:36.97 (7.156s)&#xA;&gt; Enter [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:36.97&#xA;&lt; Exit [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:34:37.169 (200ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity through the config map" classname="nginx-ingress-controller e2e suite" status="passed" time="41.348214262">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:37.17&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:34:45.073 (7.903s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:34:45.073&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:34:49.091 (4.018s)&#xA;&gt; Enter [It] should enable modsecurity through the config map - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:264 @ 04/04/23 18:34:49.091&#xA;&lt; Exit [It] should enable modsecurity through the config map - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:264 @ 04/04/23 18:35:18.316 (29.225s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:18.316&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:18.518 (202ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] reuse-port reuse port should be enabled by default" classname="nginx-ingress-controller e2e suite" status="passed" time="21.391567166">
              <system-err>&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:18.518&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:25.408 (6.889s)&#xA;&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 04/04/23 18:35:25.408&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 04/04/23 18:35:36.46 (11.052s)&#xA;&gt; Enter [It] reuse port should be enabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:38 @ 04/04/23 18:35:36.46&#xA;&lt; Exit [It] reuse port should be enabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:38 @ 04/04/23 18:35:39.652 (3.192s)&#xA;&gt; Enter [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:39.652&#xA;&lt; Exit [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:35:39.91 (258ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class Without IngressClass Cluster scoped Permission should watch Ingress with correct annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="29.330715429">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:39.91&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:35:46.843 (6.933s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:35:46.843&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:35:50.861 (4.018s)&#xA;&gt; Enter [BeforeEach] Without IngressClass Cluster scoped Permission - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:587 @ 04/04/23 18:35:50.861&#xA;&lt; Exit [BeforeEach] Without IngressClass Cluster scoped Permission - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:587 @ 04/04/23 18:35:58.882 (8.021s)&#xA;&gt; Enter [It] should watch Ingress with correct annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:631 @ 04/04/23 18:35:58.882&#xA;&lt; Exit [It] should watch Ingress with correct annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:631 @ 04/04/23 18:36:09.027 (10.145s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:09.027&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:09.241 (213ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] [PathType] prefix checks should return 404 when prefix /aaa does not match request /aaaccc" classname="nginx-ingress-controller e2e suite" status="passed" time="22.814127467">
              <system-err>&gt; Enter [BeforeEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:09.241&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:17.143 (7.901s)&#xA;&gt; Enter [BeforeEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_prefix.go:31 @ 04/04/23 18:36:17.143&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_prefix.go:31 @ 04/04/23 18:36:21.166 (4.023s)&#xA;&gt; Enter [It] should return 404 when prefix /aaa does not match request /aaaccc - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_prefix.go:35 @ 04/04/23 18:36:21.166&#xA;&lt; Exit [It] should return 404 when prefix /aaa does not match request /aaaccc - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_prefix.go:35 @ 04/04/23 18:36:31.412 (10.246s)&#xA;&gt; Enter [AfterEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:31.412&#xA;&lt; Exit [AfterEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:32.055 (644ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] mirror-* should set mirror-target to https://test.env.com/$request_uri" classname="nginx-ingress-controller e2e suite" status="passed" time="22.284646292">
              <system-err>&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:32.057&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:39.923 (7.865s)&#xA;&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 04/04/23 18:36:39.923&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 04/04/23 18:36:43.949 (4.026s)&#xA;&gt; Enter [It] should set mirror-target to https://test.env.com/$request_uri - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:51 @ 04/04/23 18:36:43.949&#xA;&lt; Exit [It] should set mirror-target to https://test.env.com/$request_uri - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:51 @ 04/04/23 18:36:54.141 (10.192s)&#xA;&gt; Enter [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:54.141&#xA;&lt; Exit [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:36:54.342 (200ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should set valid auth-tls-secret, sslVerify to off, and sslVerifyDepth to 2" classname="nginx-ingress-controller e2e suite" status="passed" time="23.733756697">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:36:54.342&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:01.212 (6.87s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 04/04/23 18:37:01.212&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 04/04/23 18:37:07.231 (6.019s)&#xA;&gt; Enter [It] should set valid auth-tls-secret, sslVerify to off, and sslVerifyDepth to 2 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:84 @ 04/04/23 18:37:07.231&#xA;&lt; Exit [It] should set valid auth-tls-secret, sslVerify to off, and sslVerifyDepth to 2 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:84 @ 04/04/23 18:37:17.855 (10.625s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:17.855&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:18.076 (221ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should work with use-regex annotation and session-cookie-path" classname="nginx-ingress-controller e2e suite" status="passed" time="22.376606309">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:18.076&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:25.984 (7.907s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:37:25.984&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:37:30.003 (4.019s)&#xA;&gt; Enter [It] should work with use-regex annotation and session-cookie-path - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:270 @ 04/04/23 18:37:30.003&#xA;&lt; Exit [It] should work with use-regex annotation and session-cookie-path - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:270 @ 04/04/23 18:37:40.203 (10.201s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:40.203&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:40.453 (250ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] ssl-ciphers Add ssl ciphers" classname="nginx-ingress-controller e2e suite" status="passed" time="17.271588421">
              <system-err>&gt; Enter [BeforeEach] [Setting] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:40.453&#xA;&lt; Exit [BeforeEach] [Setting] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:47.317 (6.864s)&#xA;&gt; Enter [It] Add ssl ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_ciphers.go:31 @ 04/04/23 18:37:47.317&#xA;&lt; Exit [It] Add ssl ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_ciphers.go:31 @ 04/04/23 18:37:57.514 (10.197s)&#xA;&gt; Enter [AfterEach] [Setting] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:57.514&#xA;&lt; Exit [AfterEach] [Setting] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:37:57.725 (211ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 200 when authentication is configured and Authorization header is sent" classname="nginx-ingress-controller e2e suite" status="passed" time="23.036361577">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:37:57.725&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:04.608 (6.883s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:38:04.608&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:38:08.636 (4.028s)&#xA;&gt; Enter [It] should return status code 200 when authentication is configured and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:172 @ 04/04/23 18:38:08.636&#xA;&lt; Exit [It] should return status code 200 when authentication is configured and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:172 @ 04/04/23 18:38:20.58 (11.945s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:20.58&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:20.761 (181ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should set proxy_redirect to hello.com goodbye.com" classname="nginx-ingress-controller e2e suite" status="passed" time="21.346400057">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:20.762&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:27.757 (6.995s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:38:27.757&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:38:31.784 (4.027s)&#xA;&gt; Enter [It] should set proxy_redirect to hello.com goodbye.com - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:68 @ 04/04/23 18:38:31.784&#xA;&lt; Exit [It] should set proxy_redirect to hello.com goodbye.com - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:68 @ 04/04/23 18:38:41.901 (10.118s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:41.901&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:42.108 (207ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] access-log access-log-path use the default configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="11.334209829">
              <system-err>&gt; Enter [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:42.108&#xA;&lt; Exit [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:50.04 (7.932s)&#xA;&gt; Enter [It] use the default configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:32 @ 04/04/23 18:38:50.04&#xA;&lt; Exit [It] use the default configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:32 @ 04/04/23 18:38:53.238 (3.198s)&#xA;&gt; Enter [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:53.238&#xA;&lt; Exit [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:38:53.443 (205ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should not exists opentracing directive" classname="nginx-ingress-controller e2e suite" status="passed" time="28.224804352">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:38:53.443&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:00.319 (6.876s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:39:00.319&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:39:04.344 (4.026s)&#xA;&gt; Enter [It] should not exists opentracing directive - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:58 @ 04/04/23 18:39:04.344&#xA;&lt; Exit [It] should not exists opentracing directive - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:58 @ 04/04/23 18:39:21.438 (17.094s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:21.438&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:21.668 (229ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:39:21.668&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:39:21.668 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-catch-all should delete Ingress updated to catch-all" classname="nginx-ingress-controller e2e suite" status="passed" time="33.741887473">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:21.67&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:29.901 (8.232s)&#xA;&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 04/04/23 18:39:29.901&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 04/04/23 18:39:40.966 (11.065s)&#xA;&gt; Enter [It] should delete Ingress updated to catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:81 @ 04/04/23 18:39:40.966&#xA;&lt; Exit [It] should delete Ingress updated to catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:81 @ 04/04/23 18:39:55.23 (14.264s)&#xA;&gt; Enter [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:55.23&#xA;&lt; Exit [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:39:55.411 (181ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by weight should route requests only to mainline if canary weight is 0" classname="nginx-ingress-controller e2e suite" status="passed" time="36.538414445">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:39:55.412&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:40:03.291 (7.88s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:40:03.291&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:40:11.34 (8.049s)&#xA;&gt; Enter [It] should route requests only to mainline if canary weight is 0 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:705 @ 04/04/23 18:40:11.34&#xA;&lt; Exit [It] should route requests only to mainline if canary weight is 0 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:705 @ 04/04/23 18:40:31.758 (20.417s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:31.758&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:40:31.95 (192ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] single ingress - multiple hosts should set the correct $service_name NGINX variable" classname="nginx-ingress-controller e2e suite" status="passed" time="29.458771949">
              <system-err>&gt; Enter [BeforeEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:40:31.951&#xA;&lt; Exit [BeforeEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:40:39.859 (7.909s)&#xA;&gt; Enter [BeforeEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/multiple_rules.go:33 @ 04/04/23 18:40:39.859&#xA;&lt; Exit [BeforeEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/multiple_rules.go:33 @ 04/04/23 18:40:47.913 (8.054s)&#xA;&gt; Enter [It] should set the correct $service_name NGINX variable - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/multiple_rules.go:38 @ 04/04/23 18:40:47.913&#xA;&lt; Exit [It] should set the correct $service_name NGINX variable - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/multiple_rules.go:38 @ 04/04/23 18:41:01.214 (13.301s)&#xA;&gt; Enter [AfterEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:41:01.214&#xA;&lt; Exit [AfterEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:41:01.409 (195ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With watch-ingress-without-class flag should watch Ingress with no class and ignore ingress with a different class" classname="nginx-ingress-controller e2e suite" status="passed" time="45.14197691">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:04:19.256&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:04:27.796 (8.54s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:04:27.796&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:04:39.83 (12.034s)&#xA;&gt; Enter [BeforeEach] With watch-ingress-without-class flag - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:462 @ 04/04/23 18:04:39.83&#xA;&lt; Exit [BeforeEach] With watch-ingress-without-class flag - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:462 @ 04/04/23 18:04:46.871 (7.041s)&#xA;&gt; Enter [It] should watch Ingress with no class and ignore ingress with a different class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:482 @ 04/04/23 18:04:46.871&#xA;&lt; Exit [It] should watch Ingress with no class and ignore ingress with a different class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:482 @ 04/04/23 18:05:04.134 (17.262s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:04.134&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:04.398 (264ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] service-upstream when enabling in the configmap should use the Service Cluster IP and Port" classname="nginx-ingress-controller e2e suite" status="passed" time="28.567748572">
              <system-err>&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:04.398&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:11.399 (7.001s)&#xA;&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 04/04/23 18:05:11.399&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 04/04/23 18:05:15.426 (4.027s)&#xA;&gt; Enter [It] should use the Service Cluster IP and Port  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:70 @ 04/04/23 18:05:15.426&#xA;STEP: checking if the service is reached - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:82 @ 04/04/23 18:05:32.603&#xA;STEP: checking if the Service Cluster IP and Port are used - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:89 @ 04/04/23 18:05:32.612&#xA;&lt; Exit [It] should use the Service Cluster IP and Port  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:70 @ 04/04/23 18:05:32.783 (17.357s)&#xA;&gt; Enter [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:32.783&#xA;&lt; Exit [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:05:32.966 (182ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-service-external-name should ignore services of external-name type" classname="nginx-ingress-controller e2e suite" status="passed" time="40.523434341">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:32.966&#xA;&lt; Exit [BeforeEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:05:40.858 (7.892s)&#xA;&gt; Enter [BeforeEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_service_external_name.go:38 @ 04/04/23 18:05:40.858&#xA;&lt; Exit [BeforeEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_service_external_name.go:38 @ 04/04/23 18:05:52.924 (12.066s)&#xA;&gt; Enter [It] should ignore services of external-name type - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_service_external_name.go:52 @ 04/04/23 18:05:52.924&#xA;&lt; Exit [It] should ignore services of external-name type - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_service_external_name.go:52 @ 04/04/23 18:06:13.273 (20.349s)&#xA;&gt; Enter [AfterEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:13.273&#xA;&lt; Exit [AfterEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:13.49 (217ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] satisfy should configure satisfy directive correctly" classname="nginx-ingress-controller e2e suite" status="passed" time="28.489806635">
              <system-err>&gt; Enter [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:13.49&#xA;&lt; Exit [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:20.419 (6.929s)&#xA;&gt; Enter [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:38 @ 04/04/23 18:06:20.419&#xA;&lt; Exit [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:38 @ 04/04/23 18:06:24.447 (4.029s)&#xA;&gt; Enter [It] should configure satisfy directive correctly - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:42 @ 04/04/23 18:06:24.447&#xA;&lt; Exit [It] should configure satisfy directive correctly - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:42 @ 04/04/23 18:06:41.792 (17.345s)&#xA;&gt; Enter [AfterEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:41.792&#xA;&lt; Exit [AfterEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:06:41.98 (187ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the upstream keep alive should set keep alive connection timeout to upstream server" classname="nginx-ingress-controller e2e suite" status="passed" time="29.295943095">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:41.98&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:06:49.854 (7.874s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 04/04/23 18:06:49.854&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 04/04/23 18:07:00.907 (11.052s)&#xA;&gt; Enter [It] should set keep alive connection timeout to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:68 @ 04/04/23 18:07:00.907&#xA;&lt; Exit [It] should set keep alive connection timeout to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:68 @ 04/04/23 18:07:11.072 (10.166s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:11.073&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:11.276 (203ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check the map hash size should set vmap-hash-bucket-size" classname="nginx-ingress-controller e2e suite" status="passed" time="27.335942615">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:11.277&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:19.172 (7.895s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 04/04/23 18:07:19.172&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 04/04/23 18:07:28.212 (9.04s)&#xA;&gt; Enter [It] should set vmap-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:100 @ 04/04/23 18:07:28.212&#xA;&lt; Exit [It] should set vmap-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:100 @ 04/04/23 18:07:38.38 (10.168s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:38.38&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:07:38.612 (232ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Load Balancer] load-balance should apply the configmap load-balance setting" classname="nginx-ingress-controller e2e suite" status="passed" time="28.614638536">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:38.613&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:07:45.664 (7.051s)&#xA;&gt; Enter [BeforeEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/configmap.go:31 @ 04/04/23 18:07:45.664&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/configmap.go:31 @ 04/04/23 18:07:49.689 (4.025s)&#xA;&gt; Enter [It] should apply the configmap load-balance setting - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/configmap.go:35 @ 04/04/23 18:07:49.689&#xA;&lt; Exit [It] should apply the configmap load-balance setting - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/configmap.go:35 @ 04/04/23 18:08:07.048 (17.358s)&#xA;&gt; Enter [AfterEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:08:07.048&#xA;&lt; Exit [AfterEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:08:07.227 (180ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - GRPC authorization metadata should be overwritten by external auth response headers" classname="nginx-ingress-controller e2e suite" status="passed" time="157.156535928">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:08:07.228&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:25.86 (2m18.633s)&#xA;&gt; Enter [It] authorization metadata should be overwritten by external auth response headers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:126 @ 04/04/23 18:10:25.86&#xA;&lt; Exit [It] authorization metadata should be overwritten by external auth response headers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:126 @ 04/04/23 18:10:44.166 (18.305s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:44.166&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:10:44.384 (218ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should update the external name after a service update" classname="nginx-ingress-controller e2e suite" status="passed" time="22.917038202">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:44.385&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:10:51.27 (6.885s)&#xA;&gt; Enter [It] should update the external name after a service update - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:248 @ 04/04/23 18:10:51.27&#xA;STEP: checking the service is updated to use eu.httpbin.org - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:304 @ 04/04/23 18:11:06.958&#xA;&lt; Exit [It] should update the external name after a service update - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:248 @ 04/04/23 18:11:07.097 (15.827s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:07.097&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:07.302 (205ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-ssl-* should set valid proxy-ssl-secret, proxy-ssl-verify to on, proxy-ssl-verify-depth to 2, and proxy-ssl-server-name to on" classname="nginx-ingress-controller e2e suite" status="passed" time="23.058976901">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:07.302&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:15.212 (7.91s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 04/04/23 18:11:15.212&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 04/04/23 18:11:19.237 (4.025s)&#xA;&gt; Enter [It] should set valid proxy-ssl-secret, proxy-ssl-verify to on, proxy-ssl-verify-depth to 2, and proxy-ssl-server-name to on - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:64 @ 04/04/23 18:11:19.237&#xA;&lt; Exit [It] should set valid proxy-ssl-secret, proxy-ssl-verify to on, proxy-ssl-verify-depth to 2, and proxy-ssl-server-name to on - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:64 @ 04/04/23 18:11:30.15 (10.913s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:30.15&#xA;&lt; Exit [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:30.361 (211ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] enable-access-log enable-rewrite-log set rewrite_log on" classname="nginx-ingress-controller e2e suite" status="passed" time="19.342099122">
              <system-err>&gt; Enter [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:30.361&#xA;&lt; Exit [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:37.259 (6.898s)&#xA;&gt; Enter [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:30 @ 04/04/23 18:11:37.259&#xA;&lt; Exit [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:30 @ 04/04/23 18:11:39.287 (2.028s)&#xA;&gt; Enter [It] set rewrite_log on - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:49 @ 04/04/23 18:11:39.287&#xA;&lt; Exit [It] set rewrite_log on - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:49 @ 04/04/23 18:11:49.482 (10.195s)&#xA;&gt; Enter [AfterEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:49.482&#xA;&lt; Exit [AfterEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:11:49.703 (222ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] reuse-port reuse port should be enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="28.444903559">
              <system-err>&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:49.704&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:11:56.672 (6.968s)&#xA;&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 04/04/23 18:11:56.672&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 04/04/23 18:12:07.713 (11.041s)&#xA;&gt; Enter [It] reuse port should be enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:52 @ 04/04/23 18:12:07.713&#xA;&lt; Exit [It] reuse port should be enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:52 @ 04/04/23 18:12:17.909 (10.196s)&#xA;&gt; Enter [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:17.909&#xA;&lt; Exit [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:18.149 (239ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with value and cookie should route requests to the correct upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="33.34510439">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:18.149&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:26.102 (7.953s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:12:26.102&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 04/04/23 18:12:34.143 (8.041s)&#xA;&gt; Enter [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:604 @ 04/04/23 18:12:34.143&#xA;STEP: routing requests to the canary upstream when header value does not match and cookie is set to &#39;always&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:630 @ 04/04/23 18:12:51.301&#xA;&lt; Exit [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:604 @ 04/04/23 18:12:51.309 (17.166s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:51.309&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:12:51.494 (185ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] server-snippet drops server snippet if disabled by the administrator" classname="nginx-ingress-controller e2e suite" status="passed" time="40.379085957">
              <system-err>&gt; Enter [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:51.494&#xA;&lt; Exit [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:12:58.391 (6.897s)&#xA;&gt; Enter [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:31 @ 04/04/23 18:12:58.391&#xA;&lt; Exit [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:31 @ 04/04/23 18:13:02.411 (4.02s)&#xA;&gt; Enter [It] drops server snippet if disabled by the administrator - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:61 @ 04/04/23 18:13:02.411&#xA;&lt; Exit [It] drops server snippet if disabled by the administrator - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:61 @ 04/04/23 18:13:31.674 (29.262s)&#xA;&gt; Enter [AfterEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:31.674&#xA;&lt; Exit [AfterEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:31.873 (199ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] access-log stream-access-log-path use the specified configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="17.302948605">
              <system-err>&gt; Enter [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:31.874&#xA;&lt; Exit [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:38.753 (6.879s)&#xA;&gt; Enter [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:67 @ 04/04/23 18:13:38.753&#xA;&lt; Exit [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:67 @ 04/04/23 18:13:48.95 (10.197s)&#xA;&gt; Enter [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:48.95&#xA;&lt; Exit [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:49.177 (226ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Security] Pod Security Policies should be running with a Pod Security Policy" classname="nginx-ingress-controller e2e suite" status="skipped" time="8.138943568">
              <skipped message="skipped - PSP not supported in this version"></skipped>
              <system-err>&gt; Enter [BeforeEach] [Security] Pod Security Policies - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:49.177&#xA;&lt; Exit [BeforeEach] [Security] Pod Security Policies - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:57.081 (7.904s)&#xA;&gt; Enter [It] should be running with a Pod Security Policy - /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy.go:44 @ 04/04/23 18:13:57.081&#xA;[SKIPPED] PSP not supported in this version&#xA;In [It] at: /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy.go:56 @ 04/04/23 18:13:57.084&#xA;&lt; Exit [It] should be running with a Pod Security Policy - /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy.go:44 @ 04/04/23 18:13:57.084 (2ms)&#xA;&gt; Enter [AfterEach] [Security] Pod Security Policies - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:57.084&#xA;&lt; Exit [AfterEach] [Security] Pod Security Policies - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:13:57.316 (232ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity with snippet and block requests" classname="nginx-ingress-controller e2e suite" status="passed" time="33.391362002">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:13:57.316&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:04.203 (6.887s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:14:04.203&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:14:08.231 (4.028s)&#xA;&gt; Enter [It] should enable modsecurity with snippet and block requests - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:153 @ 04/04/23 18:14:08.231&#xA;&lt; Exit [It] should enable modsecurity with snippet and block requests - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:153 @ 04/04/23 18:14:30.484 (22.253s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:30.484&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:14:30.708 (223ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-sync-events should not create sync events" classname="nginx-ingress-controller e2e suite" status="passed" time="30.323049827">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:30.708&#xA;&lt; Exit [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:14:37.628 (6.92s)&#xA;&gt; Enter [It] should not create sync events - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:80 @ 04/04/23 18:14:37.628&#xA;&lt; Exit [It] should not create sync events - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:80 @ 04/04/23 18:15:00.832 (23.203s)&#xA;&gt; Enter [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:00.832&#xA;&lt; Exit [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:01.031 (199ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should validate auth-tls-verify-client" classname="nginx-ingress-controller e2e suite" status="passed" time="26.051870766">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:01.031&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:07.953 (6.922s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 04/04/23 18:15:07.953&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 04/04/23 18:15:11.978 (4.025s)&#xA;&gt; Enter [It] should validate auth-tls-verify-client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:206 @ 04/04/23 18:15:11.978&#xA;&lt; Exit [It] should validate auth-tls-verify-client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:206 @ 04/04/23 18:15:26.888 (14.91s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:26.888&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:27.083 (195ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should enable opentracing using zipkin" classname="nginx-ingress-controller e2e suite" status="passed" time="32.217906581">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:27.083&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:34.978 (7.895s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:15:34.978&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 04/04/23 18:15:39.01 (4.032s)&#xA;&gt; Enter [It] should enable opentracing using zipkin - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:160 @ 04/04/23 18:15:39.01&#xA;&lt; Exit [It] should enable opentracing using zipkin - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:160 @ 04/04/23 18:15:59.042 (20.032s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:59.042&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:15:59.301 (259ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:15:59.301&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 04/04/23 18:15:59.301 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates given an ingress with TLS correctly configured picks up a non-certificate only change" classname="nginx-ingress-controller e2e suite" status="passed" time="42.603077039">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:15:59.302&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:06.324 (7.022s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 04/04/23 18:16:06.324&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 04/04/23 18:16:10.352 (4.028s)&#xA;&gt; Enter [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 04/04/23 18:16:10.352&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:128 @ 04/04/23 18:16:28.235&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:136 @ 04/04/23 18:16:36.64&#xA;&lt; Exit [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 04/04/23 18:16:36.649 (26.297s)&#xA;&gt; Enter [It] picks up a non-certificate only change - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:218 @ 04/04/23 18:16:36.649&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:229 @ 04/04/23 18:16:41.653&#xA;&lt; Exit [It] picks up a non-certificate only change - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:218 @ 04/04/23 18:16:41.686 (5.038s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:41.686&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:16:41.905 (219ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] enable-real-ip should not trust X-Forwarded-For header when setting is false" classname="nginx-ingress-controller e2e suite" status="passed" time="35.362528503">
              <system-err>&gt; Enter [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:41.905&#xA;&lt; Exit [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:16:48.792 (6.887s)&#xA;&gt; Enter [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:35 @ 04/04/23 18:16:48.792&#xA;&lt; Exit [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:35 @ 04/04/23 18:16:59.851 (11.059s)&#xA;&gt; Enter [It] should not trust X-Forwarded-For header when setting is false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:78 @ 04/04/23 18:16:59.851&#xA;&lt; Exit [It] should not trust X-Forwarded-For header when setting is false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:78 @ 04/04/23 18:17:17.088 (17.237s)&#xA;&gt; Enter [AfterEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:17.088&#xA;&lt; Exit [AfterEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:17.268 (179ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic configuration configures balancer Lua middleware correctly" classname="nginx-ingress-controller e2e suite" status="passed" time="28.627555304">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:17.268&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:25.143 (7.875s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 04/04/23 18:17:25.143&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 04/04/23 18:17:39.338 (14.195s)&#xA;&gt; Enter [It] configures balancer Lua middleware correctly - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:50 @ 04/04/23 18:17:39.338&#xA;&lt; Exit [It] configures balancer Lua middleware correctly - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:50 @ 04/04/23 18:17:45.709 (6.371s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:45.709&#xA;&lt; Exit [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:17:45.895 (186ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url cookie set by external authentication server user does not retain cookie if upstream returns error status code" classname="nginx-ingress-controller e2e suite" status="passed" time="43.374170474">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:45.896&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:17:52.77 (6.874s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:17:52.77&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 04/04/23 18:18:00.824 (8.054s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 04/04/23 18:18:00.824&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 04/04/23 18:18:29.039 (28.216s)&#xA;&gt; Enter [It] user does not retain cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:337 @ 04/04/23 18:18:29.039&#xA;&lt; Exit [It] user does not retain cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:337 @ 04/04/23 18:18:29.048 (9ms)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:29.048&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:29.27 (222ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow - single origin with required port" classname="nginx-ingress-controller e2e suite" status="passed" time="18.648918317">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:29.27&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:36.638 (7.367s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:18:36.638&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:18:40.656 (4.018s)&#xA;&gt; Enter [It] should allow - single origin with required port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:358 @ 04/04/23 18:18:40.656&#xA;&lt; Exit [It] should allow - single origin with required port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:358 @ 04/04/23 18:18:47.695 (7.04s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:47.695&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:18:47.919 (224ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] configuration-snippet drops snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations if disabled by admin&#34;" classname="nginx-ingress-controller e2e suite" status="passed" time="40.641495701">
              <system-err>&gt; Enter [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:47.919&#xA;&lt; Exit [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:18:54.793 (6.873s)&#xA;&gt; Enter [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:31 @ 04/04/23 18:18:54.793&#xA;&lt; Exit [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:31 @ 04/04/23 18:18:58.818 (4.026s)&#xA;&gt; Enter [It] drops snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations if disabled by admin&#34; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:58 @ 04/04/23 18:18:58.818&#xA;&lt; Exit [It] drops snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations if disabled by admin&#34; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:58 @ 04/04/23 18:19:28.082 (29.263s)&#xA;&gt; Enter [AfterEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:28.082&#xA;&lt; Exit [AfterEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:28.561 (479ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] upstream-vhost set host to upstreamvhost.bar.com" classname="nginx-ingress-controller e2e suite" status="passed" time="22.366668485">
              <system-err>&gt; Enter [BeforeEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:28.561&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:36.485 (7.924s)&#xA;&gt; Enter [BeforeEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamvhost.go:30 @ 04/04/23 18:19:36.485&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamvhost.go:30 @ 04/04/23 18:19:40.514 (4.029s)&#xA;&gt; Enter [It] set host to upstreamvhost.bar.com - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamvhost.go:34 @ 04/04/23 18:19:40.514&#xA;&lt; Exit [It] set host to upstreamvhost.bar.com - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamvhost.go:34 @ 04/04/23 18:19:50.715 (10.201s)&#xA;&gt; Enter [AfterEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:50.715&#xA;&lt; Exit [AfterEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:19:50.928 (213ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should turn on proxy-buffering" classname="nginx-ingress-controller e2e suite" status="passed" time="24.539076289">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:50.928&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:19:59.376 (8.447s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:19:59.376&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 04/04/23 18:20:03.412 (4.036s)&#xA;&gt; Enter [It] should turn on proxy-buffering - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:157 @ 04/04/23 18:20:03.412&#xA;&lt; Exit [It] should turn on proxy-buffering - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:157 @ 04/04/23 18:20:13.859 (10.448s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:13.859&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:20:15.468 (1.608s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [TCP] tcp-services should reload after an update in the configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="155.065694354">
              <system-err>&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:20:15.468&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:32.896 (2m17.428s)&#xA;&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 04/04/23 18:22:32.896&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 04/04/23 18:22:32.905 (9ms)&#xA;&gt; Enter [It] should reload after an update in the configuration - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:169 @ 04/04/23 18:22:32.905&#xA;STEP: setting up a first deployment - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:171 @ 04/04/23 18:22:32.905&#xA;STEP: updating the tcp service to a second deployment - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:196 @ 04/04/23 18:22:40.099&#xA;&lt; Exit [It] should reload after an update in the configuration - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:169 @ 04/04/23 18:22:50.31 (17.405s)&#xA;&gt; Enter [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:50.31&#xA;&lt; Exit [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:22:50.534 (224ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not break functionality - without `*`" classname="nginx-ingress-controller e2e suite" status="passed" time="18.076988583">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:50.534&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:22:57.402 (6.868s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:22:57.402&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:23:01.417 (4.015s)&#xA;&gt; Enter [It] should not break functionality - without `*` - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:291 @ 04/04/23 18:23:01.417&#xA;&lt; Exit [It] should not break functionality - without `*` - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:291 @ 04/04/23 18:23:08.429 (7.012s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:08.429&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:08.611 (182ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set secure in cookie with provided false annotation on https" classname="nginx-ingress-controller e2e suite" status="passed" time="21.337074474">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:08.611&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:15.499 (6.888s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:23:15.499&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:23:19.526 (4.026s)&#xA;&gt; Enter [It] should set secure in cookie with provided false annotation on https - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:458 @ 04/04/23 18:23:19.526&#xA;&lt; Exit [It] should set secure in cookie with provided false annotation on https - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:458 @ 04/04/23 18:23:29.716 (10.19s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:29.716&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:29.948 (233ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 401 when authentication is configured and Authorization header is sent with invalid credentials" classname="nginx-ingress-controller e2e suite" status="passed" time="22.23359748">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:29.949&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:36.837 (6.888s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:23:36.837&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:23:40.864 (4.027s)&#xA;&gt; Enter [It] should return status code 401 when authentication is configured and Authorization header is sent with invalid credentials - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:116 @ 04/04/23 18:23:40.864&#xA;&lt; Exit [It] should return status code 401 when authentication is configured and Authorization header is sent with invalid credentials - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:116 @ 04/04/23 18:23:51.976 (11.112s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:51.976&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:23:52.182 (206ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure Opentelemetry should exists opentelemetry_operation_name directive when is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="30.105451465">
              <system-err>&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:23:52.183&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:00.596 (8.414s)&#xA;&gt; Enter [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 04/04/23 18:24:00.596&#xA;&lt; Exit [BeforeEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:40 @ 04/04/23 18:24:04.625 (4.028s)&#xA;&gt; Enter [It] should exists opentelemetry_operation_name directive when is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:104 @ 04/04/23 18:24:04.625&#xA;&lt; Exit [It] should exists opentelemetry_operation_name directive when is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:104 @ 04/04/23 18:24:21.864 (17.239s)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:21.864&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:22.288 (424ms)&#xA;&gt; Enter [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 04/04/23 18:24:22.288&#xA;&lt; Exit [AfterEach] Configure Opentelemetry - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentelemetry.go:44 @ 04/04/23 18:24:22.288 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should set cache_key when external auth cache is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="20.270369293999998">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:22.289&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:30.179 (7.89s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:24:30.179&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 04/04/23 18:24:32.201 (2.022s)&#xA;&gt; Enter [It] should set cache_key when external auth cache is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:322 @ 04/04/23 18:24:32.201&#xA;&lt; Exit [It] should set cache_key when external auth cache is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:322 @ 04/04/23 18:24:42.391 (10.19s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:42.391&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:24:42.559 (169ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should work with server-alias annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="23.332291638">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:42.559&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:24:49.462 (6.902s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:24:49.462&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 04/04/23 18:24:55.483 (6.021s)&#xA;&gt; Enter [It] should work with server-alias annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:372 @ 04/04/23 18:24:55.483&#xA;&lt; Exit [It] should work with server-alias annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:372 @ 04/04/23 18:25:05.677 (10.194s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:05.677&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:05.892 (215ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] access-log http-access-log-path use the specified configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="17.146392503">
              <system-err>&gt; Enter [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:05.892&#xA;&lt; Exit [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:12.767 (6.875s)&#xA;&gt; Enter [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:54 @ 04/04/23 18:25:12.767&#xA;&lt; Exit [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:54 @ 04/04/23 18:25:22.853 (10.086s)&#xA;&gt; Enter [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:22.853&#xA;&lt; Exit [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:23.038 (186ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to $scheme:// and use proxy_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="22.339493601">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:23.039&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:30.928 (7.889s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 04/04/23 18:25:30.928&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 04/04/23 18:25:34.955 (4.027s)&#xA;&gt; Enter [It] should set backend protocol to $scheme:// and use proxy_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:49 @ 04/04/23 18:25:34.955&#xA;&lt; Exit [It] should set backend protocol to $scheme:// and use proxy_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:49 @ 04/04/23 18:25:45.122 (10.167s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:45.122&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:25:45.378 (256ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With ingress-class-by-name flag should watch Ingress that uses the class name even if spec is different" classname="nginx-ingress-controller e2e suite" status="passed" time="44.416072668">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:45.378&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:25:52.259 (6.88s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:25:52.259&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 04/04/23 18:25:56.284 (4.026s)&#xA;&gt; Enter [BeforeEach] With ingress-class-by-name flag - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:518 @ 04/04/23 18:25:56.284&#xA;&lt; Exit [BeforeEach] With ingress-class-by-name flag - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:518 @ 04/04/23 18:26:05.326 (9.041s)&#xA;&gt; Enter [It] should watch Ingress that uses the class name even if spec is different - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:539 @ 04/04/23 18:26:05.326&#xA;&lt; Exit [It] should watch Ingress that uses the class name even if spec is different - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:539 @ 04/04/23 18:26:29.579 (24.254s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:29.579&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:29.795 (215ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not match" classname="nginx-ingress-controller e2e suite" status="passed" time="18.102332549">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:29.795&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:36.671 (6.876s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:26:36.671&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 04/04/23 18:26:40.694 (4.023s)&#xA;&gt; Enter [It] should not match - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:338 @ 04/04/23 18:26:40.694&#xA;&lt; Exit [It] should not match - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:338 @ 04/04/23 18:26:47.715 (7.021s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:47.715&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:26:47.897 (182ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] Configmap change should reload after an update in the configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="41.659966884">
              <system-err>&gt; Enter [BeforeEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:47.898&#xA;&lt; Exit [BeforeEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:26:54.79 (6.892s)&#xA;&gt; Enter [BeforeEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:32 @ 04/04/23 18:26:54.79&#xA;&lt; Exit [BeforeEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:32 @ 04/04/23 18:26:58.813 (4.023s)&#xA;&gt; Enter [It] should reload after an update in the configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:36 @ 04/04/23 18:26:58.813&#xA;STEP: adding a whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:42 @ 04/04/23 18:27:05.828&#xA;STEP: changing error-log-level - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:61 @ 04/04/23 18:27:16.071&#xA;&lt; Exit [It] should reload after an update in the configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:36 @ 04/04/23 18:27:29.359 (30.546s)&#xA;&gt; Enter [AfterEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:29.359&#xA;&lt; Exit [AfterEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:29.558 (198ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check the variable hash size should set variables-hash-bucket-size" classname="nginx-ingress-controller e2e suite" status="passed" time="28.276887482">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:29.558&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:36.431 (6.873s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 04/04/23 18:27:36.431&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 04/04/23 18:27:47.466 (11.035s)&#xA;&gt; Enter [It] should set variables-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:80 @ 04/04/23 18:27:47.466&#xA;&lt; Exit [It] should set variables-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:80 @ 04/04/23 18:27:57.638 (10.172s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:57.638&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:27:57.835 (197ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [SSL] [Flag] default-ssl-certificate uses default ssl certificate for catch-all ingress" classname="nginx-ingress-controller e2e suite" status="passed" time="34.780183951">
              <system-err>&gt; Enter [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:27:57.835&#xA;&lt; Exit [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:04.708 (6.873s)&#xA;&gt; Enter [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:40 @ 04/04/23 18:28:04.708&#xA;&lt; Exit [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:40 @ 04/04/23 18:28:20.208 (15.5s)&#xA;&gt; Enter [It] uses default ssl certificate for catch-all ingress - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:64 @ 04/04/23 18:28:20.208&#xA;STEP: making sure new ingress is deployed - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:68 @ 04/04/23 18:28:27.228&#xA;STEP: making sure new ingress is responding - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:74 @ 04/04/23 18:28:30.423&#xA;STEP: making sure the configured default ssl certificate is being used - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:76 @ 04/04/23 18:28:30.423&#xA;&lt; Exit [It] uses default ssl certificate for catch-all ingress - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:64 @ 04/04/23 18:28:32.435 (12.227s)&#xA;&gt; Enter [AfterEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:32.435&#xA;&lt; Exit [AfterEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:32.615 (181ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] access-log access-log-path use the specified configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="17.267999907">
              <system-err>&gt; Enter [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:32.616&#xA;&lt; Exit [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:39.497 (6.882s)&#xA;&gt; Enter [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:42 @ 04/04/23 18:28:39.497&#xA;&lt; Exit [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:42 @ 04/04/23 18:28:49.668 (10.171s)&#xA;&gt; Enter [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:49.669&#xA;&lt; Exit [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:28:49.884 (215ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity" classname="nginx-ingress-controller e2e suite" status="passed" time="21.326374759">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:49.884&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:28:56.783 (6.899s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:28:56.783&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 04/04/23 18:29:00.81 (4.027s)&#xA;&gt; Enter [It] should enable modsecurity - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:35 @ 04/04/23 18:29:00.81&#xA;&lt; Exit [It] should enable modsecurity - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:35 @ 04/04/23 18:29:10.998 (10.189s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:10.998&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:29:11.21 (212ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Shutdown] Grace period shutdown /healthz should return status code 500 during shutdown grace period" classname="nginx-ingress-controller e2e suite" status="passed" time="79.134312514">
              <system-err>&gt; Enter [BeforeEach] [Shutdown] Grace period shutdown - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:11.211&#xA;&lt; Exit [BeforeEach] [Shutdown] Grace period shutdown - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:29:19.1 (7.89s)&#xA;&gt; Enter [It] /healthz should return status code 500 during shutdown grace period - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/grace_period.go:35 @ 04/04/23 18:29:19.1&#xA;&lt; Exit [It] /healthz should return status code 500 during shutdown grace period - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/grace_period.go:35 @ 04/04/23 18:30:30.168 (1m11.068s)&#xA;&gt; Enter [AfterEach] [Shutdown] Grace period shutdown - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:30.168&#xA;&lt; Exit [AfterEach] [Shutdown] Grace period shutdown - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:30.345 (177ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] server-alias should return status code 200 for host &#39;foo&#39; and 404 for &#39;bar&#39;" classname="nginx-ingress-controller e2e suite" status="passed" time="21.338020536">
              <system-err>&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:30.345&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:37.278 (6.932s)&#xA;&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 04/04/23 18:30:37.278&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 04/04/23 18:30:41.303 (4.025s)&#xA;&gt; Enter [It] should return status code 200 for host &#39;foo&#39; and 404 for &#39;bar&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:36 @ 04/04/23 18:30:41.303&#xA;&lt; Exit [It] should return status code 200 for host &#39;foo&#39; and 404 for &#39;bar&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:36 @ 04/04/23 18:30:51.481 (10.178s)&#xA;&gt; Enter [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:51.481&#xA;&lt; Exit [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:30:51.683 (202ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-proxy-protocol should enable PROXY Protocol for TCP" classname="nginx-ingress-controller e2e suite" status="passed" time="633.259626659">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:51.684&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 04/04/23 18:30:58.618 (6.934s)&#xA;&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 04/04/23 18:30:58.618&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 04/04/23 18:31:09.663 (11.045s)&#xA;&gt; Enter [It] should enable PROXY Protocol for TCP - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:155 @ 04/04/23 18:31:09.663&#xA;Automatically polling progress:&#xA;  [Setting] use-proxy-protocol should enable PROXY Protocol for TCP (Spec Runtime: 3m17.98s)&#xA;    /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:155&#xA;    In [It] (Node Runtime: 3m0.001s)&#xA;      /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:155&#xA;&#xA;    Spec Goroutine&#xA;    goroutine 2932 [IO wait, 3 minutes]&#xA;      internal/poll.runtime_pollWait(0x7f9e883a91b8, 0x72)&#xA;        /usr/local/go/src/runtime/netpoll.go:306&#xA;      internal/poll.(*pollDesc).wait(0xc0000de300?, 0xc00098a926?, 0x0)&#xA;        /usr/local/go/src/internal/poll/fd_poll_runtime.go:84&#xA;      internal/poll.(*pollDesc).waitRead(...)&#xA;        /usr/local/go/src/internal/poll/fd_poll_runtime.go:89&#xA;      internal/poll.(*FD).Read(0xc0000de300, {0xc00098a926, 0x15a, 0x15a})&#xA;        /usr/local/go/src/internal/poll/fd_unix.go:167&#xA;      net.(*netFD).Read(0xc0000de300, {0xc00098a926?, 0x453656?, 0x380?})&#xA;        /usr/local/go/src/net/fd_posix.go:55&#xA;      net.(*conn).Read(0xc000516660, {0xc00098a926?, 0x19913c0?, 0xc00098a700?})&#xA;        /usr/local/go/src/net/net.go:183&#xA;      io.ReadAll({0x1f62de0, 0xc000516660})&#xA;        /usr/local/go/src/io/io.go:701&#xA;    &gt; k8s.io/ingress-nginx/test/e2e/settings.glob..func38.5()&#xA;        /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:211&#xA;      github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0xa0558e, 0xc000300a80})&#xA;        /go/src/k8s.io/ingress-nginx/.modcache/github.com/onsi/ginkgo/v2@v2.9.0/internal/node.go:463&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;        /go/src/k8s.io/ingress-nginx/.modcache/github.com/onsi/ginkgo/v2@v2.9.0/internal/suite.go:863&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).runNode&#xA;        /go/src/k8s.io/ingress-nginx/.modcache/github.com/onsi/ginkgo/v2@v2.9.0/internal/suite.go:850&#xA;&lt; Exit [It] should enable PROXY Protocol for TCP - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:155 @ 04/04/23 18:41:24.726 (10m15.064s)&#xA;&gt; Enter [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:41:24.726&#xA;&lt; Exit [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 04/04/23 18:41:24.943 (217ms)&#xA;</system-err>
          </testcase>
      </testsuite>
  </testsuites>